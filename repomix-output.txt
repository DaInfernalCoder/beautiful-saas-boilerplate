This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded

Additional Info:
----------------

================================================================
Directory Structure
================================================================
public/
  images/
    country.svg
    customer-sat.svg
    echo.svg
    growth.svg
    harmony.svg
    haven.svg
    logo.svg
    modern-teams.svg
    monthly-active-user.svg
    plan-organize.svg
    sage.svg
    terra.svg
    twitter.svg
    vital.svg
  file.svg
  globe.svg
  next.svg
  vercel.svg
  window.svg
src/
  app/
    globals.css
    layout.tsx
    page.tsx
  components/
    navigation/
      navbar.tsx
    ui/
      3d-pin.tsx
      accordion.tsx
      alert-dialog.tsx
      alert.tsx
      animated-beam.tsx
      animated-list.tsx
      aspect-ratio.tsx
      avatar.tsx
      badge.tsx
      bento-grid.tsx
      breadcrumb.tsx
      button.tsx
      calendar.tsx
      card.tsx
      carousel.tsx
      chart.tsx
      checkbox.tsx
      collapsible.tsx
      command.tsx
      context-menu.tsx
      custom-button.tsx
      dialog.tsx
      drawer.tsx
      dropdown-menu.tsx
      file-tree.tsx
      form.tsx
      globe.tsx
      hover-card.tsx
      icon-cloud.tsx
      input-otp.tsx
      input.tsx
      interactive-grid-pattern.tsx
      label.tsx
      marquee.tsx
      menubar.tsx
      navigation-menu.tsx
      orbiting-circles.tsx
      pagination.tsx
      popover.tsx
      progress.tsx
      radio-group.tsx
      resizable.tsx
      scroll-area.tsx
      select.tsx
      separator.tsx
      sheet.tsx
      sidebar.tsx
      skeleton.tsx
      slider.tsx
      sonner.tsx
      stacked-cards.tsx
      switch.tsx
      table.tsx
      tabs.tsx
      textarea.tsx
      toast.tsx
      toaster.tsx
      toggle-group.tsx
      toggle.tsx
      tooltip.tsx
    benefit-section.tsx
    contact-section.tsx
    cta-section.tsx
    faq-section.tsx
    feature-section.tsx
    File-tree.tsx
    footer.tsx
    hero-section.tsx
    orbitin-circle.tsx
    pricing-section.tsx
    stats-section.tsx
    testimonials-section.tsx
    used-companies.tsx
  hooks/
    use-mobile.tsx
    use-toast.ts
  lib/
    utils.ts
.gitignore
components.json
eslint.config.mjs
next.config.ts
package.json
postcss.config.mjs
README.md
tailwind.config.ts
tsconfig.json

================================================================
Files
================================================================

================
File: public/images/country.svg
================
<svg width="48" height="49" viewBox="0 0 48 49" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect y="0.129883" width="48" height="48" rx="24" fill="#68CC58"/>
<path d="M24 10.7964C16.64 10.7964 10.6667 16.7697 10.6667 24.1297C10.6667 31.4897 16.64 37.4631 24 37.4631C31.36 37.4631 37.3333 31.4897 37.3333 24.1297C37.3333 16.7697 31.36 10.7964 24 10.7964ZM22.6667 34.7031C17.4 34.0497 13.3333 29.5697 13.3333 24.1297C13.3333 23.3031 13.44 22.5164 13.6133 21.7431L20 28.1297V29.4631C20 30.9297 21.2 32.1297 22.6667 32.1297V34.7031ZM31.8667 31.3164C31.52 30.2364 30.5333 29.4631 29.3333 29.4631H28V25.4631C28 24.7297 27.4 24.1297 26.6667 24.1297H18.6667V21.4631H21.3333C22.0667 21.4631 22.6667 20.8631 22.6667 20.1297V17.4631H25.3333C26.8 17.4631 28 16.2631 28 14.7964V14.2497C31.9067 15.8364 34.6667 19.6631 34.6667 24.1297C34.6667 26.9031 33.6 29.4231 31.8667 31.3164Z" fill="#0F0F10"/>
</svg>

================
File: public/images/customer-sat.svg
================
<svg width="48" height="49" viewBox="0 0 48 49" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect y="0.129883" width="48" height="48" rx="24" fill="#68CC58"/>
<path d="M23.9867 10.7964C16.6267 10.7964 10.6667 16.7697 10.6667 24.1297C10.6667 31.4897 16.6267 37.4631 23.9867 37.4631C31.36 37.4631 37.3333 31.4897 37.3333 24.1297C37.3333 16.7697 31.36 10.7964 23.9867 10.7964ZM24 34.7964C18.1067 34.7964 13.3333 30.0231 13.3333 24.1297C13.3333 18.2364 18.1067 13.4631 24 13.4631C29.8933 13.4631 34.6667 18.2364 34.6667 24.1297C34.6667 30.0231 29.8933 34.7964 24 34.7964ZM28.6667 22.7964C29.7733 22.7964 30.6667 21.9031 30.6667 20.7964C30.6667 19.6897 29.7733 18.7964 28.6667 18.7964C27.56 18.7964 26.6667 19.6897 26.6667 20.7964C26.6667 21.9031 27.56 22.7964 28.6667 22.7964ZM19.3333 22.7964C20.44 22.7964 21.3333 21.9031 21.3333 20.7964C21.3333 19.6897 20.44 18.7964 19.3333 18.7964C18.2267 18.7964 17.3333 19.6897 17.3333 20.7964C17.3333 21.9031 18.2267 22.7964 19.3333 22.7964ZM24 31.4631C27.1067 31.4631 29.7467 29.5164 30.8133 26.7964H17.1867C18.2533 29.5164 20.8933 31.4631 24 31.4631Z" fill="#0F0F10"/>
</svg>

================
File: public/images/echo.svg
================
<svg width="110" height="52" viewBox="0 0 110 52" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="svg12094651052">
<path id="Vector" d="M48.591 41.349L34.628 32.685C33.662 34.147 32.355 35.439 30.784 36.245C26.642 38.369 21.437 37.413 18.429 33.86C18.122 33.497 17.816 33.115 17.598 32.692L3.77599 41.292C3.57299 41.429 3.34999 41.561 3.16299 41.715L3.14599 41.73C3.11299 41.64 3.14999 41.447 3.15199 41.342L3.16299 33.824C3.22199 33.737 3.38999 33.674 3.48299 33.615L11.711 28.522C12.957 27.76 14.205 26.953 15.503 26.282L3.16499 18.707L3.17299 10.983L17.501 19.799C21.894 14.231 30.379 14.123 34.69 19.841L48.324 11.399C49.184 10.875 49.053 10.831 49.053 11.7L49.056 18.714C49.012 18.78 48.933 18.796 48.862 18.82C48.547 18.926 48.231 19.176 47.949 19.354L38.06 25.469C37.621 25.747 37.186 26.036 36.709 26.246C37.472 26.638 38.2 27.138 38.935 27.582L48.692 33.596C48.796 33.653 48.986 33.692 49.047 33.806C49.071 33.851 49.048 34.938 49.048 35.066L49.06 41.643C48.974 41.529 48.719 41.426 48.591 41.349ZM25.962 21.981C25.588 22.001 25.234 22.037 24.872 22.138C21.473 23.088 20.489 27.457 23.213 29.846C24.083 30.61 25.155 30.896 26.293 30.882C27.535 30.786 28.622 30.348 29.451 29.392C32.052 26.393 29.82 21.923 25.962 21.981Z" fill="white"/>
<path id="Vector_2" d="M109.096 28.7271C109.096 29.8471 108.938 30.8441 108.623 31.7171C108.326 32.5901 107.887 33.3321 107.307 33.9411C106.744 34.5351 106.056 34.9881 105.245 35.3011C104.433 35.5971 103.514 35.7461 102.486 35.7461C101.542 35.7461 100.665 35.5971 99.853 35.3011C99.058 34.9881 98.371 34.5351 97.791 33.9411C97.211 33.3321 96.755 32.5901 96.424 31.7171C96.109 30.8441 95.953 29.8471 95.953 28.7271C95.953 27.2281 96.217 25.9671 96.748 24.9461C97.277 23.9081 98.039 23.1171 99.034 22.5731C100.027 22.0291 101.203 21.7581 102.561 21.7581C103.836 21.7581 104.963 22.0291 105.94 22.5731C106.917 23.1171 107.687 23.9081 108.251 24.9461C108.814 25.9671 109.096 27.2281 109.096 28.7271ZM99.729 28.7271C99.729 29.6171 99.82 30.3661 100.002 30.9761C100.201 31.5691 100.507 32.0221 100.921 32.3351C101.335 32.6321 101.874 32.7801 102.537 32.7801C103.199 32.7801 103.729 32.6321 104.126 32.3351C104.541 32.0221 104.838 31.5691 105.021 30.9761C105.22 30.3661 105.319 29.6171 105.319 28.7271C105.319 27.8371 105.22 27.0961 105.021 26.5031C104.838 25.9091 104.541 25.4651 104.126 25.1681C103.712 24.8711 103.174 24.7231 102.512 24.7231C101.535 24.7231 100.822 25.0611 100.375 25.7361C99.944 26.3961 99.729 27.3921 99.729 28.7271Z" fill="white"/>
<path id="Vector_3" d="M84.394 20.5461C84.394 21.2051 84.369 21.8401 84.319 22.4491C84.286 23.0591 84.253 23.4871 84.22 23.7351H84.418C84.716 23.2731 85.064 22.9031 85.462 22.6221C85.859 22.3261 86.298 22.1121 86.779 21.9801C87.276 21.8321 87.797 21.7581 88.344 21.7581C89.321 21.7581 90.174 21.9301 90.903 22.2761C91.632 22.6221 92.195 23.1581 92.593 23.8831C93.007 24.6081 93.214 25.5471 93.214 26.7001V35.4981H89.512V27.6151C89.512 26.6431 89.33 25.9181 88.965 25.4401C88.617 24.9461 88.071 24.6981 87.325 24.6981C86.58 24.6981 85.992 24.8711 85.561 25.2171C85.147 25.5631 84.849 26.0661 84.667 26.7251C84.485 27.3841 84.394 28.1911 84.394 29.1471V35.4981H80.692V16.7161H84.394V20.5461Z" fill="white"/>
<path id="Vector_4" d="M73.693 35.7461C72.352 35.7461 71.209 35.5071 70.265 35.0291C69.321 34.5351 68.6 33.7771 68.103 32.7551C67.606 31.7341 67.358 30.4241 67.358 28.8261C67.358 27.1781 67.639 25.8351 68.203 24.7971C68.766 23.7591 69.544 22.9931 70.538 22.4991C71.548 22.0051 72.708 21.7581 74.016 21.7581C74.944 21.7581 75.747 21.8481 76.426 22.0291C77.122 22.2111 77.727 22.4251 78.24 22.6721L77.147 25.5141C76.567 25.2831 76.021 25.0941 75.507 24.9461C75.01 24.7971 74.513 24.7231 74.016 24.7231C73.37 24.7231 72.832 24.8801 72.401 25.1931C71.971 25.4891 71.648 25.9421 71.432 26.5521C71.234 27.1451 71.134 27.8951 71.134 28.8011C71.134 29.6911 71.242 30.4321 71.457 31.0251C71.689 31.6021 72.02 32.0391 72.451 32.3351C72.882 32.6151 73.403 32.7551 74.016 32.7551C74.795 32.7551 75.482 32.6561 76.079 32.4591C76.675 32.2441 77.254 31.9561 77.818 31.5941V34.7321C77.254 35.0951 76.658 35.3501 76.029 35.4981C75.416 35.6631 74.637 35.7461 73.693 35.7461Z" fill="white"/>
<path id="Vector_5" d="M65.033 35.498H54.821V17.853H65.033V20.917H58.573V24.797H64.586V27.862H58.573V32.409H65.033V35.498Z" fill="white"/>
</g>
</svg>

================
File: public/images/growth.svg
================
<svg width="48" height="49" viewBox="0 0 48 49" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect y="0.129883" width="48" height="48" rx="24" fill="#68CC58"/>
<path d="M14.6667 20.3964H18.6667V33.4631H14.6667V20.3964ZM22.1333 14.7964H25.8667V33.4631H22.1333V14.7964ZM29.6 25.4631H33.3333V33.4631H29.6V25.4631Z" fill="#0F0F10"/>
</svg>

================
File: public/images/harmony.svg
================
<svg width="156" height="40" viewBox="0 0 156 40" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="svg11665919779" clip-path="url(#clip0_2_1578)">
<path id="Vector" d="M20.058 7.40199L20.059 9.06399C20.059 9.41999 20.108 9.83999 20.017 10.185C19.539 12.001 17.098 11.817 16.746 10.206C16.688 9.94199 16.703 9.66099 16.703 9.39199L16.709 4.55399C16.628 4.50699 15.356 4.53899 15.196 4.53899L7.85498 4.54299C7.43898 4.54399 6.97998 4.50699 6.57398 4.58799C5.14398 4.86999 4.19798 5.76299 3.86498 7.21199C3.74098 7.75099 3.77598 8.32199 3.77598 8.87099L3.79198 10.263C3.88098 10.367 4.13298 10.542 4.25898 10.656L10.638 16.234C11.212 16.74 11.847 17.218 12.341 17.806C14.574 20.468 13.899 24.197 11.273 26.321C7.74098 29.178 2.33198 27.493 0.810981 23.207C0.533981 22.429 0.414981 21.681 0.414981 20.86L0.411981 8.67699C0.411981 8.23799 0.390981 7.78499 0.423981 7.34799C0.681981 4.01999 3.22998 1.58299 6.50298 1.25499L12.532 1.23999L29.864 1.24099C33.039 1.25499 35.641 3.63299 36.221 6.71699C36.328 7.28499 36.323 7.82899 36.324 8.40499L36.322 20.546C36.322 22.044 35.994 23.537 35.126 24.789C33.044 27.797 28.896 28.697 25.856 26.598C23.178 24.748 22.133 21.174 23.941 18.38C24.309 17.811 24.79 17.378 25.291 16.929L28.034 14.486L32.654 10.513C32.743 10.433 32.871 10.37 32.937 10.274C32.996 10.188 33.003 7.38399 32.851 6.93799L32.674 6.47699C32.057 5.19999 30.899 4.53899 29.509 4.53899L20.056 4.53999L20.058 7.40199ZM3.77598 14.674L3.77398 19.673C3.77498 19.964 3.76198 20.271 3.82298 20.556C4.17398 22.183 6.11498 22.364 7.23598 21.297C7.75198 20.73 7.94398 20.02 7.90498 19.265C7.85798 18.356 7.36798 17.82 6.71998 17.241L3.77598 14.674ZM32.956 14.712L30.753 16.62C29.951 17.317 28.94 18.009 28.845 19.165C28.786 19.895 28.9 20.615 29.39 21.189L29.561 21.367C30.937 22.59 32.934 21.953 32.955 20.08L32.956 14.712Z" fill="white"/>
<path id="Vector_2" d="M18.806 39.116L9.75201 39.121L9.75501 38.18C9.76701 37.344 9.97001 36.531 10.521 35.873C11.762 34.393 13.095 34.95 14.72 34.786C15.829 34.673 16.741 33.623 16.596 32.506C16.54 32.066 16.069 31.909 15.758 31.671C12.789 29.399 14.208 24.801 17.946 24.343L18.254 24.329C22.456 24.337 24.203 29.479 20.658 31.936C20.291 32.19 20.137 32.319 20.14 32.802C20.148 34.212 21.42 34.815 22.662 34.813L23.741 34.807C23.973 34.806 24.225 34.798 24.455 34.833C25.682 35.021 26.675 36.107 26.902 37.297C27.015 37.889 26.984 38.514 26.988 39.114L18.806 39.116Z" fill="white"/>
<path id="Vector_3" d="M60.847 26.912V7.64502H64.817V26.912H60.847ZM50.68 26.912V7.64502H54.65V26.912H50.68ZM53.479 18.643V15.357H61.49L61.475 18.643H53.479Z" fill="white"/>
<path id="Vector_4" d="M72.617 27.071C71.189 27.071 70.061 26.7 69.233 25.958C68.404 25.216 67.99 24.209 67.99 22.937C67.99 21.85 68.352 20.975 69.076 20.313C69.799 19.65 70.956 19.169 72.546 18.868C73.05 18.78 73.564 18.7 74.088 18.63C74.621 18.559 75.154 18.497 75.687 18.444C76.22 18.382 76.734 18.334 77.229 18.299V17.411C77.229 16.554 77.039 15.949 76.658 15.595C76.287 15.233 75.659 15.052 74.773 15.052C73.907 15.052 73.241 15.233 72.774 15.595C72.317 15.957 72.108 16.589 72.146 17.49H68.476C68.371 16.404 68.557 15.463 69.033 14.668C69.518 13.864 70.256 13.25 71.246 12.826C72.236 12.393 73.436 12.176 74.845 12.176C76.882 12.176 78.429 12.627 79.486 13.528C80.542 14.42 81.071 15.741 81.071 17.49V26.912H77.215L77.229 23.599C77.077 24.315 76.782 24.933 76.344 25.454C75.916 25.975 75.383 26.377 74.745 26.66C74.107 26.934 73.398 27.071 72.617 27.071ZM74.059 24.513C74.507 24.513 74.959 24.425 75.416 24.248C75.882 24.063 76.282 23.824 76.615 23.533C76.949 23.241 77.153 22.923 77.229 22.579V20.127C77.03 20.163 76.777 20.202 76.473 20.246C76.178 20.291 75.882 20.339 75.587 20.392C75.292 20.436 75.04 20.481 74.83 20.525C73.85 20.728 73.136 20.997 72.688 21.333C72.241 21.66 72.017 22.124 72.017 22.724C72.017 23.29 72.203 23.732 72.574 24.05C72.946 24.359 73.441 24.513 74.059 24.513Z" fill="white"/>
<path id="Vector_5" d="M84.244 26.912V24.248H96.039V26.912H84.244ZM84.001 15.503V12.428H89.271V15.503H84.001ZM86.857 26.647V17.305C86.857 16.704 86.957 16.271 87.157 16.006C87.367 15.732 87.733 15.564 88.257 15.503L86.857 14.535V12.428H90.142L90.413 16.364C90.613 15.472 90.951 14.712 91.427 14.085C91.903 13.457 92.479 12.98 93.155 12.654C93.84 12.318 94.578 12.15 95.368 12.15C96.701 12.15 97.725 12.649 98.439 13.647C99.152 14.646 99.467 16.121 99.381 18.073H95.882C95.873 17.11 95.706 16.417 95.382 15.993C95.058 15.56 94.544 15.344 93.84 15.344C93.193 15.344 92.565 15.525 91.955 15.887C91.346 16.24 90.899 16.678 90.613 17.199V22.685C90.613 23.118 90.527 23.467 90.356 23.732C90.194 23.997 89.951 24.169 89.628 24.248L90.613 24.911L90.642 26.647H86.857Z" fill="white"/>
<path id="Vector_6" d="M100.569 26.912V12.441H103.611L103.882 16.629L103.74 16.377C103.864 15.07 104.254 14.04 104.911 13.29C105.577 12.53 106.419 12.15 107.438 12.15C107.981 12.15 108.438 12.274 108.809 12.521C109.19 12.76 109.475 13.157 109.666 13.714C109.865 14.27 109.937 15.017 109.88 15.953L109.837 16.775V26.912H106.91V16.907C106.91 16.333 106.824 15.918 106.652 15.662C106.491 15.397 106.224 15.264 105.853 15.264C105.434 15.264 105.053 15.405 104.711 15.688C104.368 15.962 104.102 16.426 103.911 17.079V26.912H100.569ZM112.807 26.912V16.907C112.807 16.368 112.721 15.962 112.551 15.688C112.388 15.405 112.107 15.264 111.708 15.264C111.26 15.264 110.87 15.41 110.537 15.701C110.213 15.993 109.98 16.452 109.837 17.079L109.294 17.623L109.737 16.602C109.851 15.233 110.246 14.151 110.923 13.356C111.598 12.552 112.494 12.15 113.607 12.15C114.435 12.15 115.064 12.45 115.492 13.051C115.93 13.643 116.149 14.571 116.149 15.834V26.912H112.807Z" fill="white"/>
<path id="Vector_7" d="M125.048 27.1111C123.64 27.1111 122.411 26.8191 121.364 26.2361C120.317 25.6441 119.503 24.7921 118.923 23.6791C118.341 22.5651 118.051 21.2271 118.051 19.6631C118.051 18.1001 118.355 16.7611 118.966 15.6481C119.584 14.5261 120.431 13.6651 121.507 13.0641C122.583 12.4641 123.806 12.1631 125.177 12.1631C126.615 12.1631 127.852 12.4681 128.889 13.0781C129.937 13.6781 130.741 14.5351 131.303 15.6481C131.874 16.7611 132.16 18.0781 132.16 19.5971C132.16 21.2051 131.846 22.5701 131.217 23.6921C130.599 24.8051 129.752 25.6531 128.676 26.2361C127.609 26.8191 126.4 27.1111 125.048 27.1111ZM125.12 24.0501C125.995 24.0501 126.724 23.7091 127.304 23.0291C127.895 22.3491 128.19 21.2091 128.19 19.6101C128.19 18.0561 127.9 16.9381 127.319 16.2581C126.738 15.5691 125.995 15.2241 125.091 15.2241C124.206 15.2241 123.473 15.5641 122.892 16.2451C122.321 16.9161 122.035 18.0251 122.035 19.5711C122.035 21.1611 122.335 22.3051 122.935 23.0031C123.535 23.7011 124.263 24.0501 125.12 24.0501Z" fill="white"/>
<path id="Vector_8" d="M135.748 26.912V12.428H139.188L139.56 17.888L139.346 16.788C139.555 15.251 140.041 14.093 140.802 13.316C141.574 12.539 142.65 12.15 144.03 12.15C145.515 12.15 146.629 12.596 147.371 13.488C148.114 14.381 148.485 15.662 148.485 17.331V26.912H144.573V18.497C144.573 17.367 144.41 16.554 144.086 16.059C143.764 15.564 143.216 15.317 142.444 15.317C141.826 15.317 141.274 15.476 140.788 15.794C140.313 16.112 139.936 16.545 139.661 17.093V26.912H135.748Z" fill="white"/>
<path id="Vector_9" d="M152.972 32.7161V29.4831H154.315C155 29.4831 155.538 29.4211 155.929 29.2971C156.328 29.1821 156.628 29.0101 156.828 28.7801C157.028 28.5601 157.18 28.3031 157.285 28.0121C157.408 27.6941 157.537 27.4461 157.67 27.2701C157.804 27.1021 158.032 26.9831 158.356 26.9121H156.656L151.287 12.4551H155.642L157.67 19.4911L158.841 23.2281H158.97L160.055 19.5041L162.04 12.4551H166.367L161.14 26.9121C160.807 27.8661 160.445 28.7051 160.055 29.4301C159.674 30.1541 159.227 30.7591 158.713 31.2451C158.198 31.7311 157.571 32.0981 156.828 32.3451C156.095 32.5921 155.2 32.7161 154.143 32.7161H152.972Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_2_1578">
<rect width="167" height="39" fill="white" transform="translate(0 0.780029)"/>
</clipPath>
</defs>
</svg>

================
File: public/images/haven.svg
================
<svg width="118" height="30" viewBox="0 0 118 30" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="svg10577719447" clip-path="url(#clip0_2_1481)">
<path id="Vector" d="M16.978 2.63898C15.209 2.23398 13.542 3.34798 13.081 4.89498C12.96 5.29998 13.008 5.76098 13.008 6.17898L13.012 14.497C13.012 14.783 13.028 15.076 13.009 15.36C12.981 15.789 12.537 15.818 12.196 15.633L8.02699 13.162C7.93799 13.108 7.72399 13.023 7.66799 12.952L7.65799 16.581C7.65799 16.809 7.65299 17.032 7.69899 17.257L7.79199 17.804C8.33199 20.408 10.543 22.517 13.38 23.04C13.602 23.081 13.85 23.095 14.06 23.171L14.074 29.526C11.269 29.163 8.58299 28.17 6.40299 26.486C3.23999 24.045 1.29499 20.871 0.771992 17.137L0.671992 16.36C0.619992 15.749 0.625992 14.861 0.675992 14.249L0.782992 13.432C1.41799 9.05998 4.10699 5.28698 8.28399 3.01798C10.536 1.79498 12.973 1.18798 15.565 1.01698C18.885 0.970982 21.683 1.56698 24.572 3.17498C30.276 6.34998 33.007 12.824 31.472 18.705C30.019 24.274 25.224 28.406 19.102 29.44C18.896 29.475 18.678 29.489 18.477 29.535L18.463 23.134C18.811 23.082 19.161 23.051 19.505 22.977C22.408 22.358 24.644 19.767 24.843 17.079C24.872 16.695 24.851 16.298 24.851 15.912V14.143C24.851 13.744 24.822 13.324 24.866 12.928L24.869 12.903C24.144 13.396 23.358 13.814 22.607 14.272L20.96 15.252C20.73 15.389 20.506 15.562 20.266 15.68C20.037 15.793 19.659 15.719 19.559 15.482C19.515 15.378 19.536 15.224 19.535 15.113L19.537 6.27798C19.537 5.56498 19.573 5.00598 19.258 4.32998C18.838 3.43198 17.98 2.89298 16.978 2.63898Z" fill="white"/>
<path id="Vector_2" d="M105.65 25.98V10.628H109.214V13.186H109.626C110.234 11.245 111.46 10.275 113.306 10.275C114.68 10.275 115.74 10.745 116.486 11.687C117.231 12.608 117.605 13.932 117.605 15.657V25.98H114.042V16.275C114.042 14.275 113.296 13.275 111.804 13.275C111.078 13.275 110.459 13.49 109.95 13.922C109.459 14.333 109.214 14.922 109.214 15.686V25.98H105.65Z" fill="white"/>
<path id="Vector_3" d="M96.88 26.333C95.879 26.333 94.956 26.176 94.112 25.862C93.288 25.529 92.582 25.039 91.993 24.392C91.404 23.725 90.943 22.892 90.609 21.892C90.295 20.872 90.138 19.676 90.138 18.304C90.138 15.539 90.687 13.51 91.787 12.216C92.906 10.922 94.496 10.275 96.557 10.275C98.617 10.275 100.198 10.922 101.296 12.216C102.416 13.51 102.975 15.539 102.975 18.304V19.157H93.877V20.157C93.877 21.176 94.162 21.98 94.731 22.568C95.3 23.157 96.086 23.451 97.086 23.451C97.931 23.451 98.637 23.274 99.206 22.921C99.795 22.549 100.295 22.019 100.707 21.333L102.651 23.362C102.082 24.264 101.316 24.99 100.354 25.539C99.393 26.068 98.235 26.333 96.88 26.333ZM96.557 13.01C94.77 13.01 93.877 14.069 93.877 16.186V16.951H99.236V16.186C99.236 14.069 98.343 13.01 96.557 13.01Z" fill="white"/>
<path id="Vector_4" d="M80.4 25.9801L75.865 10.6281H79.458L81.666 18.8041L82.52 22.9511H82.932L83.786 18.8041L85.994 10.6281H89.439L84.904 25.9801H80.4Z" fill="white"/>
<path id="Vector_5" d="M73.3 25.98C71.711 25.98 70.876 25.108 70.798 23.362H70.445C70.248 24.304 69.807 25.039 69.12 25.568C68.433 26.078 67.579 26.333 66.558 26.333C65.145 26.333 64.085 25.941 63.378 25.157C62.672 24.372 62.318 23.274 62.318 21.863C62.318 20.255 62.819 19.059 63.82 18.274C64.821 17.49 66.264 17.098 68.148 17.098H70.533V15.775C70.533 14.873 70.337 14.206 69.944 13.775C69.571 13.343 68.943 13.128 68.06 13.128C67.333 13.128 66.725 13.304 66.234 13.657C65.744 13.99 65.312 14.471 64.939 15.098L62.848 13.216C63.418 12.334 64.134 11.628 64.998 11.098C65.881 10.549 67 10.275 68.354 10.275C72.182 10.275 74.095 12.079 74.095 15.686V23.127H75.45V25.98H73.3ZM67.912 23.715C68.639 23.715 69.257 23.51 69.767 23.098C70.278 22.666 70.533 22.078 70.533 21.333V19.304H68.384C66.735 19.304 65.91 19.941 65.91 21.216V21.863C65.91 22.51 66.087 22.98 66.44 23.274C66.794 23.568 67.284 23.715 67.912 23.715Z" fill="white"/>
<path id="Vector_6" d="M47.914 4.21606H51.477V13.1861H51.889C52.497 11.2451 53.724 10.2751 55.569 10.2751C56.943 10.2751 58.003 10.7451 58.749 11.6871C59.495 12.6081 59.868 13.9311 59.868 15.6571V25.9801H56.305V16.2751C56.305 14.2751 55.559 13.2751 54.068 13.2751C53.341 13.2751 52.723 13.4901 52.213 13.9221C51.722 14.3331 51.477 14.9221 51.477 15.6861V25.9801H47.914V4.21606Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_2_1481">
<rect width="118" height="29" fill="white" transform="translate(0 0.780029)"/>
</clipPath>
</defs>
</svg>

================
File: public/images/logo.svg
================
<svg width="46" height="16" viewBox="0 0 46 16" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="svg802969421_1696" clip-path="url(#clip0_2_2616)">
<g id="Clip path group">
<mask id="mask0_2_2616" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="0" y="0" width="46" height="16">
<g id="svg802969421_1696_clip0_21_418">
<path id="Vector" d="M46 0H0V16H46V0Z" fill="white"/>
</g>
</mask>
<g mask="url(#mask0_2_2616)">
<g id="Group">
<path id="Vector_2" d="M10.9189 0C9.1225 0 7.39969 0.64536 6.12945 1.79411L1.98387 5.54315C0.71362 6.69189 0 8.24992 0 9.87451C0 13.2576 3.03254 16 6.77339 16C8.5698 16 10.2926 15.3546 11.5629 14.2059L14.4304 11.6126C14.4304 11.6126 14.4304 11.6127 14.4304 11.6126L22.7853 4.05685C23.392 3.50823 24.2148 3.2 25.0728 3.2C26.5091 3.2 27.7269 4.04663 28.149 5.21817L30.7859 2.83358C29.5831 1.12978 27.4739 0 25.0728 0C23.2764 0 21.5535 0.64536 20.2833 1.79411L9.06081 11.9432C8.45415 12.4918 7.63135 12.8 6.77339 12.8C4.98678 12.8 3.53846 11.4902 3.53846 9.87451C3.53846 9.09861 3.87929 8.35452 4.48595 7.80587L8.63149 4.05685C9.23815 3.50823 10.061 3.2 10.9189 3.2C12.3554 3.2 13.5731 4.04665 13.9953 5.21824L16.6321 2.83365C15.4292 1.12981 13.32 0 10.9189 0Z" fill="white"/>
<path id="Vector_3" d="M23.2147 11.9432C22.608 12.4918 21.7852 12.8 20.9272 12.8C19.491 12.8 18.2734 11.9536 17.8511 10.7822L15.2143 13.1668C16.4173 14.8704 18.5264 16 20.9272 16C22.7236 16 24.4465 15.3546 25.7167 14.2059L36.9391 4.05685C37.5458 3.50823 38.3686 3.2 39.2267 3.2C41.0133 3.2 42.4615 4.50978 42.4615 6.12549C42.4615 6.90139 42.1209 7.64549 41.5139 8.19413L37.3685 11.9432C36.7619 12.4918 35.939 12.8 35.081 12.8C33.6447 12.8 32.427 11.9534 32.0049 10.782L29.368 13.1666C30.5711 14.8703 32.68 16 35.081 16C36.8774 16 38.6002 15.3546 39.8706 14.2059L44.0161 10.4568C45.2865 9.30812 46 7.75008 46 6.12549C46 2.74247 42.9675 0 39.2267 0C37.4302 0 35.7074 0.64536 34.4372 1.79411L23.2147 11.9432Z" fill="white"/>
</g>
</g>
</g>
</g>
<defs>
<clipPath id="clip0_2_2616">
<rect width="46" height="16" fill="white"/>
</clipPath>
</defs>
</svg>

================
File: public/images/modern-teams.svg
================
<svg width="141" height="58" viewBox="0 0 141 58" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_2_2157)">
<path d="M138.425 50.7934L138.502 50.8034C138.666 50.8811 138.76 50.907 138.83 51.0013L138.755 51.0307C138.642 51.0342 138.647 51.0379 138.512 50.9945C138.376 50.8897 138.415 50.8781 138.425 50.7934ZM18.9826 5.1629L18.7269 5.04963L18.6838 4.99078C18.7492 4.95014 18.7477 4.94004 18.8778 4.94626C19.0218 5.00182 19.0233 5.00334 19.1138 5.07971L19.1361 5.18435L18.9827 5.16298L18.9826 5.1629ZM59.4399 4.28115C59.4795 4.27824 59.5347 4.28205 59.5785 4.28292L59.7044 4.34627C59.7994 4.44454 59.8217 4.4528 59.7871 4.52982L59.7665 4.52569C59.6505 4.50319 59.5971 4.48202 59.4925 4.4334C59.3815 4.38178 59.3863 4.38579 59.3445 4.32532L59.4399 4.28115ZM58.2011 53.3373L58.4103 53.3301L58.4395 53.3404C58.5818 53.3992 58.5742 53.4038 58.6332 53.478C58.5983 53.5375 58.6025 53.5422 58.4795 53.5538C58.3093 53.4927 58.3002 53.4844 58.1791 53.3964L58.2011 53.3373ZM68.9459 45.5207L69.0172 45.5221C69.1827 45.5797 69.2248 45.6073 69.3369 45.6878C69.3476 45.7527 69.3339 45.7453 69.2403 45.7683C69.1235 45.7528 69.0982 45.739 68.9783 45.6921C68.8771 45.5957 68.9132 45.5902 68.9459 45.5207ZM29.2695 9.91611C29.3105 9.85625 29.3119 9.83568 29.4339 9.81572C29.5918 9.87505 29.6454 9.89692 29.7555 9.98326C29.739 10.0464 29.7294 10.0409 29.613 10.0559L29.4058 9.99556L29.2695 9.91611ZM126.459 43.6189C126.512 43.6083 126.542 43.6117 126.611 43.6178C126.751 43.6859 126.855 43.7377 126.928 43.8198L126.796 43.834C126.767 43.8354 126.727 43.8385 126.693 43.8345C126.587 43.8219 126.552 43.8026 126.467 43.7563C126.444 43.7013 126.447 43.665 126.459 43.6189ZM37.9649 14.3649L38.0262 14.2769C38.157 14.2793 38.1577 14.284 38.3075 14.3372C38.411 14.4295 38.4255 14.4286 38.3954 14.497C38.2333 14.5014 38.1962 14.4867 38.007 14.437L37.9649 14.3649ZM30.5394 8.84295L30.7784 8.82405C30.9523 8.89097 30.9534 8.88431 31.0445 8.97552L30.9963 9.06085L30.8887 9.06036C30.7525 8.99949 30.6515 8.95316 30.543 8.87836L30.5394 8.84295ZM22.9429 16.5609L23.0363 16.5527C23.1793 16.6046 23.2556 16.6255 23.3666 16.6982L23.2701 16.7874L23.2441 16.7893C23.1091 16.7825 23.0731 16.7572 22.9367 16.6993C22.8745 16.6176 22.8996 16.6147 22.9429 16.5609ZM118.248 39.2009L118.339 39.1807C118.486 39.2134 118.478 39.2164 118.596 39.2881C118.647 39.3747 118.66 39.3786 118.592 39.4292L118.185 39.3186L118.146 39.2904L118.248 39.2009ZM122.866 37.7912C122.922 37.7318 122.924 37.7202 123.071 37.7088L123.252 37.7641C123.325 37.8493 123.329 37.8656 123.321 37.9366L123.225 37.9457L122.943 37.8573L122.866 37.7912ZM132.331 49.2568C132.144 49.1857 132.127 49.1867 132.01 49.0831C132.037 49.0155 132.021 49.0073 132.156 48.9976C132.317 49.0528 132.341 49.0557 132.453 49.1364L132.428 49.222L132.331 49.2568ZM60.2609 3.18403C60.0958 3.11192 60.0632 3.09983 59.9504 3.00582C59.9823 2.94052 59.9771 2.94448 60.1189 2.93982L60.2832 2.98364C60.4111 3.08197 60.3861 3.10042 60.3938 3.18528L60.2609 3.18403ZM35.9125 12.5521L36.0317 12.5314C36.1849 12.5825 36.2028 12.5874 36.3167 12.663C36.3378 12.7308 36.3199 12.7334 36.2557 12.7733C36.127 12.7506 35.9903 12.7062 35.8593 12.6688C35.8621 12.6234 35.8877 12.59 35.9125 12.5521ZM68.8693 55.9688L68.9271 55.9216C69.1045 55.9864 69.1341 56.002 69.2698 56.0915C69.262 56.1692 69.2269 56.1587 69.0995 56.1773C68.9642 56.1415 68.9471 56.1427 68.8428 56.0786C68.8215 56.0146 68.8065 56.0028 68.8693 55.9688ZM80.9337 52.2524L81.0218 52.2225L81.1783 52.2615C81.3268 52.3531 81.3395 52.3503 81.3647 52.4443C81.3093 52.4614 81.2577 52.4634 81.1843 52.4671C81.0222 52.4091 81.0234 52.4072 80.9165 52.3225L80.9337 52.2524ZM82.1705 55.4801C82.2212 55.4821 82.3596 55.5423 82.4197 55.5646C82.5197 55.6335 82.5749 55.6563 82.5863 55.7212L82.4641 55.7505C82.3822 55.74 82.316 55.7209 82.2306 55.6984L82.1437 55.6336L82.1705 55.4801ZM40.8378 39.8082L40.9091 39.8055C40.9964 39.8342 41.0786 39.8626 41.1672 39.8834L41.2145 39.8934C41.2487 39.9647 41.2428 39.9877 41.1899 40.033C41.0993 40.0458 41.1008 40.0403 40.9875 40.0189C40.8403 39.9528 40.8344 39.9552 40.7647 39.8749L40.8378 39.8082ZM118.321 44.2452C118.281 44.2933 118.268 44.3157 118.151 44.3234L118.016 44.2782C117.862 44.1854 117.883 44.1777 117.85 44.0887C117.975 44.0774 118.053 44.0988 118.209 44.128L118.321 44.2452ZM92.5388 12.5668C92.565 12.4937 92.5609 12.4904 92.6943 12.471C92.8976 12.5349 92.8899 12.5385 93.0212 12.6357L93.0076 12.6979C92.8489 12.7022 92.8271 12.6953 92.6452 12.6475L92.5388 12.5668ZM14.9448 12.1165L15.0642 12.107C15.2515 12.1838 15.2795 12.1869 15.3924 12.292C15.347 12.3511 15.3474 12.3544 15.2137 12.363L15.0416 12.2977C14.9071 12.1948 14.9326 12.1978 14.9448 12.1165ZM94.0162 14.5554L94.1266 14.535C94.2735 14.5791 94.2795 14.5825 94.3923 14.6546C94.4293 14.7331 94.4204 14.7297 94.3456 14.7728C94.1997 14.7536 94.1235 14.729 93.977 14.6791C93.9322 14.6309 93.9937 14.5894 94.0162 14.5554ZM74.486 55.9922L74.5183 55.9821C74.7168 56.0539 74.8219 56.0767 74.9578 56.1815L74.9098 56.2398L74.7873 56.2612C74.6784 56.2365 74.6632 56.2283 74.5641 56.1801C74.5056 56.1066 74.4954 56.0564 74.486 55.9922ZM41.8853 18.3329L41.978 18.3111C42.1318 18.3391 42.1577 18.3513 42.3069 18.4152L42.3517 18.4811L42.2673 18.5282L42.1855 18.5354C42.0537 18.5123 41.9916 18.5029 41.8603 18.4463L41.8853 18.3329ZM32.1086 12.8056L32.2199 12.7821C32.3549 12.8182 32.4444 12.8415 32.5717 12.8988L32.56 12.9777C32.5144 13.0119 32.5428 13.0048 32.457 13.0144C32.3721 13.0239 32.3494 13.006 32.2434 12.9747C32.1191 12.8828 32.108 12.8841 32.1086 12.8056ZM66.8069 50.8123L66.942 50.7994C67.1135 50.8707 67.1629 50.8786 67.2558 50.9742C67.2224 51.0334 67.2231 51.0408 67.108 51.057C66.9268 50.9991 66.9162 51.0025 66.7866 50.9056L66.8069 50.8123ZM39.7659 16.6659L39.7713 16.5429L39.8839 16.5334C40.0381 16.583 40.0683 16.5931 40.1921 16.6666L40.2363 16.729C40.1801 16.7599 40.1632 16.7946 40.0286 16.7656L39.8464 16.7117L39.7659 16.6659ZM18.6756 20.983L18.8061 20.9644C18.9262 20.9943 18.9937 21.0127 19.1032 21.0649L19.1094 21.1651C19.0448 21.1953 19.0313 21.1971 18.9196 21.1932C18.7806 21.1369 18.7435 21.1263 18.6505 21.0536L18.6756 20.983ZM134.003 46.4431L134.136 46.4269C134.287 46.491 134.341 46.5226 134.447 46.6036C134.439 46.6749 134.429 46.6695 134.312 46.6917L134.061 46.6155C133.981 46.543 133.998 46.5005 134.003 46.4431ZM136.328 51.0617C136.535 51.1434 136.616 51.1604 136.742 51.273C136.694 51.3276 136.682 51.3309 136.559 51.3437C136.442 51.3032 136.416 51.3064 136.342 51.2421C136.27 51.1802 136.27 51.1505 136.267 51.0982L136.328 51.0617ZM122.735 52.1424L122.762 52.14C122.86 52.1462 122.981 52.1946 123.08 52.2298L123.185 52.3331L123.122 52.3922L123.082 52.3962C122.964 52.3935 122.926 52.3778 122.805 52.3308C122.725 52.2497 122.732 52.2076 122.735 52.1424ZM18.9329 6.56112C18.8157 6.51721 18.7418 6.49398 18.6528 6.43178C18.5765 6.37839 18.6077 6.35592 18.609 6.31251C18.7377 6.29175 18.7395 6.29623 18.9215 6.3397C19.0547 6.43478 19.0272 6.46107 19.0403 6.54566L18.9329 6.56112ZM77.1809 0.67149C77.283 0.669108 77.328 0.696882 77.4455 0.735704C77.5706 0.840174 77.5376 0.868276 77.5363 0.955625C77.4283 0.939178 77.2642 0.85942 77.1552 0.815427L77.0934 0.746269L77.1809 0.67149ZM23.878 5.06995C23.7511 5.04159 23.7357 5.02962 23.6218 4.97169C23.55 4.88804 23.5592 4.89518 23.6124 4.8411C23.7598 4.84075 23.7507 4.83685 23.9201 4.89658C24.015 4.97734 24.0232 5.0184 24.0364 5.08791L23.878 5.06995ZM72.8121 51.8557L72.848 51.8611C73.0079 51.9041 73.0463 51.9241 73.1603 51.9981C73.2058 52.0799 73.2023 52.0767 73.1317 52.1235L73.0065 52.1088C72.8714 52.0613 72.8382 52.0513 72.7352 51.985C72.7445 51.9333 72.7755 51.8974 72.8121 51.8557ZM125.701 44.3315L125.788 44.3211L125.937 44.3688C126.042 44.4491 126.104 44.4786 126.108 44.5507L126 44.5674C125.84 44.5336 125.796 44.5297 125.646 44.4592C125.622 44.3873 125.647 44.3773 125.701 44.3315ZM96.1546 36.7016C96.111 36.7427 96.0778 36.7816 95.9707 36.7877C95.874 36.7932 95.8687 36.7796 95.7578 36.7413C95.6498 36.6632 95.6193 36.6543 95.6138 36.586L95.7403 36.5664C95.8861 36.5906 95.9068 36.5956 96.0486 36.6543L96.1546 36.7016ZM75.8294 3.32178C75.663 3.25129 75.6308 3.24711 75.5373 3.15326C75.5607 3.08267 75.557 3.08725 75.6971 3.07701L75.8771 3.13062C75.9642 3.20242 76.0097 3.23315 75.9983 3.29581L75.9797 3.32935L75.8294 3.32178ZM63.5419 39.1362C63.572 39.077 63.5645 39.0517 63.679 39.0336C63.8373 39.0776 63.8534 39.0874 63.9859 39.1621C64.0301 39.2241 64.0335 39.2271 64.0004 39.2696C63.8402 39.2832 63.8324 39.2716 63.6366 39.2128L63.5419 39.1362ZM13.6035 4.93587L13.706 4.92128L13.9021 4.98004C14.0211 5.07959 14.0129 5.10468 14.0339 5.19326C14.0079 5.20492 14.025 5.19882 13.9787 5.20939C13.7939 5.13913 13.7101 5.11836 13.5808 5.02022L13.6035 4.93587ZM44.8879 40.7985C44.8518 40.8548 44.8344 40.8622 44.7302 40.8849C44.6088 40.8565 44.5697 40.8347 44.4566 40.7823C44.3976 40.7003 44.4005 40.6995 44.4464 40.6435C44.5866 40.6436 44.6058 40.6542 44.7725 40.7052L44.8879 40.7985ZM82.9106 9.69588L83.0534 9.69015C83.2219 9.73479 83.2457 9.73004 83.3723 9.81681L83.353 9.89643L83.1834 9.91568L83.0047 9.86071L82.8898 9.76621L82.9106 9.69588ZM93.8504 34.4548L93.9757 34.4391C94.1009 34.4783 94.1981 34.5021 94.3046 34.5625L94.2615 34.6429C94.2082 34.6759 94.189 34.6744 94.0849 34.6744C93.9298 34.613 93.9116 34.6097 93.8146 34.5283L93.8504 34.4548ZM124.776 52.2151L124.915 52.1997L125.227 52.3487L125.245 52.4137C125.193 52.4377 125.164 52.4484 125.076 52.4491C124.98 52.4498 124.947 52.4258 124.842 52.3881C124.756 52.3066 124.767 52.2793 124.776 52.2151ZM101.575 42.0982C101.377 42.0212 101.326 42.0136 101.204 41.9051C101.249 41.848 101.244 41.8474 101.381 41.8448L101.547 41.8862C101.663 41.9674 101.683 42.006 101.687 42.0804L101.686 42.1069L101.575 42.0982ZM133.193 51.3118L133.263 51.2924C133.444 51.3587 133.506 51.3686 133.621 51.4654C133.594 51.5338 133.596 51.5351 133.468 51.5527C133.342 51.5143 133.294 51.5036 133.19 51.4457C133.147 51.3743 133.159 51.3646 133.193 51.3118ZM110.791 44.0383C110.778 44.0554 110.775 44.0618 110.751 44.0767C110.687 44.1169 110.631 44.1226 110.499 44.1114C110.367 44.0533 110.36 44.0519 110.286 43.9795C110.299 43.9167 110.288 43.9029 110.389 43.8816C110.521 43.9118 110.576 43.9275 110.692 43.9874L110.791 44.0383ZM56.9719 44.4981C57.0297 44.481 57.092 44.4806 57.1686 44.4775C57.2572 44.5105 57.2963 44.5254 57.3635 44.5725C57.4393 44.6255 57.408 44.6464 57.4067 44.6898C57.3814 44.7329 57.3827 44.726 57.3082 44.7384C57.1693 44.6841 57.0539 44.6447 56.9559 44.5682L56.9719 44.4981ZM91.8237 11.6121L91.9081 11.5996C92.044 11.6275 92.0549 11.6354 92.1789 11.6963C92.2491 11.7919 92.2544 11.7881 92.1841 11.8453L92.1068 11.8375C92.0126 11.8211 91.8284 11.7703 91.7457 11.7276L91.8237 11.6121ZM62.1493 41.5617C61.9741 41.4829 61.9441 41.4753 61.8394 41.374L61.8672 41.3031L62.0106 41.3005C62.17 41.3588 62.181 41.3607 62.287 41.4427C62.2871 41.4827 62.2916 41.5244 62.2826 41.5617L62.1493 41.5617ZM100.898 39.7779C100.942 39.7672 100.991 39.7637 101.043 39.7588L101.333 39.8579C101.375 39.9144 101.353 39.9259 101.336 39.9687L101.194 39.9926C101.009 39.944 101.014 39.9523 100.884 39.8616L100.898 39.7779ZM5.90204 6.07521C5.70769 5.98619 5.64826 5.96876 5.53351 5.85719C5.58989 5.80353 5.59847 5.80991 5.74681 5.81401L5.92653 5.87513C6.01964 5.96549 6.0098 6.01388 6.00679 6.08682L5.90204 6.07521ZM17.0538 13.6157C17.1195 13.5951 17.1248 13.5918 17.2277 13.6041C17.3857 13.6774 17.4406 13.7152 17.5459 13.8036L17.4312 13.8285C17.3058 13.8232 17.2466 13.8224 17.1006 13.7781C17.008 13.6867 17.0296 13.6835 17.0538 13.6157ZM72.4232 15.7864L72.3674 15.8764L72.2403 15.8687C72.0685 15.8047 72.0403 15.8061 71.9432 15.7119C71.9916 15.6599 71.9976 15.6411 72.1169 15.6263L72.3597 15.7086L72.4232 15.7864ZM111.445 39.075L111.554 39.0569C111.708 39.0913 111.704 39.0867 111.828 39.1598C111.889 39.2407 111.884 39.2438 111.846 39.3021C111.701 39.2957 111.546 39.2485 111.392 39.1858L111.445 39.075ZM67.7593 12.5538L67.8766 12.5394C67.9994 12.5759 68.0964 12.6006 68.1983 12.6624L68.1794 12.7574C68.1096 12.7868 68.1078 12.7877 67.9856 12.7744C67.8589 12.7238 67.8089 12.7004 67.725 12.6327L67.7593 12.5538ZM9.66678 6.29242L9.35353 6.15699C9.30835 6.08664 9.32027 6.07736 9.35126 6.02485L9.47169 6.018C9.61497 6.06593 9.63348 6.07417 9.74435 6.14476L9.77351 6.30381L9.66678 6.29242ZM69.91 48.0874L70.0492 48.0779L70.3076 48.1608L70.4048 48.2459C70.3694 48.2961 70.3488 48.3206 70.2525 48.3421L70.1006 48.295C69.9538 48.1935 69.9529 48.1819 69.91 48.0874ZM64.5696 56.6683C64.7614 56.7385 64.8196 56.7781 64.9294 56.8773L64.8885 56.9374C64.7453 56.9322 64.7063 56.9191 64.5494 56.8751C64.4264 56.7713 64.4682 56.7552 64.4868 56.674L64.5696 56.6683ZM2.15652 6.34431L1.91168 6.25477C1.79559 6.20755 1.78998 6.20801 1.73613 6.14825C1.79061 6.08253 1.78256 6.06908 1.94421 6.06119L2.06884 6.10794C2.15824 6.1906 2.18705 6.23452 2.21629 6.31172L2.15652 6.34431ZM113.657 49.9243L113.651 49.9614C113.622 50.0209 113.587 50.0181 113.464 50.0189C113.29 49.9594 113.288 49.96 113.171 49.8713C113.202 49.8057 113.189 49.7906 113.325 49.7764L113.557 49.8506L113.657 49.9243ZM128.301 43.4326C128.209 43.4202 128.143 43.4019 128.047 43.3761L127.964 43.2979C127.973 43.2232 127.968 43.216 128.079 43.1866C128.229 43.2087 128.308 43.2641 128.444 43.3292L128.451 43.4084L128.301 43.4326ZM87.1168 15.0704C87.2073 15.054 87.2171 15.0624 87.3488 15.0938C87.4929 15.1723 87.5067 15.1762 87.5667 15.2611L87.4862 15.3047C87.3354 15.2922 87.2715 15.2649 87.1115 15.2129C87.0583 15.1455 87.0954 15.1203 87.1168 15.0704ZM98.245 38.3548L98.3037 38.3534C98.4552 38.3975 98.5307 38.4253 98.6651 38.4923L98.5843 38.5935L98.4862 38.5953C98.3475 38.561 98.319 38.5573 98.2002 38.4957C98.1732 38.4122 98.1706 38.4042 98.245 38.3548ZM68.4809 38.1316L68.4924 38.1283C68.6118 38.1042 68.6107 38.0996 68.7819 38.139C68.903 38.2288 68.9277 38.2638 68.9629 38.3497L68.8581 38.3672C68.6846 38.3111 68.6404 38.2995 68.4963 38.2133L68.4809 38.1316ZM107.139 46.8649C107.216 46.8516 107.226 46.8497 107.332 46.868C107.486 46.9342 107.528 46.9743 107.611 47.0541L107.559 47.0945L107.376 47.0974L107.225 47.0385C107.123 46.9446 107.128 46.9424 107.139 46.8649ZM135.185 51.5238C135.336 51.586 135.411 51.6197 135.515 51.7045L135.483 51.7522C135.319 51.7613 135.318 51.7744 135.105 51.7084C135.016 51.6243 135.025 51.5899 135.037 51.5252L135.185 51.5238ZM70.5055 14.412L70.6412 14.4095C70.7575 14.4458 70.932 14.4866 71.0201 14.5432L70.9478 14.6133C70.9035 14.6337 70.8637 14.638 70.7995 14.6452L70.6005 14.5821C70.4816 14.4864 70.4936 14.4917 70.5055 14.412ZM112.849 50.6496C112.896 50.6416 112.874 50.6425 112.935 50.6446C113.022 50.6474 113.227 50.744 113.325 50.7829L113.27 50.8698L113.222 50.8822C113.095 50.8962 113.027 50.8626 112.879 50.8131C112.82 50.7425 112.837 50.704 112.849 50.6496ZM128.88 51.7469L129.015 51.7402L129.298 51.8706C129.347 51.9464 129.318 51.9455 129.261 51.9924C129.101 51.9929 129.113 51.9911 128.928 51.9228C128.857 51.838 128.856 51.8122 128.88 51.7469ZM115.655 36.2292C115.778 36.2175 115.769 36.218 115.93 36.266C116.036 36.3407 116.053 36.3501 116.083 36.4213L115.984 36.4509C115.87 36.4448 115.748 36.4109 115.623 36.3807L115.572 36.3449L115.655 36.2292ZM46.0027 43.8224C46.042 43.8079 46.0932 43.8026 46.1428 43.7949C46.2624 43.8265 46.3511 43.8435 46.4523 43.9027L46.4418 43.9918C46.401 44.027 46.4255 44.021 46.3534 44.0328C46.2778 44.0452 46.2044 44.0101 46.1037 43.9811C45.9917 43.8915 45.9917 43.896 46.0027 43.8224ZM5.85689 7.98986C5.99819 7.98441 5.99207 7.9841 6.16383 8.03889C6.27359 8.12958 6.29012 8.15709 6.29631 8.23645L6.27596 8.24241C6.15562 8.24781 6.05416 8.19817 5.92049 8.15113C5.81958 8.05588 5.82476 8.0614 5.85689 7.98986ZM60.9429 52.8779L61.0336 52.8736C61.239 52.95 61.2437 52.9445 61.3706 53.0596C61.3351 53.1278 61.339 53.1286 61.1981 53.1402C61.0799 53.0963 60.9834 53.0659 60.9032 53.0006L60.9429 52.8779ZM66.3284 47.6812L66.4347 47.6538L66.6511 47.7149C66.7847 47.8294 66.7701 47.8348 66.768 47.9278L66.764 47.9581C66.6255 47.9208 66.4581 47.8525 66.3559 47.7828C66.287 47.736 66.3217 47.7172 66.3284 47.6812ZM46.0386 42.9204C45.9974 42.9846 45.9681 43.0009 45.8396 43.0195C45.6651 42.9606 45.6697 42.9627 45.5552 42.8728C45.5346 42.8054 45.5348 42.8052 45.6074 42.7706C45.7449 42.7878 45.8068 42.8044 45.9475 42.8576L46.0386 42.9204ZM113.024 40.0455C113.076 40.0304 113.11 40.0256 113.195 40.0387C113.303 40.0554 113.395 40.087 113.481 40.1393L113.481 40.2428C113.436 40.2647 113.402 40.2704 113.336 40.2787L113.107 40.1914C113.012 40.1212 113.033 40.1062 113.024 40.0455ZM128.707 42.34C128.704 42.2688 128.696 42.2524 128.782 42.2131C128.929 42.2338 128.945 42.2461 129.091 42.3089L129.188 42.392C129.152 42.4424 129.132 42.4444 129.01 42.4453C128.921 42.4461 128.843 42.4266 128.74 42.4034L128.707 42.34ZM77.4038 3.58054L77.4385 3.56956C77.6236 3.64161 77.7269 3.6664 77.8434 3.76657L77.8047 3.83954L77.6533 3.85613C77.5083 3.80352 77.4913 3.79382 77.3837 3.71977L77.4038 3.58054ZM85.9411 12.0042L86.0564 11.9851C86.196 12.0291 86.3171 12.0513 86.4117 12.1245L86.3954 12.1977L86.3528 12.2258C86.2173 12.2314 86.2181 12.2281 86.0512 12.176C85.9366 12.0804 85.9276 12.0813 85.9411 12.0042ZM37.1099 15.479L37.1972 15.4494C37.3561 15.476 37.3556 15.4754 37.5017 15.5461C37.5819 15.63 37.5801 15.6254 37.5413 15.6845C37.3872 15.6927 37.3066 15.6632 37.1189 15.6174C37.0859 15.5619 37.1024 15.5249 37.1099 15.479ZM52.779 49.7151L52.8092 49.702C52.9121 49.6782 52.9511 49.6926 53.0981 49.7296C53.2259 49.815 53.2132 49.8339 53.2436 49.9147C53.2346 49.9681 53.2498 49.9451 53.1965 49.983L52.9631 49.8912C52.8193 49.8173 52.82 49.7911 52.779 49.7151ZM103.257 41.9929L103.344 41.9781C103.495 42.0224 103.603 42.0407 103.72 42.116L103.686 42.1916C103.634 42.2226 103.608 42.2214 103.515 42.2239C103.331 42.1573 103.329 42.1602 103.215 42.0647L103.257 41.9929ZM56.0688 42.171C56.0823 42.1155 56.0783 42.0822 56.1749 42.0628C56.2776 42.0787 56.3416 42.0873 56.4391 42.1439C56.4769 42.1659 56.531 42.2116 56.5609 42.236L56.5502 42.3058C56.3793 42.3084 56.3538 42.3009 56.1604 42.2495L56.0688 42.171ZM104.374 33.7535C104.471 33.732 104.466 33.7278 104.608 33.7574C104.763 33.8289 104.758 33.8289 104.833 33.916L104.768 33.9735L104.729 33.9736C104.608 33.9655 104.441 33.914 104.319 33.8636L104.374 33.7535ZM107.733 43.9379C107.582 43.9047 107.581 43.8961 107.454 43.8235C107.395 43.7486 107.409 43.7487 107.449 43.6964C107.598 43.7043 107.619 43.708 107.785 43.76C107.879 43.8602 107.867 43.8768 107.859 43.9574L107.733 43.9379ZM113.378 38.3474L113.32 38.437C113.168 38.4435 113.166 38.4466 112.982 38.3933L112.883 38.3171C112.888 38.2524 112.877 38.2406 112.97 38.2151C113.117 38.234 113.136 38.2336 113.283 38.2915L113.378 38.3474ZM74.1754 7.92291C74.2158 7.84847 74.1915 7.81516 74.3615 7.8106C74.5501 7.88241 74.5494 7.88345 74.667 7.98337C74.6235 8.04799 74.6258 8.04946 74.4828 8.05827L74.2837 7.9905L74.1754 7.92291ZM78.8173 0.534825C78.8691 0.528751 78.9399 0.530533 78.9979 0.529282L79.159 0.589662C79.2415 0.672329 79.2577 0.707982 79.2667 0.780752L79.2022 0.805441L78.9054 0.69446C78.7951 0.602178 78.7978 0.608048 78.8173 0.534825ZM64.6132 7.12101C64.4321 7.04402 64.3602 7.0266 64.255 6.9256C64.2898 6.8666 64.2884 6.86056 64.4071 6.84651L64.6232 6.91486C64.7389 7.01076 64.7195 7.03154 64.7276 7.11402L64.6132 7.12101ZM10.6827 5.38527C10.497 5.3129 10.4755 5.31623 10.375 5.21301L10.3839 5.14862C10.5084 5.13915 10.5273 5.14366 10.6863 5.18009L10.8166 5.26012C10.8273 5.31075 10.8384 5.35955 10.8367 5.40713L10.6827 5.38527ZM78.3411 8.51083L78.4792 8.50136C78.6274 8.544 78.663 8.5511 78.7846 8.61926L78.7686 8.7084C78.7092 8.72237 78.6354 8.72919 78.5692 8.73865C78.4181 8.69322 78.4105 8.6699 78.3125 8.59549L78.3411 8.51083ZM72.5503 12.2345L72.6958 12.2356C72.8675 12.2881 72.853 12.2842 72.9654 12.3723C72.9653 12.4474 72.9611 12.4448 72.8502 12.473L72.4491 12.352C72.4622 12.2998 72.5 12.2716 72.5503 12.2345ZM62.4232 2.45488L62.5684 2.4443C62.6952 2.48187 62.7895 2.49788 62.8879 2.5618L62.8402 2.64774C62.8015 2.67053 62.7488 2.67964 62.6928 2.69239L62.545 2.64593C62.4091 2.54019 62.4235 2.54122 62.4232 2.45488ZM66.7 5.00516L66.6847 5.02115C66.6258 5.07111 66.5656 5.09524 66.4179 5.08496L66.2587 5.0129C66.1896 4.94514 66.1613 4.91246 66.1597 4.854L66.2766 4.83727L66.5105 4.91012L66.7 5.00516ZM28.8432 16.1677L28.8708 16.1639C29.0035 16.1601 29.0389 16.173 29.1944 16.2198C29.282 16.3065 29.2701 16.325 29.2701 16.3971C29.1094 16.4066 29.0233 16.365 28.827 16.3068C28.815 16.2519 28.8278 16.2144 28.8432 16.1677ZM47.9117 45.5006L47.8428 45.5815C47.6981 45.5985 47.7095 45.6036 47.5181 45.55L47.4226 45.4793C47.3979 45.4019 47.3881 45.3954 47.4667 45.3549C47.6338 45.3778 47.6805 45.4014 47.8455 45.4644L47.9117 45.5006ZM119.646 34.9976L119.782 34.9665C119.922 35.0023 119.934 35.0144 120.052 35.081C120.116 35.1601 120.119 35.1563 120.067 35.2059C119.927 35.218 119.745 35.1579 119.573 35.1129L119.646 34.9976ZM59.7259 43.8456C59.7637 43.8392 59.8029 43.8489 59.8533 43.8559C60.0255 43.9272 60.0825 43.9433 60.1986 44.0379L60.129 44.0947C60.0104 44.1118 59.9943 44.1005 59.8285 44.0595C59.6824 43.9459 59.7172 43.938 59.7259 43.8456ZM66.4045 49.2485L66.4926 49.2287C66.6242 49.2461 66.6378 49.2531 66.7713 49.3068C66.8663 49.3885 66.8479 49.3998 66.8461 49.4673C66.8354 49.4891 66.8157 49.4997 66.7901 49.5148L66.5411 49.4262C66.4048 49.3386 66.4261 49.3295 66.4045 49.2485ZM129.657 49.9984L129.729 49.9928C129.871 50.0402 129.929 50.0692 130.04 50.1384C130.074 50.2156 130.069 50.2141 129.997 50.257L129.943 50.2573C129.82 50.2469 129.771 50.2163 129.655 50.164C129.58 50.0731 129.617 50.0619 129.657 49.9984ZM106.194 35.9725C106.167 35.8993 106.17 35.8931 106.231 35.8476C106.374 35.8619 106.381 35.8675 106.53 35.9269C106.64 36.023 106.632 36.0175 106.609 36.0932C106.477 36.1008 106.343 36.0647 106.186 36.0288L106.194 35.9725ZM50.4138 46.7719L50.1244 46.6647L50.0465 46.5864C50.1096 46.5336 50.1176 46.522 50.2598 46.5129C50.3622 46.5493 50.4211 46.5566 50.479 46.6142C50.5446 46.6796 50.5384 46.7082 50.5415 46.763L50.4139 46.7718L50.4138 46.7719ZM67.6734 10.132L67.77 10.1175L68.0966 10.2142C68.1465 10.2867 68.1051 10.3043 68.0678 10.354L67.9476 10.3712C67.7921 10.3177 67.7513 10.3126 67.6433 10.2306L67.6734 10.132ZM65.9111 11.2977C65.953 11.2837 65.9963 11.282 66.0527 11.2783C66.1776 11.3176 66.2997 11.3558 66.4222 11.4016L66.3563 11.4791L66.3244 11.4973C66.238 11.5252 66.1357 11.5046 66.0029 11.47C65.8865 11.3859 65.9147 11.3701 65.9111 11.2977ZM71.3905 47.73C71.4053 47.7208 71.4208 47.709 71.4451 47.705C71.5507 47.6878 71.6084 47.715 71.7439 47.7577C71.8622 47.8637 71.8569 47.8654 71.8481 47.9478L71.7961 47.9848C71.7014 47.9533 71.6099 47.9265 71.5282 47.8808C71.3987 47.8084 71.4128 47.7993 71.3905 47.73ZM60.1699 49.9254C59.9845 49.8478 59.9365 49.842 59.8414 49.7383C59.8863 49.6732 59.8727 49.67 60.0251 49.6691C60.1752 49.7215 60.1977 49.7279 60.3079 49.8026C60.3212 49.848 60.3313 49.8854 60.3259 49.9264L60.1699 49.9254ZM75.4532 0.979656C75.5371 0.96775 75.5414 0.974229 75.6478 0.9943C75.6936 1.01905 75.7364 1.04038 75.7727 1.06873C75.8791 1.15189 75.873 1.21213 75.8634 1.27639L75.8449 1.27094C75.626 1.19691 75.5247 1.17541 75.3844 1.06104L75.4532 0.979656ZM73.4269 16.8654L73.562 16.8428C73.6933 16.884 73.7925 16.9104 73.9094 16.9712L73.8621 17.0587C73.8179 17.0784 73.7695 17.0831 73.707 17.0909C73.5216 17.029 73.5238 17.0308 73.3999 16.9362L73.4269 16.8654ZM97.8748 35.253C97.8301 35.3104 97.7893 35.3161 97.6668 35.3266C97.5334 35.3013 97.5377 35.3 97.4203 35.2375C97.3716 35.169 97.3525 35.1371 97.3799 35.0859C97.5407 35.0794 97.5907 35.109 97.7813 35.1696L97.8748 35.253ZM59.3668 42.0642C59.229 42.0224 59.149 42.0034 59.0396 41.9329C59.0209 41.8604 59.0389 41.853 59.1035 41.8075L59.2287 41.8099C59.3759 41.8684 59.44 41.9025 59.5006 41.9851C59.5248 42.0181 59.5271 42.0319 59.537 42.0608L59.3668 42.0642ZM29.8296 18.888C29.8757 18.883 29.9426 18.8905 29.9971 18.8934C30.1631 18.9525 30.1676 18.9518 30.2756 19.0373L30.2341 19.1102L30.1014 19.1247C29.974 19.0897 29.8727 19.0674 29.7668 19.0026L29.8296 18.888ZM46.9298 38.6575C46.9789 38.6374 46.9536 38.6421 47.0249 38.6357C47.116 38.6275 47.3528 38.7207 47.4742 38.7591L47.4097 38.8185C47.3721 38.8649 47.3144 38.8627 47.2161 38.8749C47.067 38.8384 47.0731 38.8386 46.9551 38.766L46.9298 38.6575ZM31.8144 16.5766C31.9043 16.5656 31.8949 16.5692 32.0036 16.5916C32.134 16.6574 32.1939 16.695 32.2844 16.7707L32.209 16.8151L32.1458 16.816C31.9972 16.8108 31.9822 16.8041 31.8288 16.7412C31.7358 16.6431 31.7692 16.6427 31.8144 16.5766ZM63.9377 3.46919C63.919 3.50428 63.8868 3.52916 63.8532 3.55829L63.7272 3.54684C63.5483 3.48115 63.5327 3.48029 63.4096 3.3821C63.4363 3.33745 63.4543 3.30891 63.5301 3.28716L63.7852 3.36762L63.9377 3.46919ZM64.6809 45.1154C64.7275 45.0932 64.7601 45.0916 64.8319 45.0872L64.9917 45.1498C65.1117 45.2431 65.1149 45.2903 65.1292 45.3727L65.0989 45.3897C64.9106 45.3246 64.7935 45.2944 64.6431 45.2006L64.6809 45.1154ZM61.8778 49.2333C62.0286 49.2783 62.1134 49.3081 62.2488 49.3737L62.2788 49.4407C62.2296 49.4815 62.2052 49.5035 62.0993 49.5131L61.9255 49.4504C61.7779 49.3353 61.795 49.3343 61.7927 49.2392L61.8778 49.2333ZM53.2938 45.6987L53.2872 45.7357C53.2595 45.807 53.2398 45.8023 53.094 45.8048C52.9488 45.7509 52.917 45.7435 52.8166 45.6699C52.7947 45.6039 52.7881 45.5979 52.8513 45.5616C52.9845 45.5672 53.0482 45.5859 53.1925 45.6292L53.2938 45.6987ZM113.816 41.2892L113.916 41.2724L114.054 41.3148C114.174 41.3975 114.213 41.4163 114.251 41.4995L114.161 41.5322C113.998 41.5031 113.902 41.4841 113.742 41.4183C113.745 41.3639 113.779 41.3313 113.816 41.2892ZM64.4904 38.3699L64.536 38.3683C64.6876 38.4046 64.6942 38.4136 64.8229 38.4856C64.881 38.5797 64.8712 38.5861 64.8236 38.6489L64.7567 38.6374C64.6264 38.6053 64.5292 38.5561 64.4238 38.4984C64.3903 38.4101 64.3957 38.4142 64.4904 38.3699ZM65.0552 51.2417C65.1973 51.2454 65.2488 51.2694 65.4072 51.3186C65.5289 51.4102 65.5205 51.4074 65.5235 51.4881C65.3546 51.5015 65.3555 51.4972 65.1534 51.439C65.0255 51.3416 65.0565 51.3241 65.0552 51.2417ZM38.5013 17.593C38.5478 17.5742 38.5996 17.5673 38.6609 17.5581C38.7987 17.5946 38.8132 17.5974 38.9267 17.6612C38.9919 17.7426 38.9888 17.7406 38.9445 17.7961L38.8243 17.7995C38.7099 17.767 38.5379 17.7313 38.446 17.6776L38.5013 17.593ZM69.8422 55.3638L69.9463 55.4396C70.0344 55.4936 70.1347 55.5858 70.2141 55.6286C70.3736 55.7146 70.4448 55.6993 70.5992 55.8145L70.5495 55.885C70.5061 55.9046 70.4685 55.9047 70.4017 55.9078C70.0566 55.7673 70.2384 55.767 70.1677 55.6455C70.1327 55.5852 69.9217 55.4325 69.8422 55.3638ZM90.4353 9.80132C90.5577 9.79172 90.5717 9.79593 90.7288 9.83374L90.8666 9.92428C90.8945 10.0002 90.8796 9.99759 90.8012 10.0382L90.7182 10.0315C90.589 10.013 90.4749 9.97709 90.3744 9.91566L90.4353 9.80132ZM49.9787 44.5228L50.0106 44.5183C50.1273 44.5154 50.1763 44.5476 50.3036 44.5977C50.4359 44.7141 50.4212 44.7272 50.4247 44.8241C50.2879 44.7902 50.1457 44.7369 50.0101 44.6915C49.9128 44.5961 49.9458 44.5913 49.9787 44.5228ZM57.0241 43.3637L57.1462 43.345L57.2811 43.4018C57.3841 43.4862 57.4045 43.4991 57.4196 43.5744L57.3191 43.5977L57.0403 43.5281C56.8692 43.4996 56.7946 43.5409 56.6201 43.501C56.8763 43.4831 56.9231 43.4784 57.0241 43.3637ZM74.0474 48.7391C74.0884 48.7272 74.1409 48.7243 74.1913 48.7191C74.3676 48.7811 74.3594 48.7836 74.4713 48.8764C74.4824 48.9458 74.4827 49.012 74.574 49.0928L74.6316 49.1416C74.4671 48.9946 74.1972 48.9604 74.0137 48.8241L74.0474 48.7391ZM15.5922 5.16197L15.7227 5.1373C15.8809 5.18902 15.8996 5.19391 16.018 5.27149C16.0211 5.33978 16.0106 5.40644 16.1048 5.48896L16.1635 5.53767L16.1592 5.57288L15.9661 5.42664C15.8507 5.38064 15.7101 5.3318 15.6199 5.27103C15.5599 5.23054 15.5902 5.19468 15.5922 5.16197ZM83.1152 14.5922C83.2769 14.5799 83.3283 14.6059 83.5289 14.6608C83.6109 14.6619 83.6984 14.669 83.7896 14.6819L83.6006 14.7031C83.5743 14.8014 83.5884 14.8084 83.4057 14.8269L83.2191 14.7646C83.102 14.6698 83.1093 14.6726 83.1152 14.5922ZM57.9884 49.3404L58.0333 49.3367C58.1561 49.3466 58.2059 49.3759 58.3112 49.4292C58.4084 49.5356 58.4098 49.5529 58.398 49.6409L58.3365 49.6283C58.184 49.5873 58.0621 49.5388 57.9476 49.4672C57.9159 49.3937 57.9324 49.3883 57.9884 49.3404ZM76.7573 55.2064L76.8222 55.2291C76.8852 55.2784 76.9474 55.3321 77.0361 55.3749C77.2142 55.4608 77.2793 55.4768 77.391 55.5836L77.316 55.6345C77.1931 55.6388 77.1875 55.644 77.0403 55.6013C76.9042 55.479 76.9317 55.4783 76.9582 55.3861C76.8761 55.3236 76.8195 55.2694 76.7573 55.2064ZM65.3733 3.96849L65.5174 3.96665C65.6712 4.01425 65.7421 4.02225 65.8469 4.10244L65.8021 4.18818L65.7254 4.21314C65.6062 4.20033 65.5549 4.19057 65.431 4.14396C65.323 4.04007 65.3418 4.04288 65.3733 3.96849ZM57.5291 42.0612C57.5736 42.0448 57.6257 42.0426 57.6863 42.0375L57.8977 42.1072C58.0135 42.2043 57.9923 42.2106 57.9863 42.2893L57.9872 42.3451C57.8796 42.3219 57.7342 42.2594 57.627 42.2202C57.5197 42.1313 57.5185 42.134 57.5291 42.0612ZM62.759 48.2777L62.7893 48.2747C62.931 48.2792 62.9564 48.2901 63.1024 48.3489C63.2147 48.45 63.1847 48.4641 63.1714 48.5443L63.1367 48.5598C62.994 48.5156 62.8705 48.4785 62.7373 48.4171C62.6838 48.334 62.7083 48.3307 62.759 48.2777ZM16.5268 18.3126C16.7109 18.2401 16.7955 18.3483 17.0354 18.3827C17.1033 18.3925 17.2346 18.3741 17.2984 18.3713L17.2901 18.3996L17.1858 18.3861C17.128 18.4011 17.0795 18.4137 17.0421 18.4401C16.9924 18.4748 16.9626 18.5015 16.8681 18.5116C16.7734 18.5217 16.782 18.5145 16.6684 18.4815C16.5516 18.396 16.5481 18.3921 16.5269 18.3126L16.5268 18.3126ZM81.5722 12.6538C81.7045 12.6518 81.7136 12.6579 81.8729 12.7064L81.9571 12.785C81.9606 12.8547 81.982 12.8712 81.8765 12.8971L81.6247 12.8296C81.4375 12.7892 81.3075 12.8448 81.1525 12.7922C81.4002 12.7689 81.4743 12.7673 81.5722 12.6538ZM105.058 43.4177L105.176 43.4058C105.333 43.4601 105.351 43.4654 105.465 43.544C105.464 43.6 105.446 43.6641 105.523 43.733L105.566 43.7699L105.608 43.8393L105.459 43.7219C105.329 43.6752 105.211 43.6221 105.088 43.5674C105.009 43.4796 105.02 43.4815 105.058 43.4177ZM120.054 49.9212L120.204 49.9082C120.617 50.057 120.415 50.05 120.506 50.1945C120.527 50.2269 120.63 50.3012 120.673 50.3373C120.53 50.2834 120.589 50.2773 120.493 50.2223C120.429 50.186 120.219 50.1136 120.137 50.0812C120.026 49.9923 120.043 49.9957 120.054 49.9212ZM12.6875 13.6584L12.716 13.6781C12.8138 13.7386 12.8878 13.7865 12.9684 13.8502L12.9962 13.8723L13.173 13.9475C13.3065 14.0148 13.3364 14.045 13.3796 14.1182L13.2925 14.1642C13.1565 14.1513 13.1311 14.1414 12.9851 14.0912C12.8714 13.9737 12.98 13.9888 12.9462 13.8979C12.9294 13.8525 12.7474 13.7122 12.6875 13.6584ZM60.2573 1.77168L60.303 1.75834C60.3934 1.74375 60.5248 1.78959 60.6379 1.82266L60.7256 1.89217C60.7133 1.94659 60.6745 2.01569 60.7454 2.08704L60.784 2.12273L60.8642 2.19806L60.8052 2.17655C60.6847 2.07421 60.5988 2.02876 60.4059 1.95264L60.35 1.93101C60.2391 1.84418 60.2529 1.84642 60.2573 1.77168ZM120.21 52.2555C120.399 52.3738 120.508 52.5347 120.708 52.6509C120.839 52.7274 121.007 52.7664 121.152 52.8548C121.166 52.9191 121.124 52.9253 121.058 52.96C120.967 52.952 120.893 52.9303 120.794 52.9061L120.699 52.8371C120.709 52.6334 120.407 52.4802 120.21 52.2555ZM126.208 40.1324L126.337 40.1075L126.491 40.1563C126.599 40.2366 126.623 40.2493 126.648 40.3238L126.507 40.3403C126.222 40.2761 126.159 40.2862 125.933 40.2878C125.548 40.2907 125.187 40.32 124.823 40.3419C124.523 40.3599 124.156 40.3519 123.976 40.4509L123.902 40.6155L123.855 40.5927C123.869 40.5538 123.885 40.4048 123.931 40.3892C124.007 40.3629 124.261 40.368 124.373 40.3608L125.851 40.2635C125.909 40.2593 126.101 40.2593 126.133 40.2423C126.172 40.2219 126.187 40.1629 126.208 40.1324ZM16.5979 16.9584C16.6587 16.9763 16.8155 17.0309 16.8663 17.0372C17.0827 17.0638 17.4418 17.0089 17.6288 16.9964L20.1471 16.826C20.1973 16.7547 20.1811 16.7142 20.3516 16.7102C20.5008 16.7656 20.5099 16.7758 20.6147 16.8541L20.6487 16.9302C20.5581 16.9577 20.4727 16.942 20.3207 16.9058C20.2542 16.89 20.2339 16.8827 20.1742 16.8639L17.6775 17.0288C17.4821 17.0419 17.1548 17.0991 16.9367 17.0784C16.8673 17.0719 16.7085 17.0251 16.6281 17.0062L16.5979 16.9584ZM58.6987 54.4514C58.8339 54.4522 59.0039 54.524 59.159 54.5731L60.5395 55.0151C60.6623 55.0557 61.0495 55.1737 61.144 55.2356C61.2712 55.3191 61.3972 55.4504 61.502 55.5393L62.396 56.2975C62.5659 56.3667 62.6824 56.4222 62.8264 56.5071C62.8519 56.5802 62.8478 56.5751 62.7622 56.6084C62.6118 56.6033 62.6098 56.6044 62.4422 56.5465C62.3595 56.4488 62.3902 56.4292 62.417 56.3553L61.3933 55.5033C61.3087 55.4341 61.1741 55.2985 61.0689 55.2401C60.9372 55.1669 60.678 55.0933 60.5262 55.0431L58.6987 54.4514ZM66.37 38.6584L66.5005 38.6455L66.7043 38.7141C66.7551 38.7579 66.7848 38.7862 66.7892 38.8257C66.7941 38.8704 66.7785 38.9074 66.8312 38.9609C66.9615 39.0934 67.1707 39.2471 67.3292 39.38L68.3723 40.2541C68.5273 40.3848 68.9096 40.6601 68.994 40.7836C69.0171 40.8176 68.9815 40.8949 68.9733 40.9263L68.8318 41.3631L68.7549 41.3531L68.9109 40.7869C68.7322 40.5983 68.481 40.4034 68.2591 40.2158L67.1986 39.3216C67.0971 39.2366 66.8673 39.0085 66.7485 38.948C66.6614 38.9037 66.4701 38.8399 66.37 38.7993C66.3141 38.7212 66.3324 38.7151 66.37 38.6584ZM78.4068 48.7182L78.3106 48.6916C78.2029 48.6611 78.1301 48.6303 78.0322 48.584C77.9851 48.5008 78.0032 48.5059 78.0771 48.4586L78.2151 48.4614C78.3305 48.5081 78.3772 48.5214 78.4421 48.5877C78.502 48.6489 78.5082 48.7134 78.5231 48.7686L80.2991 50.2534L80.6322 50.3967L80.6791 50.4763C80.6222 50.5337 80.6355 50.5362 80.4801 50.5288C80.319 50.465 80.2905 50.4603 80.1857 50.3713L80.229 50.3181C80.2305 50.3134 80.2315 50.2685 80.2254 50.2583C80.1741 50.1727 79.9002 49.9753 79.7837 49.8778L78.4068 48.7182ZM32.8147 10.6621C32.9371 10.6579 32.9396 10.6642 33.0897 10.7127C33.2133 10.8106 33.2201 10.8058 33.2037 10.8844C33.0627 10.9087 32.9683 10.8679 32.773 10.8196C31.6656 10.8395 30.621 10.9504 29.5693 11.0209C29.1145 11.0513 28.5059 11.0444 28.1197 11.1202C28.0748 11.1291 28.0641 11.149 28.0468 11.171L27.973 11.3026L27.9114 11.2922C27.9303 11.2188 27.9552 11.1327 28.0621 11.0948C28.2779 11.0184 28.8478 11.028 29.1531 11.0079L31.9616 10.8234C32.1595 10.8105 32.5577 10.82 32.698 10.7762C32.7482 10.7605 32.7847 10.6913 32.8147 10.6621ZM99.4943 38.4088C99.8034 38.3876 102.031 38.2019 102.169 38.225C102.251 38.2388 102.495 38.3302 102.592 38.3616L103.846 38.7667L107.537 38.5216L107.567 38.4323C107.602 38.3786 107.631 38.3722 107.758 38.3758C107.949 38.4586 107.951 38.4664 108.057 38.5655C107.929 38.6809 107.722 38.5374 107.503 38.539L103.788 38.7906L102.731 38.4393C102.62 38.4026 102.275 38.2777 102.171 38.2633C102.015 38.2417 101.681 38.2958 101.54 38.3051L99.3318 38.4482L99.4943 38.4088ZM87.0558 7.84732C87.096 7.83544 87.149 7.82892 87.195 7.82062C87.3722 7.86612 87.3597 7.86723 87.492 7.95624C87.5044 8.0166 87.4751 8.03597 87.3961 8.06126C87.1978 8.12483 87.2079 8.30176 87.1654 8.43436L86.8835 9.31733C86.8557 9.40013 86.8462 9.54749 86.7085 9.58474C86.5586 9.62541 86.234 9.62069 86.043 9.63306L84.1892 9.7529L83.9658 9.76382C84.0186 9.70218 84.3805 9.70586 84.5287 9.6958L86.3017 9.57322C86.3996 9.56508 86.6101 9.56477 86.6769 9.54082C86.8112 9.49297 86.828 9.26336 86.86 9.16728L87.2078 8.06488C87.1337 7.99166 87.0979 7.93963 87.066 7.8702L87.0558 7.84732ZM105.086 36.9334C105.342 36.897 105.28 36.9748 105.512 37.0051C105.619 37.0191 105.816 36.9934 105.912 36.9892L107.069 36.9286L112.982 36.5314L114.675 36.4224C114.956 36.4043 115.225 36.3721 115.524 36.3703L115.387 36.3895L105.624 37.0451C105.594 37.0846 105.566 37.1303 105.489 37.1479C105.392 37.1702 105.31 37.1489 105.175 37.1068C105.064 37.0103 105.073 37.0126 105.086 36.9334ZM63.7852 3.36762L66.3809 3.19907C66.5157 3.19135 66.9567 3.14418 67.1027 3.1867L67.2334 3.20904C67.0798 3.2607 66.8764 3.25629 66.6695 3.26791L65.7186 3.33273L64.6313 3.40897C64.42 3.42396 64.2178 3.45341 63.9824 3.44635L63.9377 3.46919L63.7852 3.36762Z" fill="white"/>
<path d="M132.428 49.222L135.185 51.5237L135.037 51.5251L132.331 49.2567L132.428 49.222ZM106.923 42.7968C107.109 42.7586 107.182 42.8355 107.391 42.8675C107.537 42.8899 107.883 42.8409 108.024 42.8318L116.051 42.2958L117.051 42.2258C117.146 42.2185 117.351 42.2196 117.416 42.1973C117.534 42.1567 117.419 42.0798 117.627 42.0688C117.819 42.1414 117.816 42.1406 117.934 42.2422L117.908 42.3044C117.726 42.3062 117.643 42.2525 117.488 42.24C117.36 42.2295 117.201 42.2544 117.082 42.2585L115.255 42.3628L108.591 42.8052C108.303 42.8244 107.957 42.8266 107.704 42.8708C107.65 42.8803 107.621 42.8956 107.545 42.8881L107.506 42.8817C107.414 42.8961 107.401 42.9308 107.373 42.9759C107.353 43.0087 107.26 43.0068 107.193 43.0146L107.045 42.9624C106.931 42.8727 106.922 42.8728 106.923 42.7968ZM124.222 43.7146L124.535 42.7632C124.552 42.7179 124.564 42.6393 124.638 42.6205C124.794 42.581 125.03 42.5762 125.223 42.5625L126.565 42.4862L128.707 42.3399L128.74 42.4033C128.385 42.4179 124.792 42.6049 124.728 42.6486C124.7 42.6676 124.691 42.7238 124.679 42.751L124.459 43.4091C124.428 43.5074 124.347 43.6266 124.382 43.741L124.222 43.7146ZM72.6119 2.96198C72.7075 2.93268 72.7245 2.93047 72.8712 2.9447C73.0291 3.0154 73.0187 3.02015 73.0958 3.10896L73.0849 3.13315C73.0721 3.16125 73.0055 3.17327 72.9334 3.16526C72.861 3.1571 72.7154 3.09045 72.6369 3.07808C72.5474 3.06393 72.3554 3.09386 72.2695 3.09986L70.9727 3.19016L70.7726 3.75678L66.9691 4.00808L66.5406 4.02897C66.575 3.96215 69.6848 3.78262 70.0631 3.75623C70.2198 3.74525 70.5903 3.75215 70.6819 3.71283C70.715 3.69862 70.7284 3.61127 70.7367 3.58419C70.7708 3.47146 70.7735 3.22969 70.9081 3.15891C70.9415 3.14134 71.154 3.14198 71.2155 3.1377L72.2079 3.06976C72.309 3.06293 72.4997 3.06638 72.5763 3.04521C72.5934 3.04046 72.6057 2.97629 72.6119 2.96198ZM109.047 37.6624L109.172 37.633L109.406 37.7123C109.41 37.7134 109.502 37.7393 109.514 37.7401C109.692 37.7528 109.947 37.708 110.111 37.6964L111.824 37.5793L119.53 37.0653C119.551 37.0278 119.568 36.9877 119.612 36.9597C119.665 36.9263 119.67 36.9258 119.779 36.9399C119.921 37.002 119.958 37.0338 120.044 37.1088L120.009 37.1695C119.895 37.1825 119.793 37.153 119.648 37.1181C119.395 37.0569 112.919 37.5314 112.16 37.5818C111.435 37.6299 110.639 37.6474 109.954 37.7254C109.837 37.7388 109.621 37.7463 109.534 37.7753C109.501 37.7863 109.512 37.8387 109.484 37.854C109.458 37.8675 109.377 37.8729 109.338 37.88L109.147 37.8212C109.041 37.7389 109.053 37.7361 109.047 37.6624ZM128.444 43.3291C128.483 43.3562 128.514 43.3855 128.56 43.4103C128.687 43.4783 129.137 43.6006 129.3 43.6518L131.176 44.2634C131.302 44.3044 131.662 44.4074 131.75 44.4639C131.953 44.5941 132.143 44.782 132.309 44.9211L133.591 45.9985C133.751 46.1317 133.931 46.3042 134.136 46.4269L134.003 46.443L131.634 44.4719L128.983 43.5979C128.834 43.5569 128.779 43.5451 128.634 43.4832L128.588 43.4632C128.483 43.4443 128.398 43.4387 128.301 43.4326L128.451 43.4083L128.444 43.3291ZM51.3389 39.1083C51.3904 39.0995 51.4305 39.1026 51.4957 39.1065C51.6834 39.1795 51.68 39.173 51.7798 39.272C51.7391 39.3322 51.7392 39.3346 51.6087 39.3449L51.3491 39.2529L41.7059 39.889C41.5756 39.8981 41.4289 39.927 41.2661 39.8899L51.2741 39.2119C51.3474 39.2051 51.3302 39.147 51.3388 39.1083L51.3389 39.1083ZM72.1231 49.557C72.2065 49.5555 72.2695 49.5842 72.3665 49.6129C72.4727 49.6833 72.4816 49.6829 72.4834 49.747L72.4808 49.7845C72.4881 49.8353 72.5263 49.8725 72.5886 49.9278L76.027 52.8106L76.9602 53.6041C77.0947 53.7199 77.2379 53.8678 77.4091 53.9785L77.4654 54.0142C77.5331 54.0589 77.5396 54.062 77.6346 54.0999C77.725 54.1361 77.7916 54.1662 77.8739 54.2078C77.9361 54.2899 77.9243 54.2846 77.8674 54.3366L77.8332 54.337C77.689 54.3287 77.6639 54.3168 77.5132 54.2595C77.4417 54.1913 77.4587 54.1571 77.4688 54.1048L77.4735 54.0828L73.5966 50.8266L72.7345 50.1063C72.6444 50.0318 72.5194 49.906 72.4116 49.8411C72.3307 49.7925 72.1735 49.7377 72.076 49.6842C72.026 49.606 72.0653 49.6029 72.1231 49.557ZM71.8797 48.056C71.9878 48.0741 72.0117 48.1231 72.0765 48.1772L78.6589 53.6977C78.9196 53.9166 79.1732 54.1482 79.4574 54.3643C79.5395 54.4267 79.5866 54.4522 79.7022 54.4957C79.7831 54.5261 79.8528 54.5495 79.902 54.5968C79.9806 54.6725 79.9583 54.6836 79.9235 54.7325C79.7817 54.7268 79.7362 54.7072 79.5802 54.6596C79.4023 54.5225 79.5746 54.5691 79.5166 54.4708C79.4888 54.4237 79.3006 54.2882 79.2385 54.2358L78.3433 53.4827L71.8797 48.056ZM116.127 48.3071C116.38 48.3169 117.205 48.6268 117.515 48.7237C117.631 48.7599 117.762 48.8076 117.87 48.8127C118.218 48.829 118.587 48.7702 118.9 48.7492C119.908 48.6814 120.907 48.5839 121.969 48.564L122.825 48.8435C122.91 48.8715 123.099 48.9231 123.171 48.9572C123.316 49.0262 123.528 49.2379 123.631 49.325L124.778 50.296C124.989 50.4813 125.178 50.6481 125.416 50.8329C125.475 50.8782 125.567 50.9639 125.637 51.0035C125.773 51.0811 125.885 51.088 126.037 51.1913L126.026 51.261L125.899 51.2917C125.718 51.2387 125.722 51.2422 125.592 51.152C125.585 51.107 125.586 51.039 125.553 50.9891C125.523 50.9437 125.374 50.8375 125.316 50.7887L124.647 50.2244L123.519 49.2867C123.436 49.2174 123.281 49.0632 123.18 49.0057C123.038 48.925 122.07 48.6102 121.906 48.5938C121.722 48.5755 121.413 48.6265 121.244 48.6378L118.479 48.8212C118.348 48.8297 117.997 48.882 117.857 48.8614C117.742 48.8445 117.498 48.7539 117.377 48.7147L116.127 48.3071ZM97.7813 35.1695L97.852 35.1759C98.0715 35.1933 98.2816 35.1615 98.4705 35.1474L99.6152 35.0559C100.229 35.0092 105.803 34.6146 105.891 34.6286C105.955 34.6387 106.023 34.6677 106.089 34.6873L106.057 34.7137L105.997 34.703C105.786 34.676 105.529 34.7175 105.348 34.7296L103.826 34.8333C101.846 34.9662 99.7591 35.0451 97.8748 35.2529L97.7813 35.1695ZM58.4474 49.7235L58.4974 49.7253L66.0776 56.0786C66.2114 56.1315 66.3155 56.1783 66.4379 56.2404C66.5029 56.3152 66.4873 56.3112 66.4455 56.3624C66.3137 56.3748 66.3204 56.3834 66.1519 56.3342C65.9648 56.1933 66.1045 56.1898 66.0053 56.0687C65.9475 55.9978 65.785 55.8835 65.698 55.8104L58.4474 49.7235ZM96.0487 36.6542L106.194 35.9724L106.186 36.0287L96.1546 36.7015L96.0487 36.6542Z" fill="white"/>
<path d="M53.2203 46.9273L56.0424 46.7331L58.1139 47.4071C58.2272 47.4443 58.5288 47.5283 58.6158 47.572C58.7468 47.6379 58.8905 47.7823 58.983 47.8605L59.9326 48.6609L63.524 51.6758L65.3857 53.2333C65.5204 53.2721 65.6102 53.2959 65.7249 53.3624C65.8056 53.452 65.7909 53.4487 65.7487 53.5126L65.6409 53.5204C65.4737 53.4636 65.4621 53.4583 65.34 53.3743L65.3311 53.2653C65.3324 53.2022 65.0293 52.979 64.9255 52.8916L60.0021 48.7633L58.9517 47.8876C58.8622 47.8143 58.7274 47.6782 58.6174 47.6168C58.467 47.5326 58.0177 47.4058 57.8382 47.3471L56.5009 46.9119C56.3936 46.8771 56.1565 46.7863 56.0668 46.7713C55.9301 46.7486 55.6242 46.7874 55.5004 46.7947L53.249 46.9532L53.2203 46.9273ZM52.2197 35.0632L51.9641 34.8647C52.0582 34.7982 52.6272 34.8029 52.8305 34.7878L53.4836 35.3511L52.6099 35.4094C52.5255 35.3324 52.4421 35.2382 52.3112 35.171C52.2666 35.1311 52.2467 35.1021 52.2197 35.0632ZM32.0823 30.0264L32.0819 30.0343L32.1003 30.1153C32.1156 30.1782 32.1391 30.2387 32.0804 30.2789C32.0062 30.3302 31.831 30.3519 31.6589 30.3282C31.5183 30.309 31.3369 30.252 31.2078 30.1861C31.0581 30.1099 30.911 29.99 30.8785 29.907C30.8496 29.833 30.8741 29.7605 30.969 29.7314C31.0905 29.6942 31.2946 29.6947 31.4959 29.7403C31.6153 29.7675 31.8265 29.8821 31.9312 29.9341L32.045 29.9755L32.0823 30.0264ZM114.417 30.9168C114.378 30.8148 114.346 30.7173 114.465 30.6662C114.558 30.6266 114.707 30.6166 114.879 30.6454C115.037 30.6718 115.259 30.7468 115.388 30.8256C115.504 30.8957 115.616 31.0039 115.632 31.0723C115.653 31.1602 115.589 31.2257 115.465 31.2545C115.365 31.2778 115.204 31.268 115.052 31.2297C114.872 31.1842 114.731 31.1235 114.574 31.0455L114.417 30.9168ZM68.1608 10.2099L72.9779 9.8775L73.992 9.80892C74.088 9.80244 74.2437 9.77465 74.3511 9.78463C74.4861 9.79712 74.8778 9.94112 75.0207 9.988L76.7319 10.5405L79.1145 10.3836C79.6679 10.3471 80.2368 10.3206 80.7545 10.2561C80.855 10.2435 81.0572 10.2483 81.1303 10.2229C81.1725 10.2084 81.1465 10.1318 81.1862 10.1143C81.2184 10.0999 81.2738 10.0999 81.3176 10.0927C81.4697 10.1392 81.4887 10.1504 81.6126 10.2237C81.6531 10.2766 81.6446 10.2948 81.6239 10.3334C81.425 10.3435 81.378 10.2857 81.1809 10.2595C81.0328 10.2398 80.7227 10.2876 80.585 10.2967L78.6121 10.4282L77.2276 10.5222C77.0821 10.5321 76.8694 10.5686 76.7117 10.5576C76.6128 10.5507 76.3652 10.4648 76.2586 10.4305L74.8679 9.97192C74.7643 9.93795 74.5131 9.84711 74.4233 9.83487C74.3648 9.82686 74.2554 9.84525 74.202 9.84853L73.4599 9.89637L69.3633 10.1693L68.6037 10.2212C68.5291 10.2264 68.3869 10.2505 68.3076 10.2421C68.2615 10.2373 68.2097 10.2206 68.1608 10.2099ZM27.4899 24.159C27.5756 24.2765 27.6046 24.3603 27.5249 24.4372C27.4822 24.4785 27.2185 24.4951 27.0966 24.4778C26.9483 24.4567 26.7967 24.4044 26.6598 24.3383C26.4649 24.2442 26.3886 24.1656 26.3151 24.0598C26.3261 23.9686 26.3378 23.8729 26.4987 23.8443C26.6248 23.8218 26.7796 23.8498 26.9539 23.9013C27.1269 23.9525 27.2438 23.9987 27.352 24.0854L27.4899 24.159Z" fill="white"/>
<path d="M47.23 35.4463C47.3173 35.3555 48.1102 35.344 48.3475 35.3276L50.7297 35.1678C51.2283 35.1364 51.7564 35.1225 52.2197 35.0632C52.2467 35.1021 52.2667 35.1312 52.3113 35.1711C51.9349 35.2148 51.4996 35.2266 51.101 35.2532L48.6266 35.4182L47.5873 35.4843C47.4973 35.4899 47.3463 35.514 47.2466 35.5053C47.1982 35.5011 47.1419 35.4804 47.0896 35.4679L47.23 35.4463Z" fill="#767374"/>
<path d="M113.282 38.2914L116.313 38.0987L116.915 38.0578C116.978 38.0535 117.088 38.0337 117.157 38.0413C117.196 38.0457 117.371 38.107 117.417 38.1214L118.262 38.3895C118.333 38.4126 118.5 38.4767 118.563 38.4871C118.751 38.5179 121.633 38.2785 121.658 38.237C121.718 38.138 121.696 37.9481 121.799 37.8742C121.813 37.8641 121.981 37.8612 122.015 37.8588C122.296 37.8388 122.612 37.8313 122.866 37.7911L122.943 37.8572L122.204 37.9148C122.136 37.9197 121.945 37.9194 121.903 37.9365C121.884 37.9441 121.87 38.0138 121.862 38.0311C121.808 38.1599 121.819 38.3123 121.552 38.3382L119.234 38.5013C119.086 38.5114 118.78 38.5612 118.623 38.54C118.505 38.5242 118.324 38.4587 118.205 38.4209L117.146 38.0831C116.717 38.1526 116.181 38.1649 115.702 38.197L113.378 38.3473L113.282 38.2914ZM53.1925 45.6291L53.242 45.631C53.6159 45.6444 53.8984 45.6033 54.2288 45.5795L55.3436 45.5031C55.4316 45.4971 55.5955 45.4711 55.6971 45.4888C55.8572 45.5168 56.2153 45.6478 56.381 45.701C57.076 45.9241 57.808 46.1529 58.4944 46.3954C58.9366 46.6787 59.3028 47.039 59.6576 47.3384L61.8778 49.2332L61.7927 49.2392L58.8996 46.805C58.7642 46.6923 58.6021 46.5369 58.4377 46.432C58.3296 46.3629 56.7375 45.8653 56.4775 45.7812C56.3088 45.7266 55.8647 45.5613 55.7205 45.5379C55.6088 45.5197 55.3447 45.5613 55.2386 45.568L53.2938 45.6986L53.1925 45.6291ZM62.1493 41.5616L62.2826 41.5617L69.1538 47.3387C69.4404 47.5799 69.7215 47.8424 70.0492 48.0778L69.91 48.0873C69.4795 47.6181 68.7669 47.0833 68.2067 46.6134L63.0673 42.3023C62.8024 42.0804 62.4882 41.7631 62.1493 41.5616ZM69.2427 38.66L69.3145 38.7103C69.6142 38.9314 69.8804 39.1808 70.1504 39.4064L72.3013 41.2077C72.332 41.2334 72.4582 41.3258 72.4688 41.3481C72.539 41.4961 72.38 41.7049 72.3383 41.8327C72.1783 42.3245 71.9404 42.8133 71.8857 43.3365L74.9184 45.895L75.8012 46.6367C75.9459 46.7581 76.0943 46.9049 76.2634 47.0224C76.3472 47.0808 76.4636 47.1045 76.5536 47.1544C76.6722 47.2201 76.6788 47.2429 76.7021 47.3048L76.5848 47.3321C76.4869 47.3248 76.4344 47.3047 76.3313 47.2679C76.1438 47.1306 76.309 47.1074 76.1808 47.0007L72.2427 43.7048C72.1412 43.6196 71.7984 43.3718 71.8023 43.3016C71.8123 43.1143 71.9071 42.9404 71.9654 42.7671L72.283 41.8196C72.3258 41.6903 72.4312 41.5249 72.403 41.3777C72.3833 41.2762 71.9052 40.9277 71.7564 40.8025L70.2279 39.5183C69.9032 39.2453 69.5557 38.9671 69.2755 38.6925L69.2427 38.66ZM45.9475 42.8575L53.4092 42.3658L55.1891 42.2461C55.4676 42.2273 55.8479 42.2284 56.0688 42.171L56.1603 42.2494L46.0385 42.9203L45.9473 42.8576L45.9475 42.8575ZM27.3521 24.0853L34.1221 23.6358C34.329 23.6219 34.5653 23.5812 34.8125 23.6145C34.8069 23.6276 34.7957 23.6396 34.8016 23.6558C34.6657 23.7134 34.3472 23.7078 34.1403 23.7216L32.6618 23.8206L27.4898 24.159L27.3521 24.0853ZM64.6132 7.12093L64.7276 7.11394C64.9714 7.31907 65.2081 7.54379 65.4885 7.74404L67.3061 7.6036L68.8062 8.08841C68.9339 8.12989 69.1863 8.22516 69.3029 8.24031C69.371 8.24922 69.5024 8.22909 69.5681 8.22535L70.341 8.17745L74.1754 7.92283L74.2837 7.99042L69.727 8.29994C69.6556 8.30434 69.4731 8.33022 69.3965 8.31953C69.316 8.30829 69.0829 8.22348 68.9908 8.19406L67.5285 7.71449C67.4818 7.69928 67.3785 7.66402 67.3323 7.66286C67.1235 7.65782 66.9081 7.69104 66.7157 7.70377L65.4077 7.79048L64.6132 7.12093ZM136.267 51.0981L136.239 51.0683C135.951 50.7908 133.508 48.6839 133.235 48.5499C133.175 48.5201 133.016 48.4774 132.943 48.4533L132.076 48.1675C132.013 48.1467 131.84 48.0991 131.787 48.0727C131.652 48.005 131.352 47.7138 131.241 47.6201L129.031 45.7646C128.921 45.6731 128.667 45.4285 128.534 45.3603C128.365 45.273 128.088 45.1965 127.894 45.1332C127.37 44.962 126.798 44.7954 126.29 44.5987L126.295 44.5632L128.075 45.1428C128.208 45.1863 128.539 45.2849 128.646 45.3483C128.851 45.47 129.068 45.6902 129.228 45.8242L131.209 47.4863C131.407 47.6523 131.639 47.8914 131.877 48.0476C132.007 48.1323 132.746 48.344 132.944 48.4096C133.048 48.4441 133.278 48.5156 133.359 48.5628C133.547 48.6715 133.835 48.9645 133.987 49.0922L136.328 51.0617L136.267 51.0981ZM118.209 44.1279L124.222 43.7146L124.382 43.741C124.371 43.7648 124.365 43.8228 124.337 43.8369C124.315 43.8482 124.159 43.8471 124.119 43.8495L123.359 43.8959L119.853 44.1371C119.357 44.1719 118.768 44.1763 118.321 44.2451L118.209 44.1279ZM110.692 43.9873L117.597 43.5189L119.444 43.3906C119.545 43.3815 119.832 43.3752 119.87 43.3382C119.932 43.2779 119.936 43.1578 119.963 43.0823L120.269 42.1454C120.305 42.0357 120.311 41.8757 120.401 41.7878C120.473 41.7176 120.765 41.6862 120.972 41.7502C120.865 41.8222 120.58 41.7616 120.489 41.8509C120.428 41.9107 120.428 42.0016 120.411 42.0771C120.368 42.2775 120.355 42.5656 120.2 42.7217C120.178 42.7445 120.184 42.7666 120.183 42.7958C120.176 42.9701 120.104 43.1788 119.994 43.3185C119.979 43.3374 119.965 43.3985 119.938 43.4076C119.846 43.4371 119.593 43.434 119.467 43.4433L118.028 43.5429L113.658 43.8335L110.791 44.0382L110.692 43.9873ZM50.5416 46.7629C51.2456 47.3763 58.0538 53.1705 58.4102 53.33L58.2011 53.3372C58.1961 53.3193 58.2021 53.3031 58.1863 53.2836C58.1232 53.206 57.8913 53.0478 57.79 52.9628L56.331 51.7369L52.5574 48.561L50.4139 46.7718L50.5416 46.7629ZM60.1698 49.9253L60.3259 49.9263C60.46 50.0829 60.6957 50.2575 60.8822 50.4142L65.2243 54.0592C65.325 54.1436 65.4246 54.2457 65.5615 54.3228L67.406 54.9322C67.5088 54.9657 67.8633 55.0646 67.9289 55.1026C68.0544 55.1751 68.2231 55.3475 68.3236 55.4311C68.4836 55.5645 68.7167 55.8072 68.9271 55.9215L68.8693 55.9687L68.1396 55.367C68.0637 55.3045 67.949 55.1883 67.8464 55.1327C67.7437 55.0771 67.4996 55.0081 67.3801 54.9685C67.0083 54.8453 65.6351 54.4435 65.3975 54.3016C65.2916 54.2385 65.1836 54.1265 65.1029 54.0584L64.3439 53.4168L60.1698 49.9253ZM9.66677 6.29234L9.7735 6.30373C10.1006 6.55212 10.3912 6.80619 10.6858 7.05729C10.7581 7.11889 10.9634 7.27641 10.9836 7.3302C10.995 7.36057 10.9772 7.40553 10.9736 7.43356C10.9419 7.67735 10.8046 7.90038 10.7302 8.13175C10.7044 8.21199 10.6441 8.30715 10.6718 8.40007C10.6994 8.4928 11.488 9.1085 11.6541 9.24787L15.0643 12.107L14.9448 12.1164L10.8703 8.69773C10.7812 8.62127 10.6106 8.49827 10.5575 8.42762C10.513 8.36832 10.581 8.26524 10.5963 8.21838L10.8271 7.5731C10.8495 7.50997 10.9214 7.38452 10.8661 7.30654C10.8113 7.22959 10.6152 7.09015 10.5182 7.00944L9.66677 6.29234ZM75.8294 3.3217L75.9797 3.32927C76.2337 3.55917 77.5722 4.6111 77.6187 4.7412C77.6537 4.83931 77.5641 4.97641 77.5364 5.05983C77.4287 5.38341 77.271 5.69921 77.213 6.03761C76.8304 6.08847 72.4559 6.37204 72.335 6.3487C72.147 6.3125 71.9278 6.23235 71.7388 6.17148L70.5613 5.78646C70.3874 5.72911 70.1525 5.63971 69.9822 5.61036C69.8562 5.5887 69.9466 5.60813 69.8122 5.57594L69.8264 5.55225C70.06 5.54778 70.4115 5.68373 70.6771 5.77062L72.2796 6.28886C72.5015 6.30051 72.7036 6.2745 72.9003 6.26148L73.9213 6.19371L76.953 5.98852C76.9728 5.98657 77.0939 5.97985 77.1028 5.9724C77.1769 5.91043 77.1763 5.75669 77.2045 5.67378L77.5035 4.71251C77.2913 4.49707 76.9996 4.27412 76.7411 4.06005C76.4556 3.82341 76.1789 3.57807 75.8614 3.34492L75.8295 3.32178L75.8294 3.3217ZM19.0403 6.54558C19.3003 6.80529 19.6453 7.07289 19.9529 7.33179L21.6092 8.72488C21.7719 8.86167 22.1677 9.24987 22.3647 9.34062C22.8386 9.30994 25.9981 9.14541 26.1389 9.0697C26.2738 8.99718 26.2906 8.79229 26.3277 8.68134C26.3341 8.66224 26.323 8.6359 26.3465 8.62405C26.4084 8.59276 26.8141 8.59252 26.9356 8.58434L29.264 8.42764C29.7023 8.55058 30.1157 8.67591 30.5393 8.84287L30.543 8.87827L30.3021 8.79569C30.0968 8.72635 29.5066 8.51038 29.3218 8.47974C29.1977 8.45913 27.3104 8.61576 27.0325 8.6332C26.8926 8.64189 26.567 8.63381 26.4848 8.66717C26.2926 8.74532 26.4088 9.02717 26.2372 9.12316C26.2145 9.13587 26.0728 9.13827 26.0328 9.14184L25.4271 9.18834L22.316 9.39169L18.9329 6.56103L19.0403 6.54558ZM64.4869 56.6739C64.234 56.524 64.0509 56.3434 63.8613 56.1826L62.8573 55.3328L58.2375 51.4559C57.9712 51.2326 56.8611 50.2358 56.5718 50.1206L56.3776 50.0406L56.3166 49.9898C56.3401 49.938 56.3629 49.9126 56.4424 49.8861C56.5718 49.8978 56.5837 49.913 56.7132 49.9632C56.8627 50.0872 56.7707 50.063 56.8283 50.1624C56.877 50.2465 57.0983 50.404 57.2041 50.493L64.5696 56.6682L64.4869 56.6739Z" fill="white"/>
<path d="M18.9826 5.16284L19.1361 5.18429L22.4615 7.97286C22.6243 8.02338 22.7065 8.0003 22.8379 7.99543C23.0498 7.9351 23.479 7.93989 23.7549 7.92096L25.9847 7.76659L26.1744 7.25869C26.1921 7.19831 26.2297 7.10763 26.2014 7.03615C26.1605 6.93293 25.7681 6.65081 25.633 6.53708L23.878 5.06989L24.0364 5.08785L24.0576 5.11207C24.2323 5.30609 24.4867 5.50626 24.7172 5.69928L25.8134 6.6162C25.9447 6.72612 26.2455 6.94035 26.303 7.04554C26.3379 7.10954 26.2857 7.21996 26.2692 7.27348L26.076 7.82151L23.7777 7.99181C23.3801 8.01966 22.9732 8.07277 22.5418 8.06876L22.412 8.03139L18.9826 5.16284ZM124.635 38.5546C124.674 38.5483 124.721 38.5517 124.769 38.5527C124.944 38.6173 124.984 38.6222 125.099 38.7168C125.072 38.7641 125.062 38.809 124.926 38.7976C124.863 38.7923 124.719 38.7304 124.648 38.7192C124.456 38.6891 121.102 38.9157 120.998 38.9506C120.812 39.0128 120.615 39.9603 120.549 40.1541C120.531 40.2103 120.526 40.3503 120.47 40.386C120.413 40.422 120.05 40.4304 119.926 40.4404L113.296 40.8924L112.089 40.9723C112.005 40.9777 111.823 41.0071 111.731 40.9957C111.609 40.9807 111.188 40.8275 111.049 40.7821L108.913 40.0863L107.14 40.2027C106.729 40.2304 106.109 40.2278 105.89 40.3765C105.792 40.3946 105.78 40.395 105.642 40.3719C105.523 40.3051 105.518 40.2926 105.46 40.2186C105.51 40.1588 105.507 40.1626 105.66 40.1651C105.743 40.1927 105.876 40.2431 105.957 40.2554C106.111 40.279 106.407 40.2324 106.549 40.2229L108.459 40.093C108.564 40.0857 108.789 40.0489 108.897 40.0627C109.077 40.0857 109.387 40.2017 109.577 40.2638L111.179 40.7863C111.362 40.8457 111.613 40.9499 111.775 40.9492C112.416 40.9465 113.025 40.8661 113.629 40.8256L118.952 40.4731C119.169 40.4586 120.314 40.4137 120.373 40.3532C120.477 40.2473 120.494 40.0818 120.535 39.952L120.754 39.2583C120.785 39.1636 120.8 38.9505 120.955 38.9145C121.18 38.8623 121.558 38.8659 121.831 38.8478L124.004 38.7033C124.149 38.6932 124.482 38.6986 124.583 38.6632C124.611 38.6533 124.624 38.5768 124.635 38.5546Z" fill="white"/>
<path d="M105.71 31.539C105.887 31.4853 106.184 31.4774 106.413 31.4595L107.914 31.3568L112.87 31.0271C113.357 30.9952 114.021 31.0094 114.417 30.9169L114.574 31.0456C114.393 31.01 114.194 31.0472 114.049 31.0569L107.273 31.5118L106.209 31.5821C106.037 31.5935 105.84 31.6261 105.628 31.5899L105.774 31.5663L105.71 31.539Z" fill="#767374"/>
<path d="M34.8126 23.6145C35.1108 23.6484 35.6146 23.8442 35.9343 23.9477C35.9629 23.957 36.1342 24.0178 36.1596 24.0208C36.2235 24.028 36.35 24.0078 36.4087 24.0038L37.086 23.9577L40.6514 23.7112C40.6611 23.6331 40.3625 23.4644 40.4926 23.4424L41.2729 23.3921L41.953 23.9615C41.7435 23.9768 41.283 24.0517 41.0414 23.9886L40.8208 23.8102C40.5436 23.7505 39.9958 23.8341 39.7592 23.8504L36.821 24.0541C36.6903 24.0636 36.3279 24.1249 36.2017 24.1043C36.1418 24.0946 35.9672 24.0292 35.9014 24.0082C35.5419 23.893 35.1624 23.7557 34.8016 23.6558C34.7957 23.6396 34.8069 23.6276 34.8126 23.6145ZM47.8455 45.4643L49.8919 45.3065L53.1123 48.0213L55.0645 47.8706L61.0337 52.8735L60.9429 52.8778C60.6801 52.7057 60.4742 52.5092 60.2609 52.3304L59.176 51.4187L55.0353 47.925L53.0864 48.0728L49.857 45.3628L47.9117 45.5004L47.8455 45.4643ZM59.3668 42.064L59.537 42.0606C59.654 42.2437 59.9968 42.4886 60.2187 42.6763L62.3866 44.4991C62.5492 44.6359 63.0022 44.9683 63.0573 45.0919C63.1097 45.2089 62.9885 45.3844 62.9563 45.4828L62.5937 46.5684C62.555 46.6775 62.381 46.945 62.4791 47.074C62.5253 47.1346 62.6945 47.2534 62.771 47.3171L63.4721 47.9037L65.7717 49.837C66.1421 50.1484 66.5068 50.4973 66.942 50.7993L66.8069 50.8122C66.7055 50.707 66.5528 50.5942 66.427 50.4892L63.1511 47.7375L62.5561 47.2294C62.5062 47.1866 62.3838 47.0966 62.3556 47.057C62.2591 46.9219 62.8792 45.3339 62.9564 45.0851C62.686 44.8143 62.3278 44.5352 62.0069 44.2656L60.3814 42.9005L59.7681 42.3772C59.6507 42.2759 59.5342 42.1562 59.3668 42.064ZM113.557 49.8505L119.227 49.4731C119.951 49.4252 120.695 49.3279 121.472 49.3337L124.915 52.1996L124.776 52.215L121.436 49.4173C121.209 49.3922 120.946 49.4363 120.752 49.4496L119.298 49.5486L113.657 49.9242L113.557 49.8505ZM2.21631 6.31158C2.8911 6.9374 3.67825 7.5671 4.42034 8.19014L11.7396 14.3332C12.3686 14.8609 12.9774 15.409 13.6584 15.9317C13.7709 16.018 13.8297 16.0381 13.9949 16.0965C14.5724 16.3007 15.1781 16.4846 15.7622 16.6752C16.033 16.7635 16.3393 16.8514 16.5979 16.9583L16.6282 17.0061L13.6974 16.0414C13.2338 15.728 12.8537 15.3521 12.4646 15.0254L4.9241 8.69794C3.99493 7.91816 2.99794 7.12719 2.15653 6.34417L2.21631 6.31158ZM29.4058 9.99542C28.5259 10.0211 27.6862 10.1028 26.8404 10.1597C26.6971 10.1693 26.3185 10.1647 26.2351 10.2022C26.183 10.2257 26.1785 10.3363 26.1645 10.3802L25.9791 10.9711C25.9698 11.0006 25.9645 11.105 25.9326 11.1203C25.8814 11.1449 25.5855 11.1423 25.4929 11.1484C25.2482 11.1647 25.0401 11.2017 24.7886 11.2142C24.4736 11.2298 24.175 11.2275 23.891 11.2725C23.7009 11.3027 22.6065 11.3894 22.4087 11.3547C22.179 11.3144 21.9063 11.1994 21.6711 11.1335C21.5977 11.1129 21.5433 11.0984 21.471 11.0707C21.0869 10.9237 20.7464 10.8728 20.482 10.6512L20.3827 10.5662C20.2747 10.4814 19.9531 10.2285 19.9091 10.1486C19.8794 10.0947 19.9373 10.0146 19.9512 9.97049L20.1766 9.27675C20.1965 9.21325 20.2731 9.10878 20.2522 9.03752C20.238 8.99001 19.3831 8.31122 19.259 8.20786C19.0087 7.99947 18.6054 7.71546 18.4261 7.51073C18.397 7.47748 18.4147 7.467 18.3702 7.42836L16.8669 6.16766C16.7383 6.05991 16.4453 5.85735 16.432 5.76817C16.5653 5.81172 16.8304 6.06668 16.9235 6.14467L19.742 8.50949C19.9001 8.64226 20.2817 8.91734 20.3576 9.03944C20.3819 9.07852 20.3135 9.18758 20.3012 9.22838L20.0574 9.99022C20.0436 10.0325 19.983 10.1192 20.0007 10.1642C20.0076 10.1821 20.1336 10.2757 20.1599 10.2978L20.7283 10.7748L22.3272 11.2986C22.6814 11.2931 25.7078 11.1107 25.7827 11.0757C25.8557 11.0414 25.8602 10.9288 25.879 10.8709L26.0599 10.3134C26.0761 10.2654 26.0922 10.1642 26.1606 10.1392C26.3138 10.0835 26.6812 10.0923 26.9022 10.0777C27.6879 10.0259 28.5203 9.9965 29.2695 9.91598L29.4058 9.99542ZM47.0896 35.4677L45.3757 34.9112L37.3381 35.4475C37.373 35.5088 37.4063 35.5691 37.3967 35.6213C37.3825 35.6997 37.2891 35.7525 37.136 35.76C36.9997 35.7667 36.8018 35.7371 36.6376 35.6744C36.4793 35.614 36.2911 35.5105 36.2223 35.4255C36.1623 35.3514 36.111 35.2402 36.1661 35.1958C36.2381 35.1377 36.4276 35.1123 36.6107 35.1371C36.8262 35.1663 37.0044 35.2512 37.1956 35.3444L37.2566 35.3745L45.344 34.8367L47.23 35.4461L47.0896 35.4677ZM101.046 49.2692L101.915 49.2105C102.064 49.3416 102.517 49.6671 102.546 49.7698L102.256 49.7942C102.259 49.8133 102.247 49.8301 102.264 49.8515C102.361 49.9704 102.631 50.1604 102.777 50.2834C103.15 50.5968 103.536 50.9824 103.983 51.2829C104.092 51.2956 104.202 51.3097 104.319 51.342C104.485 51.3876 104.667 51.4711 104.779 51.5547C104.942 51.6759 104.951 51.7408 104.933 51.8375C104.853 51.8908 104.792 51.9298 104.652 51.9485C104.443 51.9257 104.243 51.8893 104.034 51.7868C103.954 51.7478 103.883 51.7041 103.825 51.6586C103.767 51.6131 103.724 51.5667 103.698 51.5222C103.636 51.4143 103.722 51.3567 103.824 51.3062L103.854 51.292L102.56 50.1964C102.441 50.096 102.243 49.8888 102.06 49.8092L101.76 49.8269C101.572 49.7607 101.184 49.3858 101.046 49.2692ZM44.7724 40.7051C44.9817 40.742 45.2906 40.6912 45.4704 40.6788L47.2918 40.5529C47.4216 40.5438 47.6388 40.5065 47.7783 40.5189C47.9894 40.5377 50.1881 41.2873 50.5942 41.4182C51.546 41.3901 52.4517 41.2926 53.369 41.2317L57.9105 40.93L58.9921 40.8535C59.0711 40.8467 59.2604 40.8466 59.3127 40.8249C59.3605 40.8052 59.3781 40.6924 59.3944 40.6555C59.4784 40.4638 59.6781 39.4689 59.8453 39.4147C60.0955 39.3337 60.6809 39.3413 61.0245 39.3199C61.8709 39.267 62.7402 39.225 63.5419 39.136L63.6366 39.2127L61.0556 39.3776C60.7059 39.4013 60.2444 39.4001 59.94 39.4559C59.8757 39.4677 59.8717 39.5183 59.8572 39.5527L59.5157 40.5905C59.4966 40.6479 59.4806 40.8542 59.3977 40.8788C59.2264 40.9296 58.8816 40.9314 58.6585 40.9464L57.0129 41.0543L50.706 41.4835C49.9563 41.3018 49.1272 40.9836 48.3773 40.7428C48.2312 40.6959 47.9483 40.5896 47.8165 40.5746C47.6394 40.5544 47.3231 40.6114 47.1645 40.6231L45.6887 40.7267C45.4421 40.7438 45.1566 40.7504 44.9352 40.7861L44.8879 40.7983L44.7724 40.7051ZM60.2609 3.18389L60.3937 3.18506L63.9957 6.22467L66.0064 6.89367C66.0802 6.91717 66.2688 6.98257 66.3304 6.98939C66.4271 7 66.5695 6.97526 66.6509 6.96912L67.378 6.9156L71.186 6.65408C71.7587 6.79893 72.3973 7.03026 72.9684 7.21592L77.6386 6.89991L78.9048 6.81291C78.9899 6.80462 79.1854 6.79827 79.2413 6.77361C79.3199 6.73895 79.3479 6.55028 79.3719 6.48379L79.4463 6.51999L79.4227 6.61596C79.4064 6.67552 79.3813 6.81157 79.3103 6.84626C79.2736 6.86405 79.0954 6.86058 79.0267 6.86516L78.1234 6.92554L73.041 7.27344C72.6566 7.17894 72.248 7.02712 71.8666 6.90193C71.7378 6.8597 71.3567 6.72509 71.2456 6.72013C71.139 6.71551 71.0059 6.74667 70.9118 6.75655L70.2026 6.80679L66.399 7.05972L64.4224 6.41796C64.3025 6.3774 64.0106 6.29497 63.9121 6.24477C63.8747 6.22578 63.7809 6.13223 63.7527 6.10802L63.1759 5.61591C62.2296 4.81209 61.2956 3.97912 60.2609 3.18389ZM96.983 49.5418L97.8499 49.4847C98.023 49.6269 98.4251 49.9091 98.487 50.038C98.3802 50.0471 98.2719 50.0542 98.1777 50.0728C98.2644 50.2387 98.7883 50.614 99.0114 50.8015L101.608 52.9728L101.732 53.0014C101.818 53.0192 101.9 53.0302 101.988 53.0541C102.162 53.1016 102.346 53.1998 102.45 53.2871C102.579 53.3953 102.575 53.4776 102.56 53.561C102.482 53.6045 102.413 53.6335 102.295 53.6536C102.1 53.624 101.884 53.5945 101.696 53.4968C101.516 53.403 101.395 53.3057 101.342 53.203C101.29 53.0996 101.356 53.0565 101.459 53.0082L101.489 52.9951L101.456 52.9492C101.275 52.7562 100.946 52.5193 100.714 52.3251L98.3403 50.3352C98.2738 50.2795 98.1622 50.1655 98.0794 50.1166C98.0491 50.0987 98.0056 50.0903 97.9688 50.0773L97.6947 50.0987C97.5045 50.0333 97.1211 49.6592 96.983 49.5418ZM84.5427 49.9131L85.4077 49.8529L86.0814 50.4203C85.9573 50.4226 85.8363 50.4227 85.7337 50.4428C85.7892 50.5811 86.3162 50.9603 86.5153 51.1275L89.1898 53.3667L89.4213 53.4143C89.6213 53.462 89.8492 53.5413 89.9976 53.645C90.1788 53.7716 90.1675 53.8618 90.159 53.9632C90.0772 54.0219 89.9516 54.0611 89.7564 54.0418C89.6165 54.0279 89.3964 53.9554 89.2699 53.8883C89.1396 53.8193 88.9529 53.6672 88.9267 53.5943C88.8924 53.4988 88.957 53.4376 89.0527 53.3893L89.0751 53.3785C88.7872 53.0876 88.355 52.7659 88.008 52.4752L85.6371 50.4906C85.4424 50.4125 85.3819 50.4925 85.1788 50.4522L84.5427 49.9131Z" fill="white"/>
<path d="M67.1027 3.18659L67.1264 3.17085C67.2986 3.04503 67.315 2.44228 67.5235 2.40609C67.6769 2.37945 67.902 2.37943 68.076 2.36729L69.1739 2.2925L72.7256 2.06628C73.0501 2.14555 73.3289 2.2183 73.5961 2.38314C73.8458 2.53706 74.0761 2.77133 74.2771 2.93969L75.2718 3.77431C75.4461 3.92089 75.6578 4.07879 75.7901 4.2251C75.7745 4.54019 75.6106 4.83393 75.524 5.12966L72.824 5.31284C72.6454 5.32501 72.2272 5.39087 72.0284 5.35665C71.9495 5.34314 71.7375 5.26188 71.6509 5.23363L70.5369 4.87063C70.4561 4.84426 70.2375 4.76172 70.1649 4.7495C70.0367 4.72781 69.5974 4.79184 69.4666 4.80127L66.7 5.00504L66.5104 4.90992C66.8021 4.95618 67.1615 4.88937 67.4088 4.87235L69.5055 4.73018C69.6718 4.71892 69.9123 4.67681 70.0981 4.69024C70.1787 4.69615 70.3816 4.76989 70.4715 4.79892L71.6852 5.19118C71.775 5.22021 71.9633 5.2925 72.0477 5.30835C72.2604 5.34842 72.683 5.26917 72.8641 5.25557L75.3569 5.08169C75.4627 5.00154 75.4668 4.83666 75.5019 4.72756C75.5522 4.57143 75.6538 4.40754 75.6578 4.2387C75.6602 4.13232 73.6335 2.49256 73.3552 2.30236C73.158 2.24006 72.9752 2.18447 72.7771 2.13712L68.6763 2.4104L67.9265 2.45378C67.8324 2.45797 67.6621 2.45001 67.5942 2.4678C67.5381 2.48255 67.5278 2.56057 67.5132 2.5962C67.4433 2.76718 67.4535 3.05772 67.277 3.18093L67.2334 3.20893L67.1027 3.18659ZM72.3597 15.7085L76.6451 15.4207L77.7308 15.3437C77.7993 15.3377 77.996 15.3362 78.0369 15.3159C78.1237 15.2727 78.1371 15.1593 78.1613 15.0903L78.356 14.4838C78.3933 14.3693 78.3939 14.2197 78.6192 14.1878C78.8223 14.1591 79.0824 14.1555 79.3051 14.1405L80.7698 14.0422L85.4333 13.7345L86.4928 13.6617C86.5887 13.6549 86.8056 13.6575 86.8729 13.6347C86.9195 13.6189 86.9355 13.5445 86.9466 13.5117C86.9855 13.3972 87.0293 12.9658 87.2233 12.9448C87.687 12.8947 88.1948 12.8761 88.6815 12.8445L91.3672 12.6674L92.181 12.605C92.3236 12.5942 92.4388 12.6109 92.5388 12.5667L92.6452 12.6474C92.1426 12.6549 91.6699 12.7044 91.1943 12.7364L88.4452 12.9195L87.4983 12.9778C87.4518 12.9806 87.2779 12.9794 87.2513 12.9925C87.2226 13.0067 87.2062 13.0613 87.1933 13.0841C87.1194 13.2156 87.0946 13.3651 87.0536 13.5076C87.0404 13.5535 87.0313 13.6603 86.981 13.688C86.9398 13.7108 86.709 13.7138 86.6349 13.7203L85.2571 13.8125L79.0258 14.2236C78.8974 14.2323 78.6932 14.2286 78.5941 14.2565C78.4129 14.3074 78.281 15.0328 78.2297 15.1765C78.2116 15.227 78.1979 15.3571 78.1258 15.3822C78.0437 15.4109 77.8278 15.413 77.7117 15.4228L76.4137 15.5099L73.984 15.6703C73.5532 15.6998 73.1253 15.7474 72.673 15.7573C72.5657 15.7596 72.4972 15.7598 72.4232 15.7863L72.3597 15.7085ZM38.3749 3.61598C38.4526 3.60169 38.5323 3.5943 38.636 3.6031C38.7852 3.6158 38.9914 3.67028 39.1383 3.74108C39.2926 3.81545 39.4142 3.9243 39.4705 4.00863C39.5549 4.13512 39.4204 4.18912 39.3229 4.2558L40.369 5.1323C40.4604 5.20942 40.613 5.36737 40.7226 5.43145C40.8141 5.48492 41.0212 5.53988 41.1372 5.57763C41.4378 5.67528 42.7516 6.07053 42.9375 6.17871C43.0508 6.24462 43.1834 6.38667 43.2756 6.46454L44.4895 7.48309C44.5604 7.54216 44.7223 7.7041 44.813 7.75211C44.8454 7.76927 44.8859 7.77975 44.9222 7.79357L45.2245 7.7653C45.3861 7.89856 45.8375 8.21493 45.8805 8.32929L45.7377 8.34313C45.5209 8.3584 45.2657 8.39688 45.02 8.38005L44.4202 7.87494C44.3984 7.78859 44.636 7.83764 44.7058 7.77307L43.322 6.6034C43.2008 6.5012 43.0317 6.32476 42.8811 6.23201C42.6325 6.07891 41.1522 5.70252 40.733 5.51342C40.6178 5.46154 40.4514 5.29647 40.3746 5.23246L39.2137 4.26227C39.0286 4.22551 38.8034 4.18683 38.625 4.1063C38.4896 4.04511 38.3043 3.90098 38.2696 3.82894C38.219 3.72437 38.2662 3.66402 38.3749 3.61598ZM46.1467 3.31871C46.1988 3.30919 46.2474 3.30027 46.3177 3.30578C46.4728 3.31782 46.7086 3.37719 46.8659 3.4482C47.0131 3.51456 47.1597 3.63438 47.2097 3.71299C47.2659 3.80147 47.2294 3.86599 47.1441 3.90849C47.0906 3.93516 47.0865 3.93056 47.0847 3.98149L47.7994 4.58001C47.8436 4.61704 47.9422 4.71624 47.9994 4.74753C48.0995 4.80222 48.2982 4.85549 48.4195 4.89497C48.7581 5.00515 49.8719 5.32575 50.0704 5.47035C50.3355 5.66331 50.5577 5.86889 50.7909 6.0656L52.0655 7.14165C52.218 7.27001 52.5534 7.59735 52.7741 7.68119L53.0901 7.65472C53.2631 7.79805 53.6613 8.07934 53.7246 8.20931L53.41 8.2328L52.8699 8.26834L52.2111 7.71303L52.6141 7.69646L50.5468 5.95787C50.4105 5.84332 50.1392 5.56702 49.9678 5.47105C49.9215 5.44508 49.6603 5.37188 49.5948 5.35071L48.4519 4.97845C48.3224 4.93456 48.0932 4.86699 47.9762 4.81252C47.9013 4.77762 47.7814 4.66396 47.7272 4.61911C47.5137 4.44203 47.1912 4.114 46.9013 3.96213L46.6264 3.92124C46.4884 3.86908 46.3413 3.81598 46.223 3.74797C46.1621 3.7129 46.1104 3.67515 46.0709 3.63696C46.0314 3.59876 46.005 3.56089 45.9931 3.52558C45.9596 3.42151 46.0251 3.36282 46.1468 3.31879L46.1467 3.31871ZM104.16 48.0661L105.035 48.0123C105.19 48.1431 105.633 48.4637 105.65 48.5689L105.359 48.5893C105.357 48.6058 105.344 48.6198 105.354 48.6388C105.381 48.6926 105.646 48.8831 105.721 48.946L107.308 50.2777L108.566 50.6875C108.739 50.7441 109.352 50.9239 109.472 50.9912C109.666 51.1001 109.864 51.299 110.008 51.419L111.489 52.6621C111.598 52.6799 111.723 52.6969 111.835 52.7249C111.997 52.7655 112.181 52.8473 112.295 52.9281C112.439 53.0292 112.468 53.1047 112.468 53.1896C112.453 53.2163 112.44 53.2445 112.407 53.2639C112.33 53.3082 112.148 53.33 111.986 53.306C111.848 53.2856 111.673 53.2276 111.546 53.1638C111.406 53.0941 111.268 52.9853 111.232 52.9078C111.184 52.8027 111.246 52.7445 111.349 52.6934L111.384 52.6781L111.361 52.6538C110.964 52.2603 110.378 51.8209 109.908 51.427C109.809 51.3439 109.578 51.1146 109.437 51.0485C109.173 50.9245 108.612 50.7762 108.312 50.6784C108.059 50.5964 107.504 50.4409 107.289 50.3361C107.149 50.2683 106.964 50.0883 106.867 50.0069C106.617 49.7983 105.342 48.6831 105.147 48.6092L104.867 48.6261C104.68 48.5553 104.299 48.1834 104.16 48.0661ZM107.733 43.9378L107.859 43.9573C107.945 44.0572 108.336 44.4253 108.503 44.5055C108.642 44.5722 108.889 44.6404 109.047 44.6931L110.587 45.1945L122.164 44.4127L125.213 45.4059C125.732 45.5747 126.335 45.7455 126.836 45.9386C126.914 45.9685 126.933 45.9888 126.983 46.0293L133.263 51.2923L133.193 51.3117C132.945 51.1498 132.747 50.9609 132.546 50.7921L131.414 49.8413L126.852 46.0194C126.806 45.9823 126.827 45.9921 126.76 45.9649C126.324 45.7896 125.755 45.6306 125.298 45.4813L122.235 44.4841C121.721 44.4717 121.219 44.5429 120.749 44.5741L113.259 45.0695C112.414 45.1238 111.493 45.1507 110.714 45.2561L110.665 45.263L109.122 44.7631C108.953 44.7054 108.576 44.5949 108.435 44.5229C108.23 44.4188 107.883 44.0686 107.733 43.9378ZM111.774 28.3503C111.824 28.339 111.881 28.332 111.942 28.3294C112.093 28.3247 112.313 28.3855 112.485 28.4504C112.674 28.5221 112.777 28.6104 112.865 28.7068C112.942 28.7903 112.944 28.8554 112.889 28.9076C112.823 28.9696 112.672 28.9805 112.505 28.9721C112.319 28.9627 112.03 28.8377 111.845 28.7602L111.766 28.727L109.611 28.8663C109.472 28.9994 109.469 29.2492 109.413 29.4192C109.397 29.468 109.374 29.6104 109.298 29.6321C109.11 29.6856 108.654 29.6776 108.403 29.6944L105.387 29.8943C105.329 29.9443 105.508 30.0593 105.569 30.143L105.44 30.163L104.725 30.2129L104.068 29.6485L104.933 29.5926L105.226 29.8281L109.155 29.5738C109.289 29.4427 109.291 29.2285 109.344 29.0659C109.366 28.9979 109.384 28.8351 109.464 28.7968C109.519 28.771 109.854 28.7735 109.955 28.7672L111.683 28.6541C111.66 28.5541 111.643 28.4394 111.734 28.376L111.774 28.3503ZM34.7105 3.86018C34.8016 3.84427 34.8862 3.83268 35.0115 3.84761C35.1958 3.86962 35.374 3.9386 35.5456 4.0166C35.8195 4.21782 35.9191 4.31253 35.7513 4.43607C35.7389 4.44529 35.6629 4.49041 35.6635 4.49769C35.664 4.50695 35.8042 4.6151 35.8329 4.63891L36.5314 5.22146C36.5951 5.2746 36.7402 5.37674 36.7744 5.4241C36.8183 5.48489 36.7221 5.63812 36.7048 5.68918L36.5036 6.28918C36.4585 6.4252 36.3916 6.55655 36.4126 6.71199L39.6175 9.39353C39.675 9.44159 39.7644 9.53373 39.8328 9.57365C39.8643 9.59204 39.9076 9.60278 39.945 9.61735L40.1594 9.58167L40.2638 9.61388C40.4058 9.73103 40.8544 10.0566 40.8649 10.1496L40.7055 10.1566L40.027 10.2C39.898 10.092 39.4049 9.71751 39.4247 9.64778L39.7063 9.63262C39.7151 9.61977 39.7401 9.61142 39.7325 9.59406C39.7032 9.5268 39.2997 9.23124 39.1929 9.14162L36.9132 7.22984C36.7251 7.07208 36.3977 6.84194 36.2673 6.6881C36.1963 6.60439 36.289 6.44309 36.3114 6.37382L36.598 5.49046C36.6015 5.4784 36.6344 5.4125 36.6249 5.39797C36.5937 5.35041 36.416 5.22536 36.354 5.17417L35.5688 4.52602C35.3836 4.47627 35.1587 4.42303 34.9818 4.35062C34.8397 4.29241 34.6745 4.20117 34.6208 4.1229C34.5405 4.00606 34.6 3.91447 34.7105 3.86018ZM31.9311 29.934L38.8784 29.4789C38.9295 29.3131 38.9588 29.1329 39.0607 28.985L43.81 28.6679C43.898 28.6621 44.0508 28.6388 44.1567 28.6559C44.3261 28.6833 44.8656 28.8837 45.0626 28.9481C45.4618 29.0785 45.8923 29.2361 46.2939 29.3391L50.9161 29.0199L51.0318 29.1085L47.3227 29.3523L46.5813 29.4019C46.5102 29.4067 46.3867 29.4271 46.3084 29.4202C46.1799 29.4089 44.7545 28.9147 44.4995 28.8337C44.4307 28.8118 44.2079 28.7361 44.1567 28.7324C43.9883 28.7204 39.2327 29.0508 39.1989 29.0645C39.1838 29.0706 39.1751 29.1432 39.1703 29.1586C39.14 29.2563 39.1303 29.4923 39.0107 29.5435C38.9658 29.5628 38.8307 29.5695 38.7609 29.5764L36.9018 29.7039L32.0823 30.0263L32.045 29.9754L31.9311 29.934ZM29.449 26.6921L29.5195 26.6858C29.7221 26.6821 29.9364 26.7488 30.1574 26.8378L30.4152 26.9411L39.2689 26.3499C39.3373 26.283 39.1079 26.1847 39.0873 26.0897L39.9099 26.0308L40.6034 26.6141L40.0955 26.6273L39.7986 26.6686C39.5895 26.6136 39.5962 26.5054 39.3799 26.4251L30.4836 27.022L30.5037 27.1677C30.5081 27.2564 30.4555 27.3121 30.3049 27.332C30.1782 27.3489 29.9801 27.3208 29.8101 27.2659C29.6414 27.2114 29.508 27.1383 29.4038 27.0524C29.263 26.9362 29.2482 26.857 29.2946 26.7733C29.3182 26.7306 29.3782 26.7109 29.449 26.6921ZM86.4686 44.6432L87.3641 44.5863L87.9681 45.0943C87.999 45.2029 87.715 45.1242 87.6639 45.2111L92.6145 49.3564L94.0885 50.5967C94.3494 50.8163 94.6006 51.0521 94.8986 51.2664C95.0093 51.2834 95.1226 51.3013 95.2375 51.3299C95.3709 51.3629 95.5142 51.4206 95.611 51.4882C95.8257 51.6383 95.8454 51.7112 95.8509 51.8353C95.7602 51.9038 95.6892 51.9321 95.4975 51.9379C95.3173 51.9076 95.066 51.8393 94.8978 51.7569C94.7921 51.7051 94.7025 51.6289 94.6603 51.5702C94.5648 51.4371 94.6266 51.3686 94.7315 51.2965L94.7579 51.2792L87.5647 45.2315C87.3525 45.1482 87.3233 45.2296 87.1111 45.179L86.4686 44.6432Z" fill="white"/>
<path d="M101.575 42.0982L101.686 42.1069C102.186 42.4959 102.636 42.8945 103.101 43.2866L105.263 45.1014L105.81 45.5596C105.844 45.5875 105.938 45.6782 105.979 45.6982C106.187 45.7976 106.638 45.9147 106.881 46.0028L110.694 47.2415L120.913 46.5611C120.99 46.556 121.201 46.5246 121.272 46.5373C121.52 46.5816 122.028 46.776 122.294 46.8633L123.364 47.2146C123.461 47.2469 123.648 47.3014 123.734 47.3457C123.859 47.4104 124.041 47.579 124.129 47.6531L124.978 48.3644L129.015 51.7402L128.88 51.7469L124.739 48.2717L123.848 47.5315C123.8 47.4936 123.673 47.3749 123.612 47.3451C123.554 47.3167 123.409 47.2742 123.346 47.2534L121.882 46.7754C121.759 46.7352 121.482 46.6287 121.369 46.6078C121.157 46.5688 112.346 47.2024 111.429 47.262C111.239 47.2743 110.928 47.3285 110.709 47.2914C110.431 47.2445 109.89 47.0358 109.6 46.9413L105.916 45.7342L104.265 44.3395C104.165 44.2519 104.034 44.1661 103.954 44.0783C103.917 44.037 103.943 44.0554 103.887 44.0219C103.678 43.895 103.486 43.6982 103.323 43.5612C102.743 43.0758 102.205 42.5767 101.575 42.0982ZM10.6827 5.38526L10.8367 5.40713L10.9656 5.5256C11.6121 6.11892 12.3939 6.72722 13.0988 7.31917C13.3923 7.56575 13.784 7.85225 13.9548 8.09562C14.0363 8.21166 13.6864 9.02209 13.6372 9.17084C13.6205 9.22159 13.5511 9.32223 13.5839 9.38195C13.6771 9.55208 16.7955 12.1165 17.2569 12.4751L21.2676 13.7891C22.1316 13.7406 28.7312 13.2484 29.0293 13.3104C29.2171 13.3494 29.5638 13.4833 29.7593 13.5468L32.5386 14.4533C32.657 14.492 33.1695 14.6772 33.2555 14.6859C33.3521 14.6956 33.5103 14.6699 33.5971 14.6644L34.3417 14.6165L36.8422 14.4498C37.2002 14.4257 37.6584 14.4254 37.9649 14.3649L38.007 14.437L34.6359 14.6566L33.7585 14.7198C33.6431 14.7282 33.4838 14.7561 33.3577 14.7491C33.1573 14.7381 31.6324 14.2097 31.3427 14.1149L29.5731 13.5369C29.4379 13.4928 29.1585 13.3848 29.031 13.3601C28.8636 13.3277 22.3335 13.8106 21.3666 13.8641L17.2413 12.5153C17.1276 12.46 17.0406 12.3954 16.9645 12.3315C16.6162 12.0388 13.4548 9.39317 13.4386 9.34823C13.4132 9.27881 13.5014 9.16175 13.5222 9.10008L13.7834 8.31758C13.8058 8.24805 13.8872 8.11313 13.8132 8.02529C13.6068 7.7804 13.1538 7.45394 12.8582 7.20607L10.6827 5.38526Z" fill="white"/>
<path d="M5.90203 6.07525L6.00691 6.08685L14.0442 12.8285L15.4067 13.9668C15.5014 14.0452 15.6711 14.2164 15.7908 14.2846C15.8118 14.2966 15.951 14.3424 15.9836 14.3541C16.2784 14.4592 16.5765 14.5545 16.8745 14.6512L20.0092 15.669C20.1992 15.7269 20.2442 15.7064 20.3895 15.6974L27.6113 15.2167L28.8362 15.1323C28.9008 15.1279 29.0905 15.0996 29.1482 15.1106C29.2469 15.1296 29.4491 15.2032 29.5543 15.236L30.4841 15.5344L34.2352 16.7619C34.3792 16.8091 34.7833 16.9663 34.9026 16.985C34.9428 16.9913 35.1044 16.968 35.1454 16.9646L35.8931 16.9059L38.2511 16.7487C38.7448 16.7168 39.2388 16.6672 39.7659 16.6659L39.8464 16.7117L35.0706 17.0384C34.9704 17.0463 34.9113 17.0297 34.7907 16.9903C34.1824 16.7916 29.328 15.1815 29.2146 15.1679C29.1087 15.1552 28.9046 15.1868 28.8092 15.1928L20.5327 15.7446C20.4394 15.7508 20.2598 15.78 20.1604 15.7694C20.0969 15.7627 19.714 15.6243 19.6316 15.5975L17.1642 14.7928C16.7522 14.6582 16.1257 14.4885 15.7557 14.3202C15.5644 14.2331 6.92711 6.93528 5.90203 6.07525ZM38.2251 31.9829C38.2886 31.9711 38.3409 31.9695 38.424 31.9761C38.6378 31.9931 38.879 32.1018 39.0819 32.1931C39.2342 32.2615 40.0681 32.1752 40.273 32.1616L49.1584 31.5688C49.2869 31.5602 49.4953 31.5231 49.6316 31.537C49.7378 31.5479 50.0369 31.6592 50.1603 31.6994L51.9219 32.2727L53.9098 32.1389C54.0282 32.1309 54.3495 32.1364 54.4129 32.1051C54.4319 32.0956 54.4269 32.0758 54.4341 32.0612C54.3466 31.9896 54.2427 31.9173 54.2225 31.849L55.0218 31.7836C55.2351 31.8866 55.5627 32.2186 55.7209 32.3521C55.6871 32.3896 55.4256 32.3755 55.3225 32.3767C55.1805 32.387 55.0125 32.4412 54.8428 32.3991L54.6165 32.2146C54.5778 32.2025 54.5383 32.1845 54.5005 32.1785C54.3496 32.1549 52.2763 32.3321 51.978 32.3526C51.2499 32.165 50.4348 31.8633 49.7085 31.625C49.426 31.5894 49.0696 31.6474 48.8227 31.6638L46.6613 31.8073L39.2413 32.3115L39.2518 32.3402L39.266 32.3824C39.2815 32.4272 39.3039 32.4748 39.29 32.5124C39.2637 32.5834 39.1328 32.6218 38.985 32.6248C38.8456 32.6277 38.6871 32.5926 38.5261 32.5313C38.3499 32.4642 38.2124 32.3656 38.1234 32.2747C38.0419 32.1915 38.0147 32.1256 38.0607 32.0694C38.0928 32.0301 38.1625 32.0071 38.2251 31.9829ZM37.9075 33.7142C38.0086 33.6942 38.1092 33.674 38.2549 33.6939C38.4696 33.7232 38.6444 33.8037 38.8348 33.8972L38.894 33.9266C39.1581 33.9459 39.4158 33.9038 39.6493 33.8883L47.9347 33.3337L50.0335 34.0143C50.1522 34.0525 50.3466 34.1268 50.4612 34.1517C50.6204 34.1865 55.7824 33.8076 56.3935 33.7669C56.4351 33.6765 56.2049 33.5989 56.2027 33.4991L57.0205 33.4425C57.164 33.5631 57.6524 33.9241 57.6474 34.0108L57.3265 34.0298L56.8536 34.0583C56.7327 33.9984 56.6558 33.9315 56.5685 33.8637C56.2789 33.8005 55.2156 33.9224 54.927 33.9417L50.4972 34.2366L47.9318 33.4024L38.9995 34.0124L39.0678 34.1611C39.0838 34.2405 38.9778 34.3077 38.8569 34.3261C38.7309 34.3452 38.5784 34.3255 38.4053 34.2723C38.2102 34.2123 38.0474 34.1204 37.9259 34.0219C37.824 33.9392 37.7955 33.8419 37.8284 33.7822C37.8432 33.7553 37.8778 33.7347 37.9075 33.7142ZM55.383 31.6355L57.7527 31.4685C58.0298 31.4502 58.4214 31.3848 58.7391 31.4237C58.9076 31.4443 59.0303 31.4925 59.1795 31.5738C59.3936 31.6906 59.7127 31.9728 59.7577 32.0926C59.7913 32.1816 59.7517 32.1971 59.6499 32.2342L57.4942 32.3848C57.1307 32.4095 56.744 32.4601 56.3414 32.4478C56.2823 32.4463 56.2159 32.4363 56.1482 32.4185C56.0804 32.4008 56.0135 32.3759 55.9533 32.3462C55.7346 32.2393 55.346 31.9109 55.2836 31.7937C55.2349 31.7021 55.3017 31.6784 55.383 31.6355ZM57.3366 33.3021C57.8813 33.215 58.5875 33.2034 59.1955 33.1628C59.6548 33.1322 60.1464 33.0655 60.6482 33.0782C60.7416 33.0806 60.8655 33.0999 60.9703 33.1427C61.2571 33.2598 61.5824 33.5233 61.6927 33.6739C61.7622 33.7686 61.7349 33.8272 61.6699 33.8829L61.5809 33.898C60.9912 33.9747 60.2905 33.9931 59.6551 34.0358C59.2284 34.0645 58.746 34.1361 58.2689 34.1078C58.193 34.1033 58.0617 34.0565 57.9764 34.0319C57.7319 33.903 57.4002 33.6435 57.2998 33.4977C57.2267 33.3915 57.2591 33.3594 57.3366 33.3021ZM50.9161 29.0201L50.905 28.9923C50.8696 28.9309 50.7865 28.8683 50.7115 28.8061C50.935 28.7289 51.4328 28.7952 51.6396 28.7227C51.7093 28.6983 51.6303 28.6154 51.7537 28.5864C51.9872 28.5316 52.3401 28.5223 52.6222 28.5022L54.1877 28.3952C54.4241 28.3797 54.8554 28.3098 55.1531 28.374C55.2995 28.4057 55.4551 28.4658 55.5696 28.5375C55.8004 28.6819 56.1326 28.9502 56.1172 29.0822C56.1101 29.143 56.03 29.1774 55.9344 29.1963C55.6374 29.2549 55.2264 29.2601 54.8827 29.2836L53.2322 29.3878C52.9801 29.3972 52.7775 29.4008 52.4703 29.3405C52.1086 29.2695 51.5344 29.3919 51.3028 29.3046C51.2202 29.2395 51.1424 29.1671 51.0318 29.1087L50.9161 29.0201ZM49.8595 27.0384L52.1175 26.8702C52.4612 26.8474 52.9698 26.7656 53.3844 26.8349C53.5981 26.9144 53.7214 26.9792 53.8713 27.0916C54.0604 27.2336 54.3036 27.428 54.2656 27.5486C54.2587 27.5705 54.2335 27.5993 54.2052 27.6114C54.0519 27.6768 53.5712 27.6699 53.3296 27.6862C52.5443 27.7393 51.7496 27.8341 50.9183 27.8433C50.7434 27.8453 50.655 27.8021 50.4652 27.7334L49.5731 27.7925C49.3894 27.7517 49.3501 27.6404 49.167 27.5595L48.5236 27.5965L46.1277 27.7633C46.1694 27.8303 46.2069 27.8923 46.1938 27.9483C46.1756 28.0265 46.099 28.079 45.9404 28.0856C45.7981 28.0916 45.561 28.0427 45.3943 27.9774C45.2284 27.9124 45.0856 27.7986 45.0117 27.7137C44.9367 27.6275 44.9253 27.5547 44.981 27.5C45.0341 27.4479 45.1775 27.4267 45.3233 27.4378C45.5471 27.4551 45.7487 27.5435 45.958 27.6405C46.0246 27.6713 46.0035 27.6695 46.0622 27.674C46.3963 27.6995 49.0319 27.5089 49.086 27.4557L48.872 27.2598C48.9228 27.1762 49.5756 27.1747 49.7822 27.16C49.7757 27.1187 49.7904 27.0976 49.8223 27.0698L49.8595 27.0384ZM105.628 31.5899C105.381 31.5384 105.079 31.4276 104.829 31.3468L103.109 30.7815C103.002 30.7469 102.664 30.6232 102.57 30.6105C102.492 30.5999 102.308 30.6271 102.236 30.6318L101.082 30.7084L94.7293 31.1371C94.6311 31.2089 94.8887 31.2934 94.8879 31.396L94.0767 31.4647C94.1448 31.5722 94.1453 31.6298 94.1084 31.712C93.876 31.7873 90.9974 31.9835 90.6299 31.9386C90.4928 31.8979 90.3452 31.8552 90.2369 31.784C89.9912 31.6229 89.6839 31.3631 89.659 31.2121C89.696 31.1606 89.7494 31.1431 89.8534 31.1267C90.0814 31.0906 93.0545 30.8951 93.1271 30.9101C93.287 30.9433 93.4772 31.058 93.62 31.0507L93.4512 30.9369L93.4498 30.8899C93.6417 30.8755 94.0755 30.8052 94.2949 30.8572L94.4923 31.0192C94.7075 31.1016 95.3648 31.0153 95.5831 31.0008L100.966 30.6412L102.122 30.5654C102.225 30.5589 102.401 30.5297 102.515 30.5402C102.618 30.5498 102.925 30.6631 103.038 30.6999L104.815 31.2818C105.05 31.3587 105.387 31.4872 105.619 31.5254L105.71 31.539L105.774 31.5663L105.628 31.5899ZM84.2297 36.1166L84.5359 36.0753C84.7309 36.0584 84.9998 36.0273 85.2667 36.1173C85.3941 36.1603 85.4509 36.1901 85.5416 36.2541C85.8498 36.4716 86.1129 36.7248 86.3783 36.9482L88.0693 38.3739L88.0119 38.5328C88.1576 38.6077 88.1653 38.545 88.3385 38.6012L88.896 39.0606C88.997 39.1625 88.6672 39.1135 88.6118 39.1781L90.4477 40.7126C90.6127 40.7387 90.7733 40.7695 90.944 40.8275C91.114 40.8851 91.2169 40.9649 91.3074 41.0496C91.4297 41.164 91.4093 41.2211 91.361 41.2993C91.2786 41.351 91.1309 41.3733 90.9539 41.3555C90.7902 41.339 90.6321 41.2864 90.479 41.2101C90.3337 41.1378 90.2305 41.0633 90.1846 40.981C90.1156 40.8578 90.1678 40.7956 90.2863 40.735L90.3169 40.7202C90.0632 40.5016 88.6965 39.2797 88.4092 39.1637L88.1494 39.1792C87.9321 39.1062 87.6077 38.7526 87.4176 38.6235C87.2151 38.5982 87.0506 38.5652 86.8436 38.479C86.5882 38.3726 84.3854 36.5278 84.2364 36.3302C84.1533 36.2203 84.1565 36.1824 84.2297 36.1166ZM54.6396 11.4144C54.6833 11.4052 54.7389 11.3899 54.7948 11.389C54.9379 11.3866 55.1805 11.4371 55.3443 11.5017C55.5047 11.5651 55.6998 11.7275 55.7533 11.8078C55.8247 11.9148 55.7277 11.9796 55.6348 12.0301L55.6039 12.0461L59.1466 15.0177C59.3325 15.0753 59.4053 15.0149 59.5986 15.0561L60.2454 15.5847L60.425 15.6148C60.5847 15.6457 60.7765 15.6987 60.9073 15.7795C61.1943 15.9567 61.4808 16.2455 61.7106 16.4379C62.2458 16.8862 62.8676 17.3622 63.3371 17.8116C63.4196 17.8905 63.4724 17.9504 63.498 18.0237C63.4412 18.0929 63.3315 18.1083 63.1938 18.1336C62.9792 18.1513 62.7314 18.1707 62.4553 18.1175C62.2895 18.0582 62.2112 18.0157 62.0928 17.9309C61.8521 17.7582 59.5973 15.8614 59.5859 15.8237C59.5635 15.7496 59.6918 15.7194 59.5879 15.6291C59.4901 15.6406 59.4661 15.6482 59.3401 15.625C59.1833 15.4928 58.7675 15.1929 58.7361 15.0818L59.025 15.0643C59.0235 15.0468 59.0352 15.0317 59.0206 15.0119C58.9869 14.9661 58.855 14.8728 58.7969 14.8241L58.2402 14.3566L55.497 12.0597C55.2879 12.0259 55.0361 11.9686 54.8362 11.8706C54.6948 11.8011 54.6032 11.7182 54.5552 11.6405C54.4857 11.5279 54.5373 11.4703 54.6396 11.4144ZM46.4828 11.1305C46.5219 11.1247 46.5469 11.1193 46.5969 11.1208C46.7692 11.1258 47.0041 11.1971 47.1851 11.2726C47.3351 11.3353 47.4606 11.431 47.525 11.5106C47.592 11.5934 47.5749 11.6755 47.5108 11.7219C47.4751 11.7461 47.4442 11.7726 47.4184 11.8012C47.8323 12.2079 48.4042 12.6424 48.8893 13.0491L51.8055 15.4927C52.0215 15.5699 52.0743 15.4946 52.2913 15.5431C52.4624 15.7167 52.6922 15.897 52.8957 16.0702L53.0101 16.0893C53.0896 16.1015 53.1677 16.109 53.2509 16.1296C53.4187 16.1711 53.5805 16.2496 53.6911 16.3325C54.0089 16.5708 54.2771 16.8274 54.5661 17.0696L55.7074 18.0231C55.8351 18.1304 56.0858 18.3152 56.1418 18.4173C56.157 18.445 56.1575 18.4889 56.1524 18.5132C56.134 18.6001 55.9659 18.6111 55.8199 18.6294L55.6221 18.6402C55.4812 18.6443 55.2644 18.6529 55.0885 18.5887C54.9497 18.5382 54.831 18.4717 54.7304 18.4016C54.285 18.0916 53.9056 17.7273 53.525 17.4083C53.1386 17.0843 52.6399 16.7134 52.3335 16.3895C52.2267 16.2765 52.3957 16.2316 52.2817 16.1248C52.1942 16.1266 52.123 16.1272 52.0217 16.1127C51.8557 15.9711 51.6939 15.8063 51.4883 15.6705C51.4068 15.6167 51.4216 15.6245 51.3977 15.575L51.6935 15.5413C51.6911 15.5204 51.6939 15.5149 51.6722 15.4878C51.6088 15.4085 51.4349 15.2861 51.3381 15.2049L48.3153 12.6686C47.982 12.3893 47.6459 12.0604 47.253 11.7934C47.0412 11.761 46.897 11.7234 46.6817 11.6481C46.5193 11.5596 46.3849 11.4701 46.3347 11.3715C46.2757 11.2558 46.3576 11.179 46.4828 11.1305ZM86.6606 35.9546C86.8977 35.908 87.2899 35.8608 87.6394 35.9379C87.8011 35.9978 87.8933 36.0612 88.0006 36.1444C88.2746 36.3567 90.4376 38.1513 90.4551 38.2108C90.4707 38.2637 90.4284 38.3376 90.4183 38.386C90.5243 38.445 90.549 38.3868 90.7034 38.4298C90.8848 38.5785 91.2291 38.8123 91.3292 38.9536L91.0297 38.9912C91.075 39.1292 96.3465 43.4877 97.0405 44.0697L97.3264 44.129C97.5077 44.1728 97.7296 44.2622 97.8624 44.3523C98.0089 44.4517 98.0101 44.5378 98.0238 44.6233C97.9633 44.6967 97.8771 44.7282 97.7186 44.7475C97.5301 44.723 97.3087 44.6821 97.1221 44.5907C96.9331 44.4982 96.8339 44.3936 96.7609 44.2916C96.7687 44.2305 96.7643 44.1665 96.8469 44.1343C96.9027 44.1127 96.9001 44.1232 96.9192 44.0892C96.932 44.0662 96.9295 44.0738 96.8893 44.0417L94.8265 42.3166L90.9341 39.0489C90.728 38.9585 90.6861 39.0432 90.4772 38.9966C90.227 38.8285 90.0191 38.6354 89.8084 38.4612C89.6545 38.4395 89.4548 38.4106 89.2969 38.3469C89.1087 38.2709 86.7369 36.3039 86.6103 36.1272C86.5437 36.0345 86.5976 36.0054 86.6606 35.9546ZM95.8933 22.154C95.9559 22.1284 96.0399 22.1154 96.1387 22.116C96.3002 22.1167 96.499 22.1639 96.6775 22.2371C96.8352 22.3017 96.9621 22.3989 97.0327 22.4817C97.1007 22.5618 97.0891 22.6387 97.0286 22.6845C96.9564 22.7392 96.7846 22.7599 96.6112 22.7397C96.4021 22.7153 96.2032 22.6234 96.0144 22.5344L95.9595 22.5082L85.2908 23.2173C85.1718 23.2455 85.4343 23.3843 85.4401 23.4683L84.6128 23.5241C84.6541 23.5837 84.7114 23.6707 84.7051 23.7211C84.7019 23.7468 84.6643 23.7857 84.636 23.7997C84.5179 23.8586 84.0563 23.8546 83.8612 23.8678L81.31 24.0268C81.2384 24.024 81.1951 24.0143 81.111 23.9919C80.9494 23.9488 80.8485 23.8951 80.7388 23.817C80.5592 23.6893 80.199 23.4094 80.2245 23.3024C80.2381 23.246 80.2819 23.2212 80.3792 23.2044C80.6746 23.1533 81.0772 23.15 81.4138 23.1273L83.5798 22.9896C83.7407 22.9812 83.9298 23.0668 84.1224 23.1316L84.1532 23.107L84.001 23.0017L84.018 22.9578C84.2116 22.9452 84.6323 22.8814 84.8531 22.934L85.072 23.1096C85.1081 23.1206 85.1454 23.1373 85.1805 23.1427C85.2758 23.1576 85.4805 23.1237 85.5708 23.1179L87.1144 23.0163L95.8595 22.434L95.8527 22.4071L95.8433 22.3642C95.8236 22.2801 95.813 22.226 95.8774 22.1673L95.8933 22.154ZM85.9823 27.9122C86.5677 27.8429 87.231 27.8192 87.8518 27.7774C88.302 27.747 88.7852 27.6802 89.2883 27.7034C89.4665 27.7467 89.5767 27.7769 89.7328 27.8598L89.7796 27.8852L89.8532 27.9241C90.008 28.0071 90.5482 27.8613 90.7832 27.9158C90.8718 27.9881 90.9539 28.0725 91.096 28.1285C91.535 28.1364 91.9518 28.0835 92.3552 28.0568L102.974 27.348L102.941 27.2507C102.915 27.1496 102.952 27.0442 103.115 27.0186C103.254 26.9965 103.451 27.0389 103.636 27.0986C103.833 27.1624 103.94 27.2209 104.06 27.3204C104.172 27.4138 104.2 27.4916 104.167 27.5608C104.134 27.6288 104.023 27.6457 103.908 27.6708L103.804 27.6642C103.54 27.6421 103.328 27.5359 103.079 27.4268L91.2164 28.2075C91.1747 28.2916 91.4093 28.3732 91.3978 28.467C91.2939 28.4736 90.6336 28.5263 90.5596 28.4952C90.4691 28.4572 90.4874 28.4035 90.3499 28.3607C90.3398 28.4102 90.3267 28.4624 90.2798 28.4984C90.1767 28.5773 87.2869 28.7809 86.9535 28.7451C86.7993 28.7286 86.6492 28.7058 86.4981 28.628C86.3015 28.5269 85.8684 28.1601 85.8293 28.0519C85.7997 27.9699 85.8929 27.9461 85.9823 27.9122ZM99.4598 23.1025C99.5559 23.0802 99.651 23.0578 99.7841 23.0648C99.9168 23.0719 100.064 23.1026 100.205 23.1634C100.291 23.2004 100.37 23.243 100.436 23.2885C100.503 23.334 100.556 23.3815 100.592 23.4281C100.627 23.4712 100.643 23.5124 100.641 23.5489C100.639 23.5854 100.618 23.6162 100.58 23.6391C100.502 23.6865 100.362 23.7058 100.194 23.6832C100.032 23.6616 99.8857 23.6085 99.7376 23.5376L99.532 23.4441L94.7016 23.7659L93.7137 23.8298C93.615 23.836 93.4271 23.8321 93.3517 23.8524C93.3172 23.8617 93.2972 23.9632 93.2881 23.9905L93.1523 24.422C93.1328 24.4753 93.1195 24.5724 93.0659 24.612C93.0311 24.6377 92.8462 24.6479 92.778 24.6535L91.7933 24.7182L87.4057 25.0099C87.3767 25.0896 87.5588 25.1584 87.5794 25.2509L86.6733 25.3123L86.6666 25.3598C86.6566 25.3956 86.651 25.4448 86.5913 25.458C86.3493 25.5119 85.9528 25.511 85.6604 25.531L83.5409 25.6742L83.5003 25.6773C83.3173 25.687 83.1751 25.6925 82.9409 25.6034C82.6992 25.5113 82.381 25.2175 82.2617 25.0917C82.197 25.0236 82.1759 24.9589 82.2186 24.9148C82.3185 24.8114 82.9297 24.8157 83.1808 24.7985L84.6837 24.699C85.0018 24.6788 85.3297 24.6426 85.6859 24.6586C85.7679 24.6623 85.8845 24.7119 85.9672 24.7466L86.0352 24.7762C86.2033 24.722 86.687 24.6744 86.9528 24.7017L87.2437 24.9211C87.4128 24.9456 87.5771 24.9191 87.7168 24.9099L92.3799 24.6028C92.5119 24.5936 92.8468 24.5948 92.9204 24.5592C93.0611 24.4914 93.0521 24.1894 93.0919 24.0685C93.1153 23.9971 93.1247 23.832 93.2016 23.792C93.2769 23.7529 98.8354 23.4143 99.4651 23.3723L99.4211 23.2843C99.3812 23.2028 99.3803 23.1686 99.4424 23.116L99.4598 23.1025Z" fill="white"/>
<path d="M48.5326 6.30451C48.6064 6.29093 48.6835 6.2755 48.7763 6.27717C48.9195 6.27971 49.0819 6.32214 49.2371 6.38543C49.4127 6.45693 49.6018 6.60623 49.6613 6.69666C49.7051 6.76341 49.6804 6.84447 49.6228 6.88053C49.6134 6.8863 49.5186 6.93909 49.5229 6.94738C49.5597 7.01775 49.9448 7.29838 50.0511 7.38741L52.2028 9.19256C52.3288 9.29832 52.6454 9.52133 52.7111 9.61911C52.7777 9.71846 52.6638 9.88957 52.6357 9.97455L52.3915 10.7057C52.3378 10.8666 52.258 11.0251 52.2662 11.2046L56.7542 14.9655C56.8046 15.0078 56.9072 15.1124 56.9722 15.1484C57.0031 15.1655 57.0426 15.1768 57.0779 15.191C57.1868 15.1819 57.2877 15.1632 57.4306 15.1927C57.5965 15.3276 58.0055 15.62 58.0469 15.7388L57.8688 15.7469L57.9058 15.7895L58.2724 15.9065C58.8687 16.3525 59.3927 16.8328 59.9325 17.2856C60.2455 17.5481 60.8275 17.9596 60.9407 18.2043C60.882 18.2615 60.7776 18.2786 60.6593 18.303C60.4832 18.3189 60.2888 18.3363 60.0789 18.3199C60.0172 18.3146 59.9508 18.3022 59.884 18.2835C59.8172 18.2648 59.7514 18.2402 59.6911 18.2114C59.4153 18.0784 57.1818 16.1962 57.0163 15.973C57.0259 15.9187 57.0269 15.8736 57.102 15.8448C57.1469 15.8276 57.167 15.8239 57.1886 15.796L56.5469 15.2347L56.9015 15.2023C56.7709 15.0572 56.5555 14.8959 56.3827 14.7504L55.3388 13.8736L52.1014 11.1748L52.5977 9.61981L50.2397 7.64385L49.7073 7.19968C49.6385 7.14326 49.5372 7.04371 49.4531 6.99273C49.3639 6.93866 48.9462 6.8453 48.8069 6.78618C48.6539 6.72138 48.5277 6.62069 48.4708 6.54073C48.3903 6.42761 48.4389 6.36345 48.5326 6.30451ZM81.6613 36.2877C81.7532 36.2664 81.8677 36.2587 81.9755 36.2492C82.1766 36.2314 82.417 36.197 82.6965 36.2924C82.8096 36.331 82.8622 36.3582 82.9467 36.4148C83.2269 36.6023 83.4816 36.8555 83.7163 37.052L85.5109 38.5582C85.499 38.6113 85.4708 38.6555 85.4393 38.7017L85.5129 38.7419L85.6545 38.7385C85.8273 38.7971 86.1941 39.1175 86.2991 39.2199C86.4264 39.344 86.0868 39.2722 86.0385 39.3534L88.1709 41.14C88.2701 41.2233 88.4872 41.4493 88.6071 41.5132C88.7446 41.5864 89.3197 41.746 89.5067 41.8069L92.8675 42.9026C93.1005 42.9788 93.5738 43.1107 93.7703 43.2056C93.8576 43.2477 93.9728 43.3548 94.0338 43.4059L94.613 43.8919L97.1489 46.0243C97.5528 46.3636 97.9497 46.7394 98.4109 47.0696L98.6598 47.1261C98.832 47.1689 99.0741 47.2457 99.2014 47.3374C99.3612 47.4525 99.374 47.5401 99.3822 47.6375C99.3124 47.7057 99.2399 47.7531 99.0446 47.7466C98.8801 47.7412 98.7007 47.6937 98.5285 47.6181C98.3728 47.5497 98.2363 47.4456 98.1713 47.3618C98.0762 47.2389 98.1644 47.1707 98.2575 47.106L98.285 47.0874L94.8118 44.1606L94.0429 43.514C93.9705 43.4531 93.8564 43.3344 93.7694 43.2841C93.5736 43.1708 91.0266 42.3752 90.6611 42.256L89.001 41.7111C88.9035 41.6782 88.6633 41.6101 88.5841 41.5689C88.4259 41.4867 88.1975 41.263 88.0811 41.1654C87.8002 40.9298 86.1227 39.453 85.8513 39.3348L85.5725 39.3524C85.382 39.2875 85.1417 39.0399 85.0166 38.9338C84.9991 38.919 84.9046 38.8334 84.8903 38.8266C84.7666 38.7673 84.4472 38.7334 84.2672 38.6523C83.9886 38.5268 81.6993 36.5789 81.6026 36.4071C81.5587 36.3288 81.591 36.3274 81.6613 36.2877ZM47.8635 25.3824C48.0891 25.3259 51.1003 25.1187 51.3478 25.1678C51.5029 25.1985 51.652 25.2683 51.7706 25.3426C52.0449 25.5145 52.2667 25.7369 52.3082 25.8999C52.2866 25.929 52.2678 25.953 52.2109 25.9652C51.9594 26.0194 51.5694 26.0189 51.271 26.0392L49.1406 26.1789C48.8854 26.1919 48.778 26.1768 48.4686 26.0723L47.6423 26.1377L47.6069 26.1426C47.4135 26.1068 47.3871 25.9946 47.199 25.9081L43.4293 26.1538C43.2321 26.167 42.8263 26.1587 42.6841 26.2035C42.6436 26.2163 42.6241 26.3502 42.6134 26.3827L42.4219 26.9768C42.3953 27.0583 42.3882 27.2203 42.2984 27.2722C42.1865 27.3372 36.6459 27.6644 35.9453 27.7109L33.5514 27.8746C33.5757 27.9458 33.6034 28.0182 33.5814 28.0777C33.5546 28.1501 33.5008 28.2022 33.3371 28.2039C33.2019 28.2053 32.9672 28.1569 32.813 28.0985C32.6327 28.0302 32.4662 27.8945 32.3907 27.8035C32.3274 27.727 32.3298 27.6472 32.3883 27.6026C32.4454 27.5594 32.6061 27.5407 32.7394 27.5534C32.9786 27.5764 33.1799 27.6712 33.3996 27.7708L33.4703 27.803L39.8536 27.3833L41.5757 27.2671C41.7356 27.2553 42.0064 27.2556 42.1304 27.2229C42.2105 27.2018 42.2275 27.0662 42.2448 27.0128L42.4735 26.2763C42.487 26.2463 42.5127 26.1442 42.5534 26.1294C42.6667 26.0884 43.0568 26.0957 43.2283 26.0845L46.004 25.9028C46.3347 25.881 46.7858 25.8856 47.0602 25.8277C47.1952 25.7992 46.8886 25.6541 46.9037 25.5705C47.1137 25.563 47.4456 25.5052 47.671 25.5344C47.7403 25.5433 47.7719 25.5432 47.8297 25.5392C47.8145 25.4869 47.8065 25.4518 47.8377 25.4128L47.8635 25.3824ZM54.353 4.33411L54.593 4.32985C54.7256 4.33365 54.9068 4.37635 55.0506 4.4386C55.2278 4.51523 55.3679 4.6233 55.4321 4.7182C55.5064 4.82813 55.4334 4.89292 55.3356 4.946L55.3111 4.95882C55.4048 5.07612 55.5844 5.20882 55.7241 5.3263L59.4367 8.43904L60.0279 8.93876C60.0994 8.99941 60.2422 9.10153 60.2885 9.15981C60.3386 9.22262 60.1997 9.46019 60.1779 9.52753L59.6606 11.0932L64.0043 14.7342L64.3768 14.7101C64.5782 14.8805 64.803 15.1079 65.0576 15.267C65.2924 15.3014 65.4811 15.3415 65.707 15.449C66.1639 15.8159 68.2079 17.4564 68.3268 17.715C68.2601 17.7763 68.1184 17.7918 67.9866 17.8158C67.7843 17.8318 67.5428 17.8552 67.2808 17.7991C67.1916 17.7659 67.0916 17.7311 67.0156 17.6865C66.7433 17.5266 66.4933 17.2792 66.2861 17.106L64.8777 15.924C64.7605 15.8251 64.4367 15.5855 64.3959 15.5004C64.379 15.4653 64.4388 15.3735 64.4499 15.3407C64.2812 15.2726 64.3299 15.3505 64.1525 15.3043L63.5205 14.7656L63.8448 14.7398C63.8241 14.6606 63.6744 14.5589 63.5711 14.4723L59.5073 11.0638L60.143 9.1233L56.523 6.09573L55.594 5.31331C55.4716 5.21011 55.3353 5.06649 55.1587 4.97602C54.9695 4.94396 54.7803 4.9137 54.5966 4.8255C54.4089 4.73531 54.29 4.639 54.2326 4.53625C54.1656 4.41618 54.2447 4.39205 54.353 4.33411ZM107.649 27.9407C107.768 27.9035 107.823 27.9105 107.799 27.8153L107.791 27.7878C107.766 27.6974 107.783 27.6439 107.903 27.6072C107.999 27.5773 108.174 27.5833 108.332 27.6213C108.485 27.658 108.704 27.7333 108.826 27.8089C108.985 27.9069 109.041 28.01 109.029 28.0919C109.018 28.17 108.956 28.222 108.809 28.2334C108.658 28.245 108.507 28.2257 108.316 28.1609C108.176 28.1135 108.05 28.0503 107.927 27.9882C107.323 28.0283 101.903 28.3592 101.853 28.3938C101.815 28.4207 101.813 28.5099 101.798 28.551L101.646 28.9964C101.627 29.0532 101.621 29.1463 101.55 29.1821C101.505 29.205 101.28 29.2066 101.202 29.2131L99.6746 29.3171L95.8292 29.5713L93.7639 29.7048C93.5796 29.7186 93.0945 29.7191 93.0348 29.7923C93.1199 29.8609 93.2303 29.9349 93.2423 29.9992C93.0025 30.0125 92.6751 30.0736 92.3987 30.0376C92.3475 30.0025 92.3139 29.9773 92.2789 29.9404L92.2517 29.91L92.182 29.9043L92.1389 30.0731L88.8763 30.2875C88.7064 30.2878 88.5866 30.272 88.3877 30.1909C88.1759 30.1046 87.8834 29.8293 87.7698 29.715C87.6752 29.62 87.6904 29.5689 87.7325 29.505C87.9299 29.4365 90.9054 29.2289 91.1577 29.2657C91.3631 29.2957 91.511 29.376 91.6818 29.4661L91.7349 29.4944C91.9746 29.4786 92.3392 29.4186 92.6155 29.4533C92.718 29.5375 92.7988 29.6054 92.9435 29.6805L92.9656 29.6796L101.007 29.1491C101.104 29.1427 101.341 29.1479 101.399 29.123C101.492 29.0837 101.498 28.9608 101.522 28.8908L101.72 28.3149L105.837 28.0399L106.945 27.9667C107.172 27.9518 107.39 27.926 107.649 27.9407ZM32.25 5.80626C32.3399 5.80135 32.4489 5.79436 32.5526 5.80369C32.7018 5.81722 32.8921 5.87221 33.0392 5.94156C33.1815 6.00869 33.3226 6.13195 33.3618 6.20757C33.4125 6.30536 33.3282 6.36621 33.2492 6.41939L33.2233 6.43619C33.3384 6.56533 33.5329 6.70894 33.6865 6.83768L37.6054 10.124L38.382 10.7804C38.4555 10.8429 38.5747 10.9674 38.6671 11.0233C38.6927 11.0387 38.7257 11.0507 38.756 11.0634C39.0409 11.1829 39.4554 11.2981 39.7602 11.3975L42.2333 12.205C42.3329 12.2382 42.6555 12.3304 42.721 12.3686C42.7758 12.4006 42.8573 12.4833 42.9015 12.5205L43.4172 12.9542L46.0093 15.13L46.6133 15.6359C46.7024 15.7105 46.785 15.7971 46.9166 15.8625C47.0498 15.8743 47.1531 15.8606 47.2639 15.8511L47.9224 16.4028L48.1266 16.4392C48.2774 16.4693 48.4996 16.526 48.6226 16.6058C48.9594 16.8246 49.2677 17.1338 49.5429 17.3644C50.0503 17.7893 50.6892 18.2634 51.1021 18.6885C51.1679 18.7561 51.1913 18.8012 51.202 18.861C51.1328 18.9212 51.0022 18.9355 50.8687 18.9587C50.6724 18.9719 50.374 19.0056 50.1139 18.9194C50.0011 18.882 49.9114 18.8374 49.829 18.7811C49.5122 18.5645 49.2325 18.2936 48.9648 18.0682L47.2748 16.6461L47.3374 16.48L47.2528 16.45L47.1192 16.4637L47.0201 16.4322L46.3963 15.9087L46.7846 15.8796L43.4744 13.0996L42.8849 12.6053C42.8235 12.5539 42.7158 12.4437 42.6246 12.4003C42.5047 12.3433 42.2749 12.2807 42.1427 12.2374L40.8147 11.8036C40.481 11.6947 38.8066 11.1812 38.5997 11.0683C38.5405 11.036 38.4415 10.9363 38.3913 10.8942L37.7535 10.3601L34.2868 7.44906L33.4437 6.74304C33.3274 6.64647 33.2096 6.52671 33.044 6.4429C32.8234 6.40707 32.6079 6.35672 32.405 6.24878C32.2554 6.16913 32.1913 6.10753 32.1493 6.02342C32.0918 5.90813 32.1336 5.86203 32.25 5.80626ZM37.2951 4.15709C37.3847 4.14029 37.4756 4.1216 37.5957 4.13029C37.8187 4.14629 38.0219 4.23617 38.2377 4.32873C38.3054 4.37701 38.3738 4.42344 38.4097 4.47339C38.507 4.60931 38.4394 4.69991 38.3456 4.77907L38.3207 4.79932L42.4842 8.28865C42.5732 8.36358 42.7698 8.50489 42.8155 8.57602C42.8693 8.65997 42.7715 8.80772 42.7483 8.87957L42.4387 9.82303L49.4558 15.7007L49.8502 15.6824L50.4998 16.2266C50.7043 16.2645 50.8686 16.3025 51.0753 16.37C51.4402 16.5882 53.686 18.4851 53.778 18.6714C53.7241 18.7384 53.6248 18.7547 53.4934 18.7802C53.2687 18.7993 53.0281 18.8222 52.737 18.7651C52.254 18.5968 51.7317 18.0584 51.4408 17.8144L50.1501 16.7267C50.095 16.68 49.8701 16.5103 49.8566 16.4764C49.8398 16.4343 49.8988 16.347 49.9112 16.3085L49.844 16.2709L49.7005 16.2943L49.5972 16.2605C49.4459 16.133 49.0313 15.833 49.0124 15.7291C49.1254 15.7251 49.2717 15.7335 49.3175 15.6861L42.2864 9.77669L42.6897 8.56617L38.2029 4.79563C38.0351 4.76502 37.7381 4.71199 37.5815 4.63479C37.4586 4.57422 37.3122 4.45321 37.2561 4.38349C37.17 4.27643 37.2187 4.21678 37.2951 4.15709ZM98.3265 17.3745L98.4201 17.3732C98.6095 17.3733 98.7976 17.3964 99.0203 17.4907C99.1745 17.5561 99.2939 17.6496 99.3642 17.7319C99.4323 17.8115 99.4287 17.8838 99.3749 17.9325C99.3157 17.9858 99.1993 18.0182 99.0404 18.004C98.7956 17.9822 98.5686 17.8908 98.3387 17.7842L98.2867 17.7598L90.0839 18.2935L89.7936 19.1333C89.7555 19.2511 89.7448 19.4955 89.6176 19.5719C89.5869 19.5903 89.3461 19.5908 89.2845 19.595L81.5664 20.1101C81.5148 20.182 81.7408 20.2781 81.7532 20.3746L80.9238 20.4296C80.9598 20.4855 81.0166 20.567 81.0124 20.6153C81.0103 20.6395 80.9799 20.6754 80.9559 20.6896C80.8374 20.7595 80.3241 20.754 80.1027 20.769L77.6794 20.9303L77.4639 20.9073C77.2428 20.8364 77.1369 20.7922 76.9909 20.6779C76.7981 20.5271 76.4944 20.3068 76.5378 20.1786C76.553 20.1333 76.5988 20.1189 76.6769 20.1061C76.9581 20.0602 77.3164 20.0547 77.6304 20.0332L79.3715 19.9174C79.4664 19.9118 79.9003 19.8669 79.9869 19.8855C80.0928 19.9083 80.309 19.9922 80.4211 20.0294L80.4488 20.0111L80.3049 19.8965C80.3496 19.835 80.8549 19.8162 81.0231 19.816C81.2257 19.8158 81.2477 19.9509 81.4541 20.0339C82.0365 20.032 89.4655 19.5188 89.4851 19.5095C89.5384 19.4844 89.5391 19.3648 89.5539 19.3188L89.8243 18.4815C89.8444 18.4234 89.859 18.2723 89.9257 18.2387C89.9686 18.2171 90.2379 18.2179 90.3154 18.2128L91.7581 18.1194L98.2028 17.6824C98.1546 17.5392 98.1239 17.4525 98.297 17.3852L98.3265 17.3745ZM23.3969 20.8891C23.4806 20.8624 23.5902 20.8388 23.7204 20.8489C23.947 20.8665 24.1499 20.9648 24.3586 21.0629L24.4239 21.0939L34.9295 20.3949C35.039 20.3877 35.1724 20.3677 35.2928 20.3726C35.3943 20.3769 35.8694 20.5459 35.9884 20.5845L38.4451 21.3888L40.7569 21.2312C40.9506 21.2178 41.4836 21.2156 41.5646 21.1445L41.3518 20.9477C41.493 20.8789 42.0262 20.8787 42.2634 20.8685C42.274 20.8059 42.2874 20.7461 42.3867 20.7204C42.6596 20.6498 43.1683 20.6513 43.5082 20.6274C44.1673 20.5812 44.8376 20.4967 45.5397 20.4921C45.6356 20.4915 45.7339 20.5018 45.8484 20.5325C46.0804 20.5947 46.224 20.6817 46.374 20.7951C46.6052 20.97 46.761 21.1175 46.7371 21.2646C46.676 21.3053 46.6175 21.3329 46.5095 21.3466C46.2335 21.3816 43.5881 21.5786 43.3922 21.5532C43.2653 21.5368 43.0535 21.4463 42.9274 21.4305C42.8745 21.4238 42.7454 21.4421 42.6945 21.4453C42.4803 21.4588 42.2207 21.4995 41.9694 21.472L41.9243 21.4346C41.8837 21.4012 41.7236 21.257 41.6427 21.2455C41.4822 21.2227 41.1845 21.2705 41.0421 21.28L38.9087 21.4229C38.8128 21.4289 38.5099 21.4695 38.4258 21.4519C38.2182 21.4083 37.8335 21.2599 37.6127 21.1877L35.3115 20.4402L27.0963 21.0021L25.3139 21.1205C25.0792 21.1359 24.7001 21.1303 24.5291 21.1857L24.5463 21.221L24.5665 21.2663C24.5863 21.3064 24.5981 21.3092 24.592 21.3462C24.5796 21.4201 24.4457 21.4923 24.3007 21.4989C24.1549 21.5055 23.9515 21.4488 23.7833 21.3888C23.6105 21.3272 23.4785 21.2572 23.385 21.1655C23.2971 21.0791 23.3179 20.9864 23.3602 20.931L23.3969 20.8891ZM91.6516 32.6637L93.7818 32.5194C94.1722 32.4935 94.5653 32.4413 95.0087 32.4675C95.0847 32.4957 95.2829 32.575 95.3561 32.5793C95.6487 32.5967 95.913 32.4913 96.2072 32.521C96.3944 32.5398 96.4029 32.6899 96.6006 32.7433C96.6866 32.7665 101.598 32.4157 102.101 32.3822C102.376 32.3638 103.35 32.2539 103.603 32.3079C103.87 32.3646 104.274 32.5221 104.548 32.6118L107.234 33.4894C107.341 33.5242 107.595 33.61 107.689 33.6206C107.768 33.6294 107.893 33.6036 107.966 33.5976L108.776 33.5386L114.776 33.1324C114.741 33.052 114.719 32.9794 114.743 32.9133C114.769 32.8423 114.868 32.8166 115.018 32.8153C115.23 32.8135 115.422 32.8862 115.652 32.9722C115.753 33.0309 115.842 33.086 115.904 33.1508C115.987 33.2394 115.994 33.3254 115.946 33.3844C115.912 33.427 115.838 33.4403 115.756 33.4572C115.693 33.4621 115.632 33.4659 115.553 33.456C115.333 33.4281 115.133 33.3358 114.931 33.2452C114.908 33.235 114.887 33.2196 114.863 33.2144C114.837 33.2089 114.685 33.2234 114.655 33.2251L113.739 33.2843L108.973 33.6041L108.037 33.6724C107.955 33.6787 107.81 33.7044 107.719 33.6969C107.609 33.688 107.073 33.4929 106.928 33.4456C105.824 33.0856 104.693 32.6862 103.585 32.3605L98.0829 32.7257L97.0498 32.7959C96.9644 32.8018 96.768 32.7995 96.7123 32.8191C96.6918 32.8263 96.6974 32.8456 96.6901 32.8588L96.9032 33.0377C96.8843 33.1484 96.1526 33.0895 96.0034 33.1983C95.8981 33.2751 95.7631 33.311 95.5646 33.3325C95.0154 33.3921 94.404 33.4143 93.8274 33.4523C93.4778 33.4754 93.1083 33.5254 92.7271 33.5172C92.6101 33.5147 92.4205 33.4803 92.2877 33.4359C92.1342 33.3847 92.0033 33.2793 91.9122 33.2048C91.6974 33.0293 91.4769 32.8651 91.5174 32.7176L91.6516 32.6637ZM22.8845 22.9644C23.005 22.9431 23.1152 22.9248 23.2815 22.9445C23.5081 22.9713 23.702 23.0831 23.9006 23.1795L37.2269 22.2962C37.8267 22.4583 38.442 22.6757 39.0366 22.8702L43.1989 22.5876C43.3147 22.5521 43.0678 22.433 43.0441 22.3499C43.2508 22.3334 43.6483 22.2641 43.8906 22.3057L44.0468 22.4283L44.1103 22.4327C44.1103 22.374 44.1025 22.3095 44.1818 22.2807C44.3666 22.2137 44.8213 22.2224 45.0872 22.2043L46.6353 22.1006C46.9154 22.0823 47.1949 22.0512 47.4968 22.0533C47.5956 22.0541 47.6575 22.0635 47.7701 22.0896C47.9127 22.1527 48.024 22.2066 48.1338 22.2841C48.3904 22.465 48.5928 22.6478 48.606 22.8132L48.5885 22.8298C48.4597 22.9102 45.4546 23.108 45.0884 23.0772C44.8933 23.0227 44.7739 22.9681 44.5982 22.8839C44.4489 22.8124 43.9026 22.9355 43.6479 22.8773C43.5571 22.8033 43.4749 22.7194 43.3301 22.6618L40.1628 22.8695C39.8382 22.8919 39.4333 22.9616 39.0749 22.945C39.0132 22.942 38.8395 22.8774 38.766 22.8536L37.5549 22.4622C37.4956 22.4432 37.2886 22.3674 37.2372 22.3606C37.1225 22.3455 36.8483 22.3919 36.7401 22.4002L35.0405 22.5161L23.9962 23.2517L24.0069 23.283L24.0211 23.3301L24.0429 23.3925C24.064 23.4729 24.0184 23.5226 23.9034 23.548C23.775 23.5764 23.6068 23.5715 23.4114 23.517C23.22 23.4637 23.0774 23.3955 22.9543 23.2981C22.8283 23.1983 22.7714 23.1008 22.8082 23.0248C22.8205 22.9989 22.8541 22.9822 22.8845 22.9644ZM104.95 24.0606C105.005 24.0492 105.057 24.0423 105.131 24.0453C105.3 24.0523 105.449 24.0794 105.633 24.1566C105.811 24.2312 105.939 24.3127 106.01 24.4091C106.071 24.4919 106.084 24.5903 106.003 24.6327C105.918 24.677 105.763 24.6886 105.598 24.6672C105.379 24.6389 105.19 24.5507 105 24.4535L104.944 24.4246L100.216 24.7366C100.157 24.7405 99.9992 24.7392 99.9617 24.7535C99.9017 24.7764 99.8907 24.8839 99.8754 24.9284L99.6791 25.5134C99.6508 25.5973 99.6674 25.704 99.5076 25.7248C99.2085 25.7638 98.8537 25.7728 98.532 25.7942L90.945 26.2999L89.618 26.3901C89.4482 26.4017 89.1537 26.3954 89.0681 26.4569L89.2704 26.6365C89.229 26.7461 88.5602 26.6477 88.4432 26.7428C88.5028 26.8199 88.5577 26.8878 88.528 26.948C88.5017 27.0012 88.4044 27.0298 88.3063 27.0448C87.963 27.0975 87.5389 27.1062 87.1599 27.1322L85.2249 27.2493L85.1347 27.2383C84.9717 27.2141 84.8042 27.1818 84.66 27.0954C84.4216 26.9525 84.0791 26.6535 84.0284 26.5128C84.0544 26.4474 84.0995 26.4229 84.2151 26.4008C84.4879 26.3488 84.8843 26.3478 85.1996 26.3264L87.4915 26.1802L87.9272 26.326L87.9582 26.2998L87.8276 26.2085L87.8317 26.1579C88.0381 26.1422 88.3906 26.0818 88.6349 26.1219L88.9193 26.3273C88.9572 26.3372 88.9833 26.3453 89.0205 26.3469C89.246 26.3565 89.4877 26.3175 89.692 26.304L98.949 25.6861C99.0944 25.6763 99.3636 25.6816 99.4744 25.6509C99.5092 25.6412 99.53 25.533 99.5386 25.5058L99.7253 24.9108C99.7423 24.8596 99.7655 24.7289 99.8362 24.7036C99.9221 24.6731 100.114 24.6746 100.235 24.6665L101.089 24.6091L104.864 24.3495C104.803 24.2171 104.78 24.1367 104.926 24.071L104.95 24.0606ZM42.8542 4.31076C42.9262 4.29575 43.006 4.2862 43.0926 4.28225C43.235 4.27727 43.4348 4.32495 43.5992 4.38836C43.7582 4.44969 43.9237 4.57881 43.9811 4.65972C44.0703 4.78554 43.9305 4.87463 43.844 4.94537L48.1538 8.54948L48.7344 9.02879C48.7712 9.05883 48.8994 9.14982 48.9083 9.17061C48.9343 9.23097 48.8484 9.35121 48.8305 9.40538L48.5253 10.336C48.5119 10.379 48.4308 10.5144 48.457 10.558C48.4817 10.5991 48.6632 10.7282 48.7234 10.778L49.5971 11.5065L54.2144 15.3883L54.58 15.3592L55.2313 15.9171L55.5896 15.9721C55.7196 16.0004 55.8442 16.0479 55.9443 16.1118C56.2521 16.3083 56.5205 16.5868 56.7692 16.7962L57.9698 17.8003C58.1609 17.9607 58.4688 18.183 58.5188 18.3339C58.4778 18.4247 58.3809 18.4384 58.2163 18.4656C57.9962 18.484 57.7073 18.518 57.4124 18.4292C57.0007 18.2365 56.787 18.0194 56.5182 17.7953L55.5644 16.9966L54.899 16.4356C54.8149 16.3632 54.6934 16.2698 54.6504 16.1985C54.6133 16.1372 54.6412 16.081 54.6581 16.0335L54.6683 16.0075L54.6055 15.9681C54.5188 15.9746 54.4664 15.9825 54.354 15.9573C54.1757 15.7799 53.886 15.5888 53.739 15.4149L54.0924 15.3961L48.6851 10.8537C48.5944 10.7769 48.408 10.6443 48.3527 10.5724C48.2408 10.4269 48.6978 9.35836 48.7485 9.14688L44.613 5.68583C44.4627 5.55985 43.8398 4.99646 43.7264 4.9422C43.6319 4.89705 43.3292 4.86353 43.1688 4.7994C42.9591 4.71547 42.8652 4.61587 42.7621 4.50993C42.7398 4.4126 42.7636 4.36896 42.8541 4.31068L42.8542 4.31076ZM74.508 36.7644L74.7758 36.7282C75.0637 36.7075 75.253 36.6752 75.636 36.7996C76.0612 37.0295 76.4964 37.4706 76.8085 37.731C77.2756 38.1206 77.8515 38.5487 78.2396 38.9391C78.3514 39.0516 78.3551 39.1026 78.3023 39.1802L78.1699 39.2128C78.0594 39.2767 78.7084 39.6675 78.7573 39.7984L78.5057 39.818C78.4939 39.8294 78.4607 39.8345 78.47 39.852C78.4837 39.878 78.6066 39.9698 78.6424 39.9998L81.5314 42.4197C81.6739 42.5394 82.0469 42.8059 82.1169 42.9119C82.1567 42.9723 82.0873 43.0968 82.0711 43.1462C82.0032 43.3514 81.8957 43.554 81.8855 43.776L84.8822 46.2914L85.4304 46.7532C85.4607 46.7787 85.5427 46.8603 85.5822 46.8812C85.6601 46.9221 85.8785 46.9861 85.9762 47.0183L87.3944 47.4816C87.5206 47.5237 87.7726 47.5935 87.8615 47.6614C88.6427 48.2584 89.3312 48.8931 90.0538 49.4982C90.273 49.682 90.5067 49.9172 90.782 50.0911C90.8829 50.1064 90.9866 50.1216 91.0921 50.1506C91.2537 50.1951 91.4836 50.2954 91.5886 50.3787C91.7183 50.4815 91.7083 50.5747 91.6923 50.6527L91.6374 50.6977C91.5659 50.7423 91.4431 50.7581 91.2864 50.7363C91.1252 50.7138 90.9472 50.6649 90.7986 50.5877C90.6553 50.5134 90.5212 50.4021 90.4828 50.3211C90.4324 50.2147 90.4933 50.1654 90.6037 50.1167L90.6352 50.1037C90.4902 49.9263 90.1681 49.6953 89.9544 49.516L87.9369 47.8246C87.8947 47.7891 87.8111 47.7053 87.7588 47.6754C87.651 47.6137 87.3417 47.5276 87.2109 47.4852L85.7913 47.0173C85.7356 46.9982 85.5338 46.9376 85.4909 46.9133C85.4339 46.8812 85.3457 46.7896 85.2978 46.749L84.8137 46.3391C83.7997 45.4851 82.8191 44.6112 81.734 43.764C81.7072 43.6359 81.7738 43.5242 81.811 43.4141L81.9677 42.9096C81.6978 42.6453 81.3405 42.3698 81.0274 42.1066L79.3732 40.718L78.702 40.1553C78.6048 40.0739 78.4948 39.963 78.3772 39.8857C78.2251 39.7856 78.0897 39.884 77.8819 39.8221C77.7365 39.6909 77.3524 39.4191 77.2954 39.3054C77.3685 39.2976 77.4356 39.2853 77.4958 39.2686C77.3443 39.1955 77.1527 39.1356 76.9869 39.0771C76.3927 38.6205 75.8596 38.151 75.3116 37.6899C75.0536 37.4728 74.6801 37.2013 74.5146 36.9847C74.4219 36.8633 74.4246 36.8327 74.508 36.7644ZM91.4836 35.6332C91.6729 35.5966 91.9026 35.5833 92.1315 35.5785C92.2917 35.5752 92.3886 35.5978 92.5717 35.6648C92.9992 35.9411 95.2039 37.7661 95.2709 37.9923C95.3114 38.1298 95.7404 38.448 95.9216 38.6062C95.9387 38.6974 95.7003 38.6461 95.6243 38.7088L98.5913 41.2015L99.1159 41.6411C99.155 41.6738 99.2712 41.7584 99.2899 41.7869C99.3262 41.8419 99.1324 42.2519 99.1062 42.3295C99.1023 42.3408 99.0642 42.4146 99.0731 42.427C99.1079 42.4756 99.2821 42.5959 99.3489 42.652L100.147 43.3207L104.523 46.9965C104.764 47.1044 105.094 47.1949 105.355 47.2805L107.31 47.9201L110.085 50.2497L110.223 50.2776L110.407 50.3135C110.487 50.3313 110.567 50.357 110.642 50.3889C110.718 50.4207 110.786 50.4579 110.843 50.4977C111.009 50.6129 111.084 50.7153 111.083 50.8144C110.996 50.87 110.907 50.939 110.712 50.9254C110.562 50.9149 110.347 50.8448 110.195 50.779C110.046 50.7142 109.9 50.6213 109.852 50.5394C109.782 50.4224 109.844 50.3427 109.937 50.2779L109.964 50.2601L107.269 47.9794L105.185 47.2931C104.991 47.2297 104.681 47.1401 104.506 47.0589C104.332 46.9784 103.68 46.3829 103.504 46.2355L99.7584 43.0935L99.177 42.5992C99.1157 42.5462 98.9829 42.4497 98.9485 42.4012C98.9158 42.355 98.9613 42.2797 98.9734 42.2426L99.1302 41.7602L95.6947 38.8807C95.66 38.8517 95.5751 38.7668 95.5299 38.7426C95.493 38.7229 95.447 38.7094 95.4056 38.6929C95.3042 38.7018 95.2217 38.7151 95.0882 38.6893C94.8389 38.5155 94.6269 38.316 94.4117 38.137L94.1732 38.0469C94.0518 37.9953 93.9499 37.9326 93.8625 37.8686C93.2961 37.454 92.8049 36.9933 92.2999 36.5705C92.0399 36.3528 91.6027 36.0395 91.4418 35.8297C91.3607 35.7239 91.4033 35.6875 91.4836 35.6332ZM49.7216 3.32898C49.8071 3.31173 49.8934 3.29371 50.0086 3.30083C50.1596 3.31008 50.3216 3.35875 50.4754 3.42467C50.6441 3.49699 50.7941 3.6294 50.8597 3.7196C50.9453 3.837 50.8046 3.89203 50.7142 3.95238L56.3132 8.64637L55.9365 9.77552C55.9154 9.84019 55.8114 10.0148 55.8587 10.0872C55.8922 10.1386 56.082 10.2721 56.1496 10.3281L56.9171 10.9684L61.5376 14.8442C61.7333 14.9261 61.7813 14.848 61.975 14.8809C62.2184 15.0461 62.4212 15.2525 62.6194 15.4247L62.963 15.4764C63.0723 15.5006 63.2465 15.574 63.3296 15.6258C63.6042 15.7971 65.8896 17.7283 65.8956 17.8251C65.9024 17.9346 65.745 17.9476 65.5882 17.9776L65.5472 17.9804C65.3858 17.9913 65.0451 18.0205 64.8315 17.9447C64.6834 17.8921 64.5824 17.8373 64.4764 17.7635C64.2128 17.5801 63.9944 17.3797 63.7697 17.1921L62.5741 16.1893C62.4291 16.0669 62.0659 15.798 62.01 15.6889C61.9676 15.606 62.1157 15.5756 61.9991 15.4746C61.8878 15.4791 61.8647 15.4898 61.7303 15.4519L61.0906 14.9294C61.1888 14.9224 61.4799 14.9114 61.4782 14.9018C61.4764 14.8907 61.3656 14.8072 61.3421 14.7875L60.7359 14.2782L56.0488 10.3465C55.9452 10.2596 55.7549 10.1244 55.7212 10.0422C55.6594 9.89199 55.787 9.70788 55.8283 9.58104L56.1441 8.60323C55.5878 8.15893 50.7595 4.05495 50.6536 4.00859C50.4742 3.93012 50.1851 3.88188 49.9773 3.79528C49.8373 3.73693 49.7372 3.66906 49.6791 3.59406C49.5864 3.47435 49.6286 3.39374 49.7216 3.32898ZM55.9215 2.4404L56.1244 2.42652C56.299 2.42211 56.4578 2.4515 56.6631 2.53032C56.8194 2.5903 56.9413 2.68559 57.0157 2.76573C57.1423 2.90232 57.0625 2.98389 56.9795 3.06379C56.9498 3.09257 56.9409 3.07899 56.9879 3.1328C57.134 3.29994 57.4674 3.53628 57.6718 3.70721L59.604 5.32051C59.6938 5.39494 60.0305 5.63565 60.061 5.69769C60.0852 5.74698 60.0058 5.86164 59.9908 5.90641L59.7642 6.59906C59.7548 6.63759 59.7137 6.71478 59.7333 6.7585C59.7393 6.77164 59.8412 6.84851 59.8579 6.86256L60.3693 7.2898L63.3748 9.79124C63.3841 9.95018 63.3044 10.0917 63.2572 10.2344L62.9262 11.223C62.9192 11.2541 62.9203 11.2546 62.9571 11.2994C63.0181 11.3733 63.17 11.4806 63.2598 11.5559L66.8183 14.5388L67.2191 14.5213C67.3738 14.6505 67.8191 14.9719 67.8382 15.0759L67.6905 15.0913L67.7053 15.1333L68.0123 15.2276C68.3359 15.4238 70.6921 17.3863 70.7027 17.5008C70.7128 17.61 70.5622 17.6229 70.4066 17.6519C70.2471 17.6674 70.0671 17.6802 69.8789 17.6686C69.7414 17.6602 69.6516 17.6346 69.5141 17.5734C69.3987 17.5221 69.3265 17.4681 69.2475 17.406L67.4024 15.8628C67.2671 15.7488 66.9036 15.4866 66.8512 15.3831C66.8105 15.3028 66.8207 15.2112 66.9167 15.1774C66.9741 15.1572 66.9749 15.168 66.9904 15.1339C67.0053 15.1009 66.441 14.6567 66.348 14.5794C66.4707 14.5734 66.6282 14.5801 66.6803 14.5291L63.1724 11.5761C63.071 11.4905 62.8243 11.3043 62.7813 11.2266C62.7221 11.1197 63.1861 9.95389 63.2448 9.77879C62.962 9.57789 62.7248 9.36114 62.4793 9.15586L60.2965 7.32732L59.7706 6.88318C59.7279 6.84631 59.6242 6.76957 59.6009 6.73575C59.5399 6.6474 59.6229 6.51463 59.6451 6.44528L59.8942 5.66819L57.3597 3.54905C57.2678 3.4726 56.9508 3.17002 56.8365 3.11591C56.673 3.03837 56.326 2.97738 56.1083 2.88613C56.0057 2.81346 55.9273 2.75272 55.8782 2.67847C55.7972 2.55644 55.8305 2.50703 55.9215 2.4404ZM41.8201 30.2774L44.7082 30.0862L47.234 30.903L50.9412 30.6576L52.109 30.578C52.3083 30.5642 52.5585 30.5629 52.7176 30.5205C52.6798 30.4506 52.594 30.3848 52.5094 30.3138C52.6714 30.2419 53.1642 30.2503 53.4185 30.2331C53.4441 30.1466 53.4789 30.1021 53.6389 30.0799C54.2106 30.0002 54.8769 29.9771 55.4969 29.9343C55.8985 29.9065 56.3051 29.8534 56.7393 29.857C56.8323 29.8577 56.9194 29.87 57.0275 29.9023C57.294 29.9821 57.4497 30.0916 57.6124 30.2217C57.7658 30.3445 57.9503 30.5121 57.9118 30.6132C57.8951 30.6569 57.8447 30.6843 57.7686 30.699C57.4898 30.7524 57.1067 30.7571 56.7847 30.7792L54.7729 30.8981C54.515 30.9079 54.3015 30.8294 54.0434 30.8115C53.8053 30.795 53.3398 30.8958 53.111 30.8254L52.8937 30.6467C52.8566 30.6348 52.8175 30.6151 52.7822 30.6109C52.6919 30.6005 52.5251 30.6267 52.4439 30.6317L51.6625 30.6816L47.6932 30.9488C47.6108 30.9542 47.3244 30.9937 47.2454 30.9781C47.1058 30.9506 46.8219 30.8406 46.6727 30.792L44.7225 30.1547L42.5486 30.2982C42.4227 30.3065 42.0207 30.3028 41.9489 30.3376C41.9178 30.3527 41.9062 30.4362 41.8952 30.4631C41.841 30.5973 41.8221 30.747 41.7499 30.8746C41.7381 30.8953 41.7115 30.9569 41.6781 30.9651C41.5466 30.9975 41.2921 30.9956 41.1268 31.0066L39.7528 31.0978L34.1844 31.4726C34.2149 31.5335 34.2395 31.5907 34.2326 31.6435C34.2209 31.7315 34.1434 31.7684 33.9844 31.7841C33.8402 31.7983 33.7166 31.7756 33.5292 31.7158C33.3492 31.6583 33.2408 31.5848 33.133 31.4961C33.0346 31.4152 32.9486 31.3199 32.9837 31.2581C33.0254 31.1853 33.177 31.1254 33.359 31.1362C33.572 31.1489 33.8186 31.2626 34.0157 31.3543L34.0849 31.3867C34.7694 31.3842 35.4138 31.3083 36.0572 31.2655L41.2131 30.9219C41.2965 30.9164 41.4955 30.9204 41.5436 30.9C41.6199 30.8675 41.626 30.7677 41.6447 30.7102C41.693 30.5618 41.7328 30.4124 41.8201 30.2774ZM25.5284 4.47223C25.5903 4.45965 25.662 4.45393 25.7409 4.45528C25.9416 4.45878 26.1095 4.50904 26.3262 4.60091C26.4344 4.64668 26.5456 4.71299 26.5892 4.77226C26.7089 4.93467 26.6617 5.00459 26.534 5.09396L26.5036 5.1144L29.1165 7.31947L31.9256 8.23775C32.1199 8.30133 32.557 8.42066 32.7161 8.49642C32.7685 8.52135 32.8622 8.6114 32.9005 8.6435L36.6998 11.8371C36.7456 11.8755 36.8153 11.9489 36.87 11.98C36.9708 12.0373 37.4578 12.178 37.5964 12.2233L40.4679 13.1617L41.2432 13.4166C41.2975 13.4345 41.4273 13.4694 41.4687 13.4909C41.505 13.5097 41.5654 13.5739 41.595 13.5992L42.0286 13.9656L44.4262 15.9845C44.6221 16.0646 44.6984 15.9745 44.9089 16.0351L45.5378 16.5628C45.7477 16.5981 45.8988 16.627 46.1127 16.6996C46.5336 16.9591 46.9034 17.3304 47.2344 17.608C47.7165 18.0125 48.2717 18.4388 48.693 18.8449C48.7457 18.8957 48.7609 18.931 48.7761 18.9771C48.7147 19.0764 48.6233 19.0833 48.4411 19.1182C48.2376 19.1329 48.0003 19.1478 47.7443 19.101C47.5521 19.0267 47.4571 18.9661 47.3295 18.8652C47.0676 18.6585 44.9567 16.92 44.9035 16.8243C44.8819 16.7853 44.9255 16.6911 44.9316 16.6542L44.881 16.6162C44.7768 16.6114 44.8114 16.6113 44.7227 16.613L44.6657 16.6146L44.5818 16.5672C44.4735 16.4939 44.0345 16.119 44.0171 16.0669C44.1251 16.0602 44.2221 16.0518 44.3184 16.0357C44.315 16.014 44.3172 16.0071 44.2943 15.9795C44.2278 15.8991 44.0698 15.7877 43.9705 15.704L43.2417 15.0926L41.905 13.9685C41.7561 13.8431 41.5815 13.6633 41.4018 13.5453C41.2977 13.4769 40.7209 13.3079 40.5585 13.255L37.771 12.3466C37.5539 12.2756 37.0049 12.1193 36.8227 12.022C36.7349 11.9751 36.6257 11.8713 36.5622 11.8182L35.9895 11.3386L33.3506 9.12465C33.168 8.97095 32.9277 8.71352 32.7053 8.57258C32.6032 8.50782 32.1493 8.38149 31.9913 8.32985L29.6152 7.55389C29.4998 7.51619 29.1549 7.42069 29.0832 7.38026C28.9442 7.30189 28.7255 7.0766 28.6143 6.9832L26.8269 5.48271C26.7712 5.43597 26.4324 5.13439 26.3937 5.11919C26.1966 5.04155 26.0024 5.05449 25.7498 4.9402C25.6223 4.85177 25.4684 4.7485 25.4287 4.65855C25.3892 4.56923 25.4442 4.51765 25.5284 4.47223ZM76.9342 36.6027C77.1233 36.5594 77.4977 36.5201 77.7684 36.5545C77.8871 36.5696 77.9589 36.5931 78.0635 36.6508C78.2923 36.7767 80.7153 38.8357 80.7289 38.891C80.7461 38.9604 80.7149 39.008 80.6293 39.0381C80.432 39.1076 81.1332 39.4877 81.1717 39.6358L80.8843 39.6581C80.8667 39.7401 81.1351 39.9243 81.2592 40.0282L83.9935 42.3224C84.038 42.3599 84.2818 42.5941 84.3279 42.6162C84.4598 42.6794 84.8173 42.7735 84.9758 42.825L87.663 43.7039C87.7869 43.7447 88.1789 43.8562 88.2706 43.9048C88.4575 44.004 88.6957 44.2412 88.8315 44.3549L97.7699 51.8495L98.0828 51.9095C98.2432 51.949 98.4739 52.0466 98.5807 52.1296C98.7129 52.2325 98.7329 52.3351 98.7283 52.4182C98.6406 52.4784 98.5187 52.5157 98.3194 52.5005C98.1774 52.4897 97.9618 52.4257 97.8239 52.3583C97.6201 52.2588 97.526 52.1401 97.4649 52.0335C97.4777 51.9568 97.5256 51.9248 97.6159 51.8792L97.648 51.8635L97.4959 51.7333L88.6484 44.3046C88.5539 44.2253 88.3646 44.0319 88.2441 43.9652C88.1586 43.9179 87.6803 43.7807 87.5497 43.738L84.8501 42.8554C84.7414 42.8196 84.3648 42.7113 84.2894 42.6702C84.2492 42.6483 84.1611 42.5626 84.1276 42.5345L81.3451 40.2017C81.1932 40.0743 80.953 39.8257 80.7621 39.7129C80.6317 39.636 80.4699 39.7177 80.2993 39.661L79.7589 39.2005C79.6849 39.1192 79.8329 39.1484 79.8664 39.0969L79.6046 39.0039C79.5629 38.9873 79.5213 38.9705 79.48 38.9534C79.3031 38.8658 77.0713 36.9889 76.9133 36.8033C76.8239 36.6984 76.8668 36.6617 76.9342 36.6027ZM46.0721 23.8191C46.686 23.7255 47.4427 23.7091 48.1198 23.664C48.4926 23.6392 48.891 23.5822 49.2972 23.5908C49.4546 23.5941 49.6432 23.6529 49.806 23.7267C50.0219 23.8246 50.3464 24.1134 50.4185 24.2252C50.4625 24.2931 50.4473 24.4002 50.3663 24.4266C50.1768 24.4886 49.7204 24.4806 49.4553 24.4986L47.9241 24.6C47.6727 24.6171 47.3893 24.6582 47.1081 24.6461C47.0191 24.6423 46.9299 24.6251 46.8315 24.6013C46.738 24.5579 46.6693 24.5285 46.5669 24.4976L46.543 24.6031C46.3417 24.6147 45.9716 24.6695 45.7387 24.6275L45.4605 24.4232C45.4281 24.4167 45.3945 24.4078 45.3633 24.4037C45.2331 24.3867 39.6584 24.7765 39.6276 24.7927C39.5901 24.8123 39.5892 24.8941 39.5764 24.9289L39.4046 25.4185C39.3954 25.4457 39.3871 25.5439 39.3578 25.5577C39.2999 25.585 39.0417 25.5862 38.9421 25.594L37.2959 25.7051L29.0295 26.2554L26.5806 26.4227L26.6192 26.5036C26.6607 26.6051 26.6301 26.6824 26.4974 26.7215C26.3974 26.7509 26.1656 26.7328 26.0046 26.6906C25.8662 26.6544 25.6756 26.5591 25.5729 26.4926C25.4057 26.3843 25.3914 26.2827 25.3845 26.1907C25.4696 26.1287 25.6171 26.0795 25.8293 26.1065C26.0456 26.1341 26.2435 26.2231 26.4344 26.3173L26.4925 26.3465C27.6011 26.2945 39.1387 25.5328 39.1926 25.5078C39.2637 25.4749 39.2699 25.3608 39.2875 25.305C39.3369 25.1496 39.3711 24.9862 39.443 24.8385C39.4579 24.8082 39.4861 24.7255 39.5255 24.7116C39.5688 24.6965 39.722 24.6979 39.7858 24.6934L40.537 24.6437C41.0753 24.6081 45.1958 24.3877 45.3161 24.2923L45.1166 24.1172C45.1439 24.0469 45.8035 24.0428 45.9814 24.0323C45.963 23.9413 45.9538 23.8823 46.0498 23.8301L46.0721 23.8191ZM92.7427 20.0186L92.9149 20.0036L95.3314 19.8396C95.4837 19.8295 95.8518 19.7777 96.0145 19.8032C96.1656 19.8269 96.415 19.9215 96.5697 19.9717L98.0316 20.4437L101.203 20.2301L101.209 20.0162C101.23 19.9459 101.32 19.911 101.462 19.9067C101.618 19.902 101.779 19.9254 101.966 19.9935C102.131 20.0536 102.272 20.1472 102.356 20.2322C102.452 20.3293 102.479 20.3862 102.429 20.4539C102.383 20.5172 102.253 20.556 102.097 20.5524C101.883 20.5473 101.571 20.4083 101.351 20.3202C101.041 20.2897 100.701 20.3471 100.431 20.3649L98.0967 20.528C97.5024 20.3882 96.7736 20.0969 96.171 19.9074C96.0862 19.8807 96.0824 19.878 95.9997 19.8739C95.7662 19.8623 95.5045 19.905 95.2933 19.9192L93.4517 20.0422C93.3244 20.0507 92.8721 20.0521 92.8108 20.0852C92.7442 20.1211 92.7459 20.2701 92.7255 20.3323L92.442 21.1914C92.4299 21.2275 92.4218 21.3466 92.3838 21.3648C92.3595 21.3765 92.2305 21.374 92.1831 21.3769L91.5977 21.4135L88.0265 21.6505L83.7657 21.9376C83.631 21.9741 83.9286 22.1065 83.9221 22.1945C83.7415 22.2077 83.2855 22.2754 83.0774 22.222L82.9652 22.1329L82.8731 22.1049L82.805 22.2741L80.5951 22.4292C80.2225 22.4543 79.6936 22.5467 79.2084 22.4311C79.0169 22.3612 78.9326 22.3064 78.8107 22.2073C78.6165 22.0495 78.3319 21.8495 78.3671 21.7148C78.4402 21.6722 78.5076 21.6488 78.6269 21.6341C78.9409 21.5955 81.6409 21.3987 81.8413 21.438C82.0431 21.4775 82.2255 21.5699 82.3884 21.6586C82.5102 21.7249 83.0916 21.6014 83.314 21.6484L83.5501 21.8318L83.655 21.8626L90.3279 21.4222L91.7189 21.3327C91.8509 21.3242 92.1258 21.3296 92.2172 21.3012C92.2873 21.2794 92.2925 21.1496 92.3095 21.0995L92.5324 20.4045C92.5724 20.2813 92.5809 20.1114 92.7221 20.0292L92.7427 20.0186ZM71.9389 36.9356C72.1221 36.9002 72.5163 36.8465 72.7786 36.8906C72.8888 36.9092 73.0567 36.9671 73.1509 37.0204C73.4667 37.199 73.785 37.5275 74.0208 37.7251L75.1232 38.6503C75.3407 38.8317 75.6768 39.0702 75.7722 39.2455C75.7545 39.2904 75.7447 39.3323 75.6836 39.3595C75.641 39.3784 75.6255 39.3922 75.6073 39.422L76.18 39.908C76.2738 40.0081 75.9531 39.9623 75.8955 40.0235L79.5606 43.0968C79.6232 43.1493 79.7527 43.241 79.792 43.2908C79.8221 43.3286 79.7515 43.4635 79.7393 43.5009C79.6918 43.6462 79.313 44.5757 79.3904 44.6723C79.4519 44.7491 79.6006 44.8555 79.6954 44.9349L80.3665 45.4977L83.2618 47.9306L85.5551 48.6793L86.4247 48.966C86.4693 48.9807 86.6129 49.0212 86.6412 49.0377C86.697 49.0701 86.7922 49.1667 86.8376 49.2056L87.4063 49.6854L90.5452 52.3253C90.7248 52.355 90.8828 52.3895 91.0662 52.4555C91.2416 52.5186 91.3425 52.6003 91.4367 52.689C91.56 52.8053 91.5181 52.8555 91.4743 52.934C91.3223 52.9784 91.1989 52.9922 90.9659 52.9681C90.8332 52.9286 90.697 52.8897 90.5781 52.829C90.4468 52.7622 90.3193 52.6683 90.2791 52.5934C90.2201 52.4833 90.2931 52.4143 90.3906 52.3576L90.4176 52.3427C90.1061 52.0349 89.6933 51.7159 89.3286 51.4097L87.3746 49.7691L86.8236 49.3009C86.7678 49.2533 86.6583 49.1393 86.5874 49.0984C86.4789 49.036 86.1176 48.9345 85.9852 48.8912L83.9579 48.2284C83.7463 48.159 83.4338 48.0763 83.2413 47.9934C83.1941 47.9731 83.1413 47.927 83.1127 47.9032C82.7677 47.617 79.2485 44.6914 79.234 44.6529C79.1945 44.5479 79.3083 44.3939 79.3393 44.3003L79.6653 43.2898L76.673 40.7783L76.0377 40.2468C75.9785 40.1972 75.8842 40.1008 75.8106 40.0567C75.7764 40.0363 75.7298 40.0228 75.6894 40.0058L75.4173 40.0291C75.2205 39.9625 75.0262 39.7273 74.8785 39.6146C74.8146 39.5657 74.7687 39.5304 74.7301 39.4805C74.7721 39.4695 74.8197 39.4621 74.872 39.4585L74.9265 39.4554C74.8722 39.3868 74.5671 39.3321 74.4528 39.262C74.2134 39.1152 73.9627 38.8601 73.7736 38.702L72.4704 37.6085C72.2686 37.4381 71.9421 37.199 71.858 37.034C71.8241 36.9674 71.8726 36.9659 71.9389 36.9356ZM59.2329 34.8309C59.613 34.7646 60.1482 34.7607 60.5787 34.7317C61.1486 34.6933 61.7212 34.6251 62.3242 34.6201C62.4338 34.6192 62.5412 34.6179 62.6761 34.6566C62.9502 34.7353 63.1028 34.8387 63.273 34.972C63.422 35.0888 63.6214 35.2645 63.5864 35.362C63.5678 35.4136 63.4824 35.449 63.3943 35.4658C63.1009 35.5216 62.7014 35.5249 62.3628 35.5475L60.5008 35.6684C60.4193 35.6725 60.2374 35.6887 60.1462 35.675C60.0656 35.6628 59.78 35.5513 59.682 35.5182C59.6403 35.5591 59.8115 35.6331 59.8251 35.7017C59.566 35.7075 59.3015 35.7167 59.0797 35.7528C59.0221 35.7621 59.0642 35.7637 58.9514 35.7337L58.6966 35.5197C58.2389 35.5063 57.7887 35.5693 57.372 35.597L53.8206 35.8309C53.747 35.8357 53.5921 35.8314 53.5454 35.849C53.4797 35.8738 53.4655 36.0266 53.4479 36.0789L53.171 36.9128C53.1599 36.9457 53.1473 37.0844 53.1074 37.0989C53.0222 37.1298 52.7276 37.1281 52.5998 37.1376L50.7583 37.2624L42.1048 37.8376L39.6492 38.005C39.6795 38.0875 39.6974 38.1693 39.6542 38.2321C39.6134 38.2913 39.4943 38.3312 39.3518 38.3301C39.2082 38.329 38.995 38.2631 38.8402 38.2035C38.6809 38.1422 38.5573 38.0472 38.4802 37.9655C38.4009 37.8814 38.412 37.8007 38.4679 37.7501C38.5279 37.6953 38.7354 37.6809 38.8955 37.6975C39.1126 37.7199 39.3314 37.8364 39.5278 37.927L52.9381 37.047C53.0374 36.9513 53.0522 36.8093 53.0905 36.6904L53.2981 36.0281C53.3206 35.9597 53.3443 35.8164 53.4374 35.7772C53.47 35.7635 53.6165 35.7646 53.6669 35.7611L54.4971 35.7051L58.514 35.4385C58.5865 35.375 58.4019 35.2898 58.3367 35.1897L59.181 35.1455L59.1651 35.1183C59.0889 34.9828 59.0678 34.9116 59.2074 34.8427L59.2329 34.8309ZM96.2878 15.1213L96.3547 15.1031C96.4789 15.0787 96.6438 15.0722 96.8332 15.1244C96.9471 15.1558 97.1735 15.241 97.2521 15.298C97.3943 15.401 97.4654 15.4821 97.4558 15.5713C97.4446 15.6762 97.342 15.7148 97.1632 15.7358C96.8572 15.6846 96.7142 15.6555 96.433 15.5087L96.3799 15.4804C95.2117 15.5083 94.1075 15.625 92.9891 15.6985C92.7807 15.7123 92.1218 15.7052 92.0359 15.7733C91.8735 15.9019 91.9584 16.4636 91.7098 16.5208C91.5982 16.5465 91.388 16.5456 91.2519 16.555L85.6109 16.9277C85.5642 16.9308 85.4238 16.9294 85.3945 16.942C85.2993 16.9826 85.2845 17.1811 85.26 17.2565C85.1547 17.5806 85.0918 17.929 84.91 18.2266C84.4515 18.2178 84.0128 18.2753 83.5919 18.3033L80.979 18.4785L80.0536 18.5432C79.9142 18.5531 79.7716 18.5466 79.7008 18.5989L79.9086 18.7782C79.8239 18.8465 79.4294 18.8365 79.242 18.8494C78.9276 18.8709 79.2111 18.9498 79.1643 19.0683C79.1433 19.1257 79.0756 19.1657 78.9715 19.1823C78.6897 19.2292 78.319 19.2334 78.0015 19.2548L75.9759 19.3899C75.8746 19.3958 75.7131 19.3781 75.5869 19.3503C75.4321 19.3162 75.3465 19.2752 75.2357 19.1999C75.0093 19.0464 74.6713 18.7684 74.6645 18.6311C74.8012 18.4796 75.4867 18.4937 75.8374 18.4705L77.625 18.3465C77.7522 18.3387 77.9623 18.3072 78.102 18.323C78.2037 18.3345 78.4451 18.4273 78.5555 18.4639L78.5965 18.4518C78.5216 18.3963 78.4884 18.3683 78.4643 18.3144C78.6566 18.2798 79.0234 18.2292 79.2834 18.2663L79.5673 18.4767C79.9819 18.5136 80.4498 18.4341 80.81 18.4102L83.928 18.2023L84.5241 18.1635C84.591 18.1598 84.7442 18.166 84.7877 18.1521C84.8567 18.1302 84.8764 17.9808 84.8933 17.9293L85.1464 17.1412C85.1697 17.0709 85.1896 16.9045 85.284 16.8677C85.3554 16.8398 85.6052 16.8422 85.7155 16.8348L90.6103 16.5125L91.3957 16.4574C91.4401 16.4538 91.5722 16.4535 91.6 16.4407C91.6698 16.4088 91.6738 16.3175 91.6913 16.2641L91.8408 15.8187C91.8543 15.7809 91.8609 15.7019 91.9257 15.6864C92.0861 15.648 92.4385 15.6554 92.6414 15.6423C93.1355 15.6105 96.1294 15.4629 96.2739 15.3849C96.2117 15.2728 96.2053 15.2121 96.2729 15.137L96.2878 15.1213ZM89.0474 35.7955C89.2549 35.7582 89.5074 35.7344 89.7657 35.7389C89.9207 35.7416 90.0559 35.7895 90.2206 35.8512C90.5764 36.0735 90.862 36.3544 91.1407 36.589C91.493 36.8856 92.8145 37.9127 92.8658 38.1473L92.868 38.1804L92.8734 38.2165C92.885 38.2981 93.3669 38.6569 93.4984 38.7677C93.5251 38.8703 93.2583 38.786 93.2253 38.8754L95.6876 40.9486L101.378 45.7182C101.508 45.827 101.759 46.0057 101.834 46.1084C101.876 46.1647 101.489 47.1686 101.451 47.2852C101.436 47.3306 101.35 47.4626 101.377 47.5117C101.396 47.5475 101.588 47.6862 101.64 47.7294L102.451 48.4089L107.434 52.5944C107.574 52.6124 107.745 52.6408 107.892 52.6913C108.027 52.7377 108.112 52.788 108.197 52.8552C108.374 52.9947 108.416 53.0552 108.391 53.1685C108.32 53.2087 108.238 53.2341 108.141 53.2594C107.919 53.2333 107.733 53.2118 107.509 53.104C107.362 53.0333 107.24 52.9433 107.19 52.861C107.115 52.738 107.168 52.6766 107.276 52.6121C107.324 52.583 107.285 52.5726 107.229 52.5213L106.297 51.7367L102.065 48.1848C101.949 48.0875 101.26 47.5451 101.238 47.4876C101.194 47.3789 101.303 47.2319 101.335 47.1355L101.681 46.0673L93.6653 39.3473C93.5131 39.2197 93.3212 39.0207 93.135 38.9022C93.1056 38.8836 93.0645 38.8704 93.0291 38.8545L92.7474 38.8696C92.5314 38.8037 92.2234 38.4741 92.0399 38.3474C91.9486 38.2844 91.839 38.2332 91.7255 38.1798C91.5806 38.1117 91.4816 38.0558 91.3708 37.9752C90.846 37.5932 90.3956 37.1698 89.931 36.7801C89.6597 36.5525 89.2306 36.2455 89.0577 36.0204C88.9698 35.906 88.9582 35.8597 89.0474 35.7955ZM69.5469 37.095C69.7318 37.0558 69.9903 37.0367 70.2283 37.0402C70.3675 37.0422 70.4733 37.0582 70.6321 37.1196C70.9546 37.2989 73.2578 39.2182 73.3499 39.407C73.3354 39.4829 73.2813 39.5105 73.1842 39.5521C73.1117 39.5831 73.7496 40.0239 73.7836 40.1312L73.5028 40.1472C73.4988 40.1639 73.4759 40.1768 73.4908 40.1975C73.5884 40.3323 73.9718 40.6011 74.1426 40.7444L76.3656 42.6107C76.3842 42.7971 76.2911 42.9649 76.2359 43.1297L75.9602 43.9503L82.0374 49.0429C82.061 49.158 81.9868 49.2695 81.9534 49.3696L81.7546 49.9625L86.5377 53.9761L86.6811 54.0074C86.8129 54.0346 86.9199 54.0513 87.0538 54.1022C87.2274 54.168 87.3494 54.256 87.4315 54.3458C87.5562 54.4822 87.5148 54.5287 87.4354 54.6128L87.2338 54.6509C87.0413 54.6272 86.8491 54.6039 86.6539 54.511C86.479 54.4277 86.3524 54.3354 86.2974 54.2391C86.2284 54.1186 86.284 54.0659 86.396 54.0053L86.4246 53.9903C85.924 53.5566 81.6494 50.028 81.6054 49.9318C81.5847 49.8867 81.6514 49.7899 81.6646 49.7491L81.8509 49.1664C81.8609 49.135 81.9163 49.0465 81.8995 49.0132C81.8877 48.9899 81.7162 48.8682 81.6782 48.8376L81.0686 48.3306L76.4323 44.4426C76.2763 44.3109 75.9017 44.0399 75.8175 43.9156C75.7667 43.8408 76.1948 42.7531 76.2448 42.604L73.3956 40.2177C73.1459 40.1165 73.1526 40.2219 72.9192 40.1604C72.7589 40.027 72.3842 39.7607 72.329 39.6405L72.4846 39.6161L72.4851 39.575L72.089 39.4556C71.4941 39.0252 70.9818 38.5448 70.4587 38.105C70.1629 37.8563 69.729 37.5421 69.519 37.2969C69.4302 37.1933 69.477 37.1511 69.5469 37.095ZM79.2835 36.4462C79.4855 36.407 79.7959 36.3678 80.0709 36.3952C80.178 36.4058 80.2474 36.4191 80.3521 36.4686C80.5925 36.5823 83.0136 38.593 83.066 38.719C83.1074 38.8181 83.0131 38.8616 82.9107 38.9061L82.8787 38.9195C83.0433 39.0543 83.4458 39.3372 83.5084 39.4585C83.5246 39.4899 83.2655 39.4956 83.2126 39.5221C83.3339 39.659 83.5244 39.8019 83.6872 39.9385L84.6067 40.7092L85.6045 41.5485C85.673 41.6074 85.8119 41.7566 85.8965 41.8019C85.9934 41.8537 86.3196 41.9438 86.452 41.9877L89.7187 43.0531C90.0491 43.161 90.6225 43.3181 90.9082 43.4566C91.0374 43.5193 95.0137 46.8966 95.4617 47.2737L96.0589 47.7776C96.0918 47.8055 96.1954 47.9056 96.2346 47.9263C96.2938 47.9576 96.5616 48.0326 96.6412 48.0585L98.3452 48.614C98.5478 48.6805 98.892 48.7784 99.0694 48.8631C99.1191 48.8868 99.2145 48.9729 99.2532 49.0039L99.9282 49.5678L102.959 52.1072C103.126 52.1363 103.29 52.1703 103.459 52.231C103.632 52.2929 103.743 52.3752 103.835 52.4628C103.949 52.571 103.926 52.6325 103.888 52.7085C103.823 52.7563 103.694 52.7822 103.546 52.7734C103.406 52.7651 103.199 52.7059 103.058 52.6404C102.886 52.5604 102.752 52.4418 102.693 52.35C102.617 52.2296 102.74 52.1839 102.839 52.1236C102.765 52.0203 99.1011 48.9548 99.0535 48.9293C98.9424 48.87 98.6607 48.7925 98.525 48.7484C98.1568 48.6288 96.383 48.0858 96.1591 47.9608C96.0978 47.9265 96.0055 47.8337 95.9539 47.7908L95.3613 47.2968L91.0561 43.6845C91.0043 43.641 90.8931 43.5281 90.8262 43.4916C90.7069 43.4265 90.2384 43.2985 90.0689 43.2432L86.7618 42.1631C86.6042 42.1115 85.9868 41.9288 85.8868 41.8691C85.694 41.754 85.5066 41.561 85.354 41.4327L83.6806 40.0262C83.5234 39.8944 83.2592 39.6275 83.0316 39.5197L82.7292 39.5355L82.6393 39.5051C82.5566 39.4346 82.0327 39.0079 82.0775 38.985C82.1407 38.9525 82.1995 38.9917 82.2148 38.9266C82.0734 38.8875 81.9612 38.854 81.823 38.801C81.5692 38.6247 81.3639 38.4387 81.1485 38.2584L80.0774 37.3589C79.8301 37.1509 79.3377 36.7994 79.2188 36.6012C79.172 36.5232 79.2116 36.4837 79.2835 36.4462Z" fill="white"/>
<path d="M48.0905 19.7313L51.6527 19.4865L66.9585 18.4656L71.2887 18.1821C71.5057 18.1729 71.7178 18.1793 71.9801 18.2228C72.4493 18.3006 72.9694 18.479 73.3751 18.7024C73.6576 18.858 73.8499 19.0295 74.0535 19.1984L74.9361 19.9369L89.3337 32.02L91.464 33.8029C91.6753 33.989 91.8265 34.1481 91.8867 34.3237C91.9803 34.5967 91.7767 34.7426 91.4494 34.8505C91.1359 34.9071 90.7518 34.9212 90.3964 34.9456L68.2081 36.421C67.9441 36.4317 67.6773 36.4223 67.3538 36.3588C66.866 36.2632 66.3063 36.0565 65.9186 35.8178C65.6725 35.6661 65.4766 35.4821 65.2859 35.322L47.8435 20.6806C47.6705 20.5289 47.5423 20.3611 47.5257 20.2263C47.4919 19.9515 47.7016 19.8207 48.0905 19.7313Z" fill="white" fill-opacity="0.4"/>
<path d="M87.8396 32.8902L89.0623 32.8081L90.4279 33.9572L89.2173 34.0398L87.8396 32.8902ZM71.2037 18.7512L72.2302 18.687L73.1239 19.435C73.2747 19.5614 73.4656 19.7024 73.5662 19.8283L73.4203 19.8497L72.3858 19.9211C72.1405 19.7156 71.0816 18.8974 71.0559 18.7639L71.2037 18.7512ZM68.2447 34.1967L69.4686 34.1125L70.8347 35.2639L69.6175 35.3461L68.2447 34.1967ZM85.4146 33.0518L86.6419 32.971L88.0076 34.1221L86.7829 34.2004L85.4146 33.0518ZM51.5694 20.0585L52.6349 19.9909L53.5411 20.7502C53.684 20.8703 53.8885 21.0183 53.9726 21.1363L53.8555 21.1548L52.7906 21.2257L51.8262 20.4207C51.7026 20.317 51.5133 20.1825 51.454 20.0829L51.5694 20.0585ZM68.7401 18.9152L69.8094 18.8485L70.781 19.6634C70.8871 19.7527 71.1196 19.9176 71.1367 19.997L71.0028 20.0128L69.9729 20.0783L69.9259 20.0563C69.7479 19.942 68.6515 19.0154 68.6271 18.9356L68.7401 18.9152ZM54.1921 19.8842L55.2649 19.8158L56.2132 20.607C56.339 20.7125 56.5538 20.8634 56.6072 20.9653L56.4834 20.9796L55.41 21.0487L54.5016 20.286C54.3573 20.1632 54.1634 20.0222 54.0855 19.9017L54.1921 19.8842ZM73.2898 33.8604L74.5268 33.7782L75.8874 34.9254L74.6694 35.0082L73.2898 33.8604ZM70.8771 34.0198L72.1059 33.9384L73.4684 35.0893L72.2451 35.1701L70.8771 34.0198ZM56.6353 19.7217L57.6909 19.6557L58.6662 20.4707C58.7728 20.5601 59.0051 20.7243 59.0239 20.8042L58.9311 20.8148L57.8394 20.8884L56.9281 20.1319C56.786 20.0132 56.5794 19.8653 56.501 19.7496L56.6353 19.7217ZM65.8134 34.3577L67.0438 34.2777L68.409 35.4265L67.1792 35.5083L65.8134 34.3577ZM49.1508 20.22L50.2113 20.1542L51.1723 20.9592C51.2909 21.0588 51.4936 21.2027 51.5428 21.2977L51.4369 21.3171L50.3524 21.3866C50.1264 21.2052 49.0502 20.3536 49.0299 20.2406L49.1508 20.22ZM80.7164 33.3648L81.9493 33.2817L83.3178 34.4336L82.0873 34.5149L80.7164 33.3648ZM64.0656 19.2257L65.1153 19.1598L66.0906 19.9756C66.2001 20.0675 66.4219 20.2245 66.4541 20.3091L66.3517 20.3227L65.259 20.3928L64.2916 19.5859C64.1668 19.4806 63.9804 19.3475 63.9234 19.2463L64.0656 19.2257ZM75.6511 33.7018L76.8912 33.6184L78.2556 34.7705L77.0194 34.8513L75.6511 33.7018ZM58.9826 19.5657L60.0563 19.4966L60.9608 20.2559C61.1028 20.3754 61.3088 20.5244 61.3902 20.6417L61.2831 20.6596L60.191 20.7301L59.2118 19.9084C59.1022 19.8162 58.8885 19.666 58.8661 19.5838L58.9826 19.5657ZM83.1114 33.2063L84.3603 33.1247L85.7207 34.2708L84.4763 34.353L83.1114 33.2063ZM78.0519 33.5418L79.3006 33.4604L80.6647 34.6084L79.4218 34.6902L78.0519 33.5418ZM66.4619 19.0663L67.5268 19.0035L68.5175 19.8317C68.6241 19.9218 68.8311 20.0681 68.8566 20.1489L68.7013 20.1655L67.6489 20.2343C67.427 20.0567 66.342 19.1965 66.3261 19.0886L66.4619 19.0663ZM61.4147 19.4024L62.4703 19.3386C62.6851 19.518 63.7868 20.3847 63.7925 20.4864L63.6546 20.5027L62.5923 20.5721L61.6011 19.7447C61.4909 19.6516 61.2852 19.5075 61.2631 19.4213L61.4147 19.4024ZM86.8474 31.3688L86.8505 31.3964C86.8518 31.6092 86.6867 31.79 86.3332 31.8443C86.0381 31.8896 85.6684 31.8969 85.3419 31.9186L67.3134 33.121C66.8715 33.1506 66.4334 33.1964 65.9694 33.2059C65.6387 33.2128 65.3106 33.157 64.9161 33.0436C64.3563 32.8827 63.8813 32.6441 63.5134 32.3634C62.7616 31.7895 62.0971 31.1877 61.4049 30.6071L54.075 24.4565C53.5368 24.0045 52.9135 23.5291 52.4542 23.0764C52.2283 22.8538 52.1151 22.6628 52.1552 22.4826C52.2079 22.2455 52.466 22.1112 52.9043 22.0684L56.9544 21.793L70.2396 20.9067C71.1195 20.8481 72.0097 20.7435 72.9472 20.7389C73.3057 20.7371 73.6657 20.7897 74.0886 20.9199C74.686 21.1029 75.0915 21.2916 75.4822 21.5985L77.6494 23.4094L84.892 29.4871C85.4298 29.9388 86.033 30.4065 86.5091 30.8593C86.7045 31.0451 86.8371 31.2051 86.8474 31.3688Z" fill="white"/>
<path d="M86.6146 31.2313C86.6438 31.4183 86.5906 31.5868 86.3608 31.6779C86.2522 31.7209 86.1263 31.7417 85.9748 31.7555L82.1551 32.0151L69.0023 32.8922L65.8667 33.093C65.6887 33.0987 65.4819 33.0755 65.2692 33.0339C64.8498 32.9517 64.328 32.7638 63.9914 32.5564C63.7135 32.3852 63.4976 32.194 63.2829 32.0142L62.3511 31.2334L55.0883 25.1388C54.3098 24.4859 53.4706 23.822 52.7496 23.1679C52.5665 23.0016 52.4006 22.8385 52.3672 22.6854C52.3196 22.4679 52.4634 22.2994 52.7785 22.2319C53.0571 22.1723 53.4178 22.1613 53.7456 22.1393L71.5824 20.95C72.0702 20.9175 72.5537 20.8657 73.0696 20.8592C73.4127 20.8549 73.7184 20.9122 74.1162 21.0086C74.5062 21.1473 74.8395 21.2773 75.1324 21.4825C75.7084 21.886 76.1934 22.3467 76.6889 22.7621L84.0941 28.9756C84.8437 29.605 85.6784 30.2554 86.356 30.8864C86.4877 31.0091 86.5537 31.1147 86.6146 31.2313Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_2_2157">
<rect width="79.8599" height="79.99" fill="white" transform="matrix(0.997787 -0.0664934 0.766044 0.642788 0.0188599 5.76196)"/>
</clipPath>
</defs>
</svg>

================
File: public/images/monthly-active-user.svg
================
<svg width="48" height="49" viewBox="0 0 48 49" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect y="0.129883" width="48" height="48" rx="24" fill="#68CC58"/>
<path d="M29.3333 22.7964C31.5467 22.7964 33.32 21.0097 33.32 18.7964C33.32 16.5831 31.5467 14.7964 29.3333 14.7964C27.12 14.7964 25.3333 16.5831 25.3333 18.7964C25.3333 21.0097 27.12 22.7964 29.3333 22.7964ZM18.6667 22.7964C20.88 22.7964 22.6533 21.0097 22.6533 18.7964C22.6533 16.5831 20.88 14.7964 18.6667 14.7964C16.4533 14.7964 14.6667 16.5831 14.6667 18.7964C14.6667 21.0097 16.4533 22.7964 18.6667 22.7964ZM18.6667 25.4631C15.56 25.4631 9.33334 27.0231 9.33334 30.1297V33.4631H28V30.1297C28 27.0231 21.7733 25.4631 18.6667 25.4631ZM29.3333 25.4631C28.9467 25.4631 28.5067 25.4897 28.04 25.5297C29.5867 26.6497 30.6667 28.1564 30.6667 30.1297V33.4631H38.6667V30.1297C38.6667 27.0231 32.44 25.4631 29.3333 25.4631Z" fill="#0F0F10"/>
</svg>

================
File: public/images/plan-organize.svg
================
<svg width="276" height="197" viewBox="0 0 276 197" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_2_2101)">
<g clip-path="url(#clip1_2_2101)">
<path d="M191.5 103.27V28.27H254.5" stroke="#80858F"/>
</g>
<path d="M191.5 103.27V170.27H232" stroke="#404245"/>
<g clip-path="url(#clip2_2_2101)">
<path d="M191.5 103.27V28.27H254.5" stroke="#404245"/>
</g>
<rect width="255" height="1" transform="translate(1 103.77)" fill="url(#paint0_linear_2_2101)"/>
<rect x="244.98" y="17.77" width="24.02" height="24" rx="12" fill="#1A1C1E"/>
<path d="M260.98 25.77H252.98C252.43 25.77 251.985 26.22 251.985 26.77L251.98 32.77C251.98 33.32 252.43 33.77 252.98 33.77H260.98C261.53 33.77 261.98 33.32 261.98 32.77V26.77C261.98 26.22 261.53 25.77 260.98 25.77ZM260.98 27.77L256.98 30.27L252.98 27.77V26.77L256.98 29.27L260.98 26.77V27.77Z" fill="#CFD1D5"/>
<rect x="245.48" y="18.27" width="23.02" height="23" rx="11.5" stroke="#2C2D30"/>
<rect x="179.01" y="156.78" width="24" height="24" rx="12" fill="#1A1C1E"/>
<path d="M194.99 98.76H186.99C186.44 98.76 185.995 99.21 185.995 99.76L185.99 105.76C185.99 106.31 186.44 106.76 186.99 106.76H194.99C195.54 106.76 195.99 106.31 195.99 105.76V99.76C195.99 99.21 195.54 98.76 194.99 98.76ZM194.99 100.76L190.99 103.26L186.99 100.76V99.76L190.99 102.26L194.99 99.76V100.76Z" fill="#CFD1D5"/>
<rect width="24" height="24" transform="translate(180.01 90.77)" fill="#1A1C1E"/>
<rect x="86" y="64.77" width="74" height="74" rx="37" fill="#1A1C1E"/>
<rect x="112" y="88.77" width="4" height="3.98" rx="1.99" fill="#CFD1D5"/>
<rect x="109" y="98.77" width="6" height="5.98" rx="2.99" fill="#CFD1D5"/>
<rect x="112" y="110.78" width="4" height="3.98" rx="1.99" fill="#CFD1D5"/>
<rect x="120.73" y="85.77" width="6" height="5.98" rx="2.99" fill="#CFD1D5"/>
<rect x="119.73" y="97.77" width="8" height="7.98" rx="3.99" fill="#CFD1D5"/>
<rect x="120.73" y="111.78" width="6" height="5.98" rx="2.99" fill="#CFD1D5"/>
<rect x="131" y="88.77" width="5" height="4.98" rx="2.49" fill="#CFD1D5"/>
<rect x="133" y="98.77" width="6" height="5.98" rx="2.99" fill="#CFD1D5"/>
<rect x="131" y="109.78" width="5" height="4.98" rx="2.49" fill="#CFD1D5"/>
<rect x="86.5" y="65.27" width="73" height="73" rx="36.5" stroke="#2C2D30"/>
<rect x="226" y="74.77" width="50" height="50" rx="25" fill="#1A1C1E"/>
<path d="M255 98.77C256.66 98.77 257.99 97.43 257.99 95.77C257.99 94.11 256.66 92.77 255 92.77C253.34 92.77 252 94.11 252 95.77C252 97.43 253.34 98.77 255 98.77ZM247 98.77C248.66 98.77 249.99 97.43 249.99 95.77C249.99 94.11 248.66 92.77 247 92.77C245.34 92.77 244 94.11 244 95.77C244 97.43 245.34 98.77 247 98.77ZM247 100.77C244.67 100.77 240 101.94 240 104.27V106.77H254V104.27C254 101.94 249.33 100.77 247 100.77ZM255 100.77C254.71 100.77 254.38 100.79 254.03 100.82C255.19 101.66 256 102.79 256 104.27V106.77H262V104.27C262 101.94 257.33 100.77 255 100.77Z" fill="#CFD1D5"/>
<rect x="226.5" y="75.27" width="49" height="49" rx="24.5" stroke="#2C2D30"/>
<rect x="226" y="146.77" width="50" height="50" rx="25" fill="#1A1C1E"/>
<path d="M255 170.77C256.66 170.77 257.99 169.43 257.99 167.77C257.99 166.11 256.66 164.77 255 164.77C253.34 164.77 252 166.11 252 167.77C252 169.43 253.34 170.77 255 170.77ZM247 170.77C248.66 170.77 249.99 169.43 249.99 167.77C249.99 166.11 248.66 164.77 247 164.77C245.34 164.77 244 166.11 244 167.77C244 169.43 245.34 170.77 247 170.77ZM247 172.77C244.67 172.77 240 173.94 240 176.27V178.77H254V176.27C254 173.94 249.33 172.77 247 172.77ZM255 172.77C254.71 172.77 254.38 172.79 254.03 172.82C255.19 173.66 256 174.79 256 176.27V178.77H262V176.27C262 173.94 257.33 172.77 255 172.77Z" fill="#CFD1D5"/>
<rect x="226.5" y="147.27" width="49" height="49" rx="24.5" stroke="#2C2D30"/>
<rect x="226" y="1.77002" width="50" height="50" rx="25" fill="#1A1C1E"/>
<path d="M255 25.77C256.66 25.77 257.99 24.43 257.99 22.77C257.99 21.11 256.66 19.77 255 19.77C253.34 19.77 252 21.11 252 22.77C252 24.43 253.34 25.77 255 25.77ZM247 25.77C248.66 25.77 249.99 24.43 249.99 22.77C249.99 21.11 248.66 19.77 247 19.77C245.34 19.77 244 21.11 244 22.77C244 24.43 245.34 25.77 247 25.77ZM247 27.77C244.67 27.77 240 28.94 240 31.27V33.77H254V31.27C254 28.94 249.33 27.77 247 27.77ZM255 27.77C254.71 27.77 254.38 27.79 254.03 27.82C255.19 28.66 256 29.79 256 31.27V33.77H262V31.27C262 28.94 257.33 27.77 255 27.77Z" fill="#CFD1D5"/>
<rect x="226.5" y="2.27002" width="49" height="49" rx="24.5" stroke="#2C2D30"/>
</g>
<defs>
<linearGradient id="paint0_linear_2_2101" x1="0" y1="0.5" x2="255" y2="0.5" gradientUnits="userSpaceOnUse">
<stop stop-color="#131316"/>
<stop offset="1" stop-color="#5A616E"/>
</linearGradient>
<clipPath id="clip0_2_2101">
<rect width="276" height="196" fill="white" transform="translate(0 0.77002)"/>
</clipPath>
<clipPath id="clip1_2_2101">
<rect width="64" height="76" fill="white" transform="translate(191 27.77)"/>
</clipPath>
<clipPath id="clip2_2_2101">
<rect width="64" height="76" fill="white" transform="translate(191 27.77)"/>
</clipPath>
</defs>
</svg>

================
File: public/images/sage.svg
================
<svg width="84" height="35" viewBox="0 0 84 35" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="svg8752602191" clip-path="url(#clip0_2_1564)">
<path id="Vector" d="M3.17301 31.16C3.50801 30.12 4.61801 30.073 5.44301 29.574C5.11201 29.315 4.77701 29.068 4.46701 28.784C2.46601 26.951 1.23301 24.531 0.880009 21.854C0.530009 19.203 1.46001 16.036 3.09901 13.943C5.45001 10.941 9.43701 9.13398 13.279 9.38698C16.204 9.58098 19.133 10.95 21.047 13.158L21.354 13.529C21.436 13.635 21.621 13.831 21.673 13.916L21.681 13.93C21.711 13.681 21.702 13.424 21.702 13.173L21.704 7.55598C21.705 7.37398 21.695 7.18398 21.717 7.00298L18.931 6.98798C18.816 6.98798 18.694 6.99698 18.58 6.98198C18.71 6.70698 18.953 6.45898 19.147 6.22598L22.092 2.56998C22.534 2.01398 22.951 1.42698 23.436 0.906982C23.561 1.01998 23.673 1.19098 23.779 1.32198L28.121 6.70498C28.187 6.79198 28.218 6.88498 28.298 6.96198L28.316 6.97998C28.23 6.99798 28.121 6.98598 28.031 6.98598L25.064 6.99398L25.059 18.43C25.046 19.449 24.804 20.422 24.203 21.27C23.961 21.612 24.002 21.886 23.944 22.288C23.607 24.649 22.559 26.809 20.856 28.495C20.46 28.887 20.017 29.221 19.617 29.605L20.454 29.934C20.773 30.059 21.116 30.186 21.389 30.396C22.652 31.365 21.911 33.315 20.427 33.393C19.033 33.466 17.28 32.244 16.316 31.384L15.998 31.506C13.945 32.262 10.77 32.297 8.72301 31.382C8.46701 31.688 8.11601 31.919 7.78501 32.14C6.76901 32.82 5.10201 33.873 3.90201 33.097C3.21701 32.655 3.01101 31.915 3.17301 31.16ZM11.998 12.736C11.137 12.808 10.288 12.975 9.48001 13.283C3.81401 15.439 2.26501 22.633 7.04201 26.574L7.78101 27.129C8.78801 25.572 8.94201 24.335 8.59501 22.595C8.36701 22.815 8.14701 23.058 7.84701 23.182C7.62101 23.009 7.45101 22.753 7.27901 22.53L5.92601 20.644L9.18301 17.908C9.34301 17.772 9.50101 17.631 9.68501 17.528C9.83801 17.744 9.94801 17.972 10.071 18.205L10.438 18.858C11.035 19.893 11.604 20.964 11.885 22.131C12.347 24.044 12.019 26.427 11.068 28.129C10.983 28.28 10.898 28.446 10.784 28.578L11.565 28.681C11.78 28.703 11.996 28.704 12.211 28.706L12.851 28.704C12.936 28.702 13.053 28.683 13.132 28.706L14.033 28.559C14.012 28.476 13.942 28.383 13.9 28.306L13.699 27.9C12.575 25.467 12.439 23.081 13.486 20.582C13.705 20.06 13.973 19.565 14.236 19.064L14.67 18.231C14.77 18.035 14.864 17.833 14.98 17.645L15.082 17.498C15.223 17.473 16.709 18.743 16.908 18.903C17.374 19.278 18.664 20.229 18.98 20.666L17.606 22.497C17.428 22.734 17.254 23.035 17.038 23.237C16.766 23.073 16.535 22.853 16.286 22.658C16.114 23.336 16.037 24.091 16.139 24.788C16.239 25.477 16.647 26.761 17.163 27.245C18.214 26.492 19.163 25.532 19.782 24.398C22.79 18.885 18.172 12.317 11.998 12.736Z" fill="white"/>
<path id="Vector_2" d="M43.429 27.797C42.138 27.797 41.064 27.471 40.207 26.82C39.349 26.169 38.699 25.268 38.256 24.118C37.814 22.968 37.556 21.633 37.482 20.114L40.248 19.235C40.303 20.168 40.428 21.069 40.622 21.937C40.815 22.805 41.133 23.516 41.576 24.069C42.018 24.622 42.636 24.899 43.429 24.899C44.24 24.899 44.853 24.633 45.268 24.102C45.683 23.57 45.891 22.805 45.891 21.807C45.891 20.613 45.66 19.652 45.199 18.926C44.738 18.198 44.157 17.466 43.457 16.728L39.695 12.822C38.957 12.063 38.413 11.232 38.063 10.332C37.712 9.43098 37.537 8.31798 37.537 6.99398C37.537 5.06298 38.008 3.56598 38.948 2.50198C39.889 1.43898 41.17 0.906982 42.793 0.906982C43.678 0.906982 44.457 1.04298 45.13 1.31398C45.803 1.58598 46.366 2.00298 46.817 2.56698C47.269 3.13198 47.628 3.84198 47.896 4.69898C48.163 5.55698 48.343 6.56098 48.435 7.71098L45.78 8.55698C45.724 7.68898 45.614 6.89198 45.448 6.16398C45.282 5.43798 44.992 4.85198 44.577 4.40598C44.162 3.96198 43.567 3.73998 42.793 3.73998C42.018 3.73998 41.415 3.98298 40.981 4.47198C40.547 4.95998 40.331 5.68098 40.331 6.63698C40.331 7.43998 40.446 8.10098 40.677 8.62198C40.908 9.14298 41.281 9.67498 41.797 10.217L45.586 14.124C46.435 14.992 47.181 16.028 47.827 17.233C48.472 18.437 48.795 19.864 48.795 21.514C48.795 22.815 48.565 23.939 48.103 24.883C47.642 25.827 47.011 26.549 46.209 27.048C45.406 27.547 44.48 27.797 43.429 27.797ZM53.386 27.764C52.759 27.764 52.206 27.552 51.726 27.129C51.247 26.706 50.869 26.163 50.593 25.502C50.316 24.839 50.177 24.139 50.177 23.402C50.177 22.23 50.344 21.242 50.676 20.439C51.007 19.636 51.464 18.958 52.044 18.404C52.625 17.851 53.298 17.368 54.064 16.956C54.829 16.544 55.635 16.142 56.484 15.751V14.417C56.484 13.657 56.447 13.028 56.373 12.528C56.3 12.029 56.147 11.655 55.917 11.405C55.686 11.156 55.341 11.031 54.879 11.031C54.474 11.031 54.147 11.14 53.898 11.357C53.649 11.574 53.469 11.883 53.359 12.285C53.248 12.687 53.193 13.158 53.193 13.701V14.645L50.261 14.515C50.297 12.431 50.703 10.896 51.478 9.90798C52.252 8.92098 53.451 8.42698 55.073 8.42698C56.659 8.42698 57.784 8.93698 58.448 9.95698C59.112 10.977 59.443 12.453 59.443 14.385V22.979C59.443 23.564 59.457 24.129 59.485 24.671C59.513 25.214 59.549 25.719 59.595 26.185C59.642 26.651 59.683 27.091 59.72 27.503H57.009C56.954 27.156 56.885 26.717 56.802 26.185C56.719 25.653 56.659 25.17 56.622 24.737C56.438 25.474 56.083 26.163 55.558 26.803C55.032 27.444 54.308 27.764 53.386 27.764ZM54.548 24.769C54.843 24.769 55.12 24.671 55.378 24.476C55.635 24.281 55.866 24.058 56.069 23.809C56.272 23.559 56.41 23.358 56.484 23.206V17.868C56.023 18.171 55.59 18.475 55.184 18.779C54.778 19.083 54.423 19.403 54.119 19.739C53.815 20.076 53.575 20.456 53.4 20.879C53.224 21.302 53.137 21.785 53.137 22.327C53.137 23.087 53.257 23.684 53.497 24.118C53.736 24.552 54.087 24.769 54.548 24.769ZM66.524 33.396C65.547 33.396 64.666 33.271 63.883 33.021C63.099 32.772 62.481 32.386 62.029 31.866C61.578 31.345 61.352 30.661 61.352 29.815C61.352 29.164 61.481 28.594 61.739 28.106C61.997 27.617 62.329 27.2 62.735 26.852C63.14 26.505 63.565 26.234 64.007 26.039L65.39 26.267C65.15 26.527 64.92 26.792 64.699 27.064C64.477 27.335 64.293 27.617 64.145 27.91C63.998 28.203 63.924 28.523 63.924 28.871C63.924 29.435 64.132 29.858 64.546 30.14C64.962 30.422 65.703 30.563 66.773 30.563C67.824 30.563 68.603 30.417 69.11 30.124C69.617 29.831 69.871 29.37 69.871 28.74C69.871 28.35 69.806 28.03 69.678 27.78C69.548 27.531 69.327 27.33 69.013 27.178C68.7 27.026 68.248 26.917 67.658 26.852L64.173 26.332C63.454 26.223 62.919 25.951 62.569 25.518C62.218 25.084 62.043 24.606 62.043 24.086C62.043 23.304 62.232 22.642 62.61 22.099C62.989 21.557 63.5 20.95 64.145 20.276L65.141 21.188C65.031 21.362 64.892 21.606 64.726 21.921C64.56 22.235 64.477 22.545 64.477 22.848C64.477 23.087 64.583 23.282 64.795 23.434C65.008 23.586 65.344 23.684 65.805 23.727L68.488 24.021C69.741 24.15 70.673 24.596 71.282 25.355C71.89 26.115 72.194 27.2 72.194 28.61C72.194 29.652 71.987 30.531 71.572 31.247C71.157 31.963 70.534 32.501 69.705 32.859C68.875 33.217 67.815 33.396 66.524 33.396ZM66.635 21.709C65.547 21.709 64.662 21.427 63.979 20.862C63.297 20.298 62.795 19.517 62.472 18.519C62.149 17.521 61.988 16.381 61.988 15.1C61.988 13.646 62.163 12.426 62.514 11.439C62.864 10.451 63.385 9.70198 64.077 9.19198C64.768 8.68198 65.62 8.42698 66.635 8.42698C67.686 8.42698 68.543 8.73598 69.207 9.35498C69.871 9.97398 70.359 10.793 70.673 11.813C70.986 12.833 71.143 13.961 71.143 15.198C71.143 16.479 71 17.613 70.715 18.6C70.428 19.587 69.959 20.352 69.304 20.895C68.649 21.438 67.76 21.709 66.635 21.709ZM66.635 19.203C67.041 19.203 67.363 19.11 67.603 18.926C67.843 18.741 68.023 18.475 68.142 18.128C68.262 17.781 68.345 17.352 68.391 16.842C68.437 16.332 68.46 15.751 68.46 15.1C68.46 14.45 68.442 13.863 68.405 13.343C68.368 12.822 68.285 12.382 68.156 12.024C68.027 11.666 67.843 11.389 67.603 11.194C67.363 10.999 67.049 10.901 66.662 10.901C66.256 10.901 65.93 10.993 65.681 11.178C65.432 11.363 65.238 11.634 65.1 11.992C64.962 12.35 64.869 12.789 64.823 13.31C64.777 13.831 64.754 14.428 64.754 15.1C64.754 15.687 64.777 16.229 64.823 16.728C64.869 17.228 64.957 17.662 65.086 18.03C65.215 18.399 65.404 18.687 65.653 18.893C65.902 19.099 66.229 19.203 66.635 19.203ZM70.59 11.845L69.898 10.543C70.046 10.24 70.378 9.85898 70.894 9.40398C71.411 8.94798 71.964 8.56798 72.554 8.26398L73.328 10.543C73.07 10.608 72.725 10.728 72.291 10.901C71.858 11.075 71.466 11.254 71.115 11.439C70.765 11.622 70.59 11.758 70.59 11.845ZM78.777 27.764C77.523 27.764 76.555 27.476 75.873 26.901C75.191 26.326 74.716 25.48 74.449 24.362C74.181 23.245 74.048 21.872 74.048 20.244V15.947C74.048 14.276 74.186 12.887 74.462 11.78C74.739 10.673 75.223 9.83798 75.914 9.27398C76.606 8.70898 77.56 8.42698 78.777 8.42698C80.123 8.42698 81.114 8.75198 81.75 9.40398C82.386 10.055 82.806 10.993 83.009 12.22C83.211 13.446 83.313 14.916 83.313 16.631V18.161H77.007V21.937C77.007 22.697 77.067 23.315 77.187 23.792C77.306 24.27 77.5 24.622 77.767 24.851C78.035 25.078 78.381 25.192 78.805 25.192C79.247 25.192 79.584 25.068 79.814 24.818C80.045 24.568 80.201 24.21 80.284 23.744C80.368 23.277 80.409 22.729 80.409 22.099V20.96H83.285V21.676C83.285 23.564 82.944 25.051 82.262 26.136C81.58 27.221 80.418 27.764 78.777 27.764ZM77.007 16.273H80.409V14.58C80.409 13.798 80.372 13.142 80.298 12.61C80.225 12.079 80.072 11.677 79.842 11.405C79.612 11.134 79.247 10.999 78.75 10.999C78.27 10.999 77.906 11.129 77.657 11.389C77.408 11.65 77.237 12.089 77.145 12.708C77.053 13.327 77.007 14.178 77.007 15.263V16.273Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_2_1564">
<rect width="84" height="34" fill="white" transform="translate(0 0.280029)"/>
</clipPath>
</defs>
</svg>

================
File: public/images/terra.svg
================
<svg width="102" height="48" viewBox="0 0 102 48" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="svg11130043360" clip-path="url(#clip0_2_1498)">
<path id="Vector" d="M17.635 2.47297L16.989 2.48397C17.198 2.13797 17.276 1.63297 17.482 1.24597C17.851 1.67197 17.899 2.18197 18.144 2.44597L17.635 2.47297Z" fill="white"/>
<path id="Vector_2" d="M9.73301 23.088L8.06601 22.452C7.62301 22.304 7.06501 22.295 6.76401 21.897C6.45101 21.483 6.18301 21.02 5.93601 20.564C2.88901 14.933 4.25001 7.96803 8.28501 3.22803C8.63201 2.82103 8.98901 2.32703 9.41601 2.00403L9.48601 2.03903C9.90501 2.25103 10.216 2.60403 10.568 2.90603L11.989 4.16203C12.2 4.36303 13.933 6.11903 13.937 6.34503C13.937 6.35103 13.886 6.42403 13.881 6.43103L12.068 9.46003C10.093 13.112 9.20801 17.32 9.90201 21.449C10.007 22.076 10.199 22.681 10.297 23.309L9.73301 23.088Z" fill="white"/>
<path id="Vector_3" d="M25.564 23.061L24.928 23.292L25.195 22.12C26.424 16.202 24.418 11.381 21.357 6.55704C21.331 6.51604 21.219 6.35304 21.23 6.31304C21.416 5.65504 24.703 2.68004 25.725 2.04504C26.138 2.28404 26.499 2.72404 26.805 3.08504C31.117 8.18904 32.381 15.573 28.771 21.429C28.428 21.986 28.324 22.104 27.711 22.299L25.564 23.061Z" fill="white"/>
<path id="Vector_4" d="M17.638 30.2271H17.574C17.429 30.0511 17.312 29.8181 17.193 29.6221L16.404 28.2931C15.978 27.5621 15.549 26.8311 15.194 26.0621C12.794 20.8621 13.42 14.7021 16.566 9.95708C16.852 9.52608 17.163 9.02008 17.56 8.69008L17.631 8.67908C18.128 9.19608 18.51 9.83508 18.868 10.4541C20.663 13.5591 21.745 17.0991 21.425 20.7181C21.185 23.4241 20.142 25.9281 18.818 28.2691L17.638 30.2271Z" fill="white"/>
<path id="Vector_5" d="M14.171 38.15L12.723 38.234C9.344 38.242 6.26 37.186 3.814 34.731C1.582 32.49 0.265003 29.099 0.259003 25.929C0.723003 25.77 1.2 25.743 1.685 25.718C5.137 25.656 8.224 26.435 10.928 28.762C13.476 30.954 15.32 34.565 15.586 37.966L14.171 38.15Z" fill="white"/>
<path id="Vector_6" d="M22.76 38.234L19.595 37.979C19.671 36.238 20.817 33.22 21.683 31.808C23.87 28.239 27.701 25.989 31.862 25.719C32.91 25.682 33.943 25.703 34.982 25.832V25.886C34.978 26.481 34.892 27.094 34.8 27.681C33.838 33.861 29.156 38.27 22.76 38.234Z" fill="white"/>
<path id="Vector_7" d="M18.516 47.2621L15.961 47.2441V43.9611C15.961 43.3671 15.915 42.7281 15.988 42.1411L16.809 42.1111L19.255 42.1181L19.266 47.2581L18.516 47.2621Z" fill="white"/>
<path id="Vector_8" d="M51.776 37.134V14.512H47.535V11.895H59.392V14.512H55.274V37.134H51.776ZM64.531 37.383C63.128 37.383 62.044 37.108 61.281 36.558C60.517 36.007 59.985 35.197 59.686 34.127C59.387 33.057 59.237 31.743 59.237 30.186V26.072C59.237 24.473 59.392 23.143 59.701 22.084C60.011 21.024 60.553 20.225 61.327 19.684C62.101 19.144 63.169 18.875 64.531 18.875C66.038 18.875 67.147 19.186 67.859 19.81C68.571 20.432 69.041 21.331 69.268 22.504C69.495 23.678 69.609 25.086 69.609 26.727V28.191H62.55V31.806C62.55 32.533 62.617 33.125 62.751 33.582C62.885 34.039 63.102 34.376 63.401 34.595C63.7 34.813 64.088 34.922 64.562 34.922C65.058 34.922 65.434 34.802 65.692 34.563C65.95 34.325 66.126 33.982 66.218 33.535C66.311 33.089 66.358 32.564 66.358 31.962V30.871H69.577V31.556C69.577 33.364 69.196 34.787 68.432 35.826C67.668 36.864 66.368 37.383 64.531 37.383ZM62.55 26.384H66.358V24.764C66.358 24.016 66.316 23.387 66.234 22.879C66.151 22.369 65.981 21.985 65.723 21.726C65.465 21.466 65.058 21.336 64.5 21.336C63.963 21.336 63.556 21.461 63.277 21.71C62.999 21.959 62.808 22.38 62.705 22.972C62.602 23.564 62.55 24.38 62.55 25.418V26.384ZM72.705 37.134V19.124H76.017V21.679C76.678 20.578 77.338 19.84 77.999 19.467C78.659 19.092 79.32 18.906 79.98 18.906C80.063 18.906 80.14 18.906 80.212 18.906C80.284 18.906 80.383 18.916 80.506 18.937V22.614C80.259 22.51 79.974 22.422 79.655 22.349C79.335 22.276 79.01 22.24 78.679 22.24C78.164 22.24 77.694 22.359 77.271 22.598C76.848 22.837 76.43 23.299 76.017 23.984V37.134H72.705ZM82.642 37.134V19.124H85.955V21.679C86.615 20.578 87.276 19.84 87.937 19.467C88.597 19.092 89.258 18.906 89.918 18.906C90.001 18.906 90.078 18.906 90.15 18.906C90.222 18.906 90.32 18.916 90.444 18.937V22.614C90.196 22.51 89.913 22.422 89.593 22.349C89.273 22.276 88.948 22.24 88.618 22.24C88.101 22.24 87.632 22.359 87.209 22.598C86.786 22.837 86.368 23.299 85.955 23.984V37.134H82.642ZM94.902 37.383C94.2 37.383 93.582 37.181 93.045 36.776C92.508 36.371 92.085 35.851 91.775 35.218C91.466 34.584 91.311 33.914 91.311 33.208C91.311 32.086 91.497 31.141 91.868 30.372C92.24 29.604 92.751 28.955 93.401 28.425C94.051 27.895 94.805 27.433 95.661 27.038C96.517 26.643 97.42 26.259 98.37 25.886V24.608C98.37 23.881 98.329 23.278 98.247 22.8C98.163 22.323 97.993 21.964 97.736 21.726C97.477 21.487 97.091 21.367 96.574 21.367C96.12 21.367 95.754 21.471 95.475 21.679C95.196 21.887 94.996 22.183 94.871 22.567C94.748 22.951 94.686 23.403 94.686 23.923V24.826L91.404 24.702C91.445 22.707 91.9 21.238 92.766 20.292C93.633 19.347 94.975 18.875 96.791 18.875C98.566 18.875 99.825 19.363 100.568 20.339C101.311 21.315 101.683 22.728 101.683 24.576V32.803C101.683 33.364 101.698 33.904 101.729 34.423C101.76 34.942 101.801 35.425 101.853 35.872C101.905 36.319 101.951 36.739 101.993 37.134H98.959C98.896 36.802 98.819 36.381 98.726 35.872C98.633 35.363 98.566 34.901 98.525 34.486C98.319 35.192 97.921 35.851 97.333 36.464C96.745 37.077 95.934 37.383 94.902 37.383ZM96.203 34.517C96.533 34.517 96.843 34.423 97.131 34.236C97.42 34.049 97.679 33.836 97.906 33.598C98.132 33.359 98.287 33.166 98.37 33.021V27.911C97.854 28.202 97.369 28.493 96.915 28.783C96.46 29.074 96.063 29.381 95.723 29.703C95.382 30.025 95.115 30.388 94.918 30.793C94.722 31.198 94.624 31.661 94.624 32.18C94.624 32.907 94.758 33.478 95.026 33.894C95.295 34.309 95.687 34.517 96.203 34.517Z" fill="white"/>
</g>
<defs>
<clipPath id="clip0_2_1498">
<rect width="102" height="47" fill="white" transform="translate(0 0.780029)"/>
</clipPath>
</defs>
</svg>

================
File: public/images/twitter.svg
================
<?xml version="1.0" ?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Layer_1" width="24px" height="24px" viewBox="0 0 24 24" style="" xml:space="preserve"><path d="M14.095479,10.316482L22.286354,1h-1.940718l-7.115352,8.087682L7.551414,1H1l8.589488,12.231093L1,23h1.940717  l7.509372-8.542861L16.448587,23H23L14.095479,10.316482z M11.436522,13.338465l-0.871624-1.218704l-6.924311-9.68815h2.981339  l5.58978,7.82155l0.867949,1.218704l7.26506,10.166271h-2.981339L11.436522,13.338465z" fill="white"/></svg>

================
File: public/images/vital.svg
================
<svg width="111" height="42" viewBox="0 0 111 42" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="svg11965005761">
<path id="Vector" d="M29.237 33.222L23.713 37.092C21.534 38.672 20.44 38.557 18.395 37.107L5.369 28.031C2.694 26.227 2.705 25.76 2.704 22.442L2.703 14.008C2.706 8.76603 6.573 4.28103 11.91 3.99103L13.175 3.98803C15.326 4.07403 17.718 5.11902 19.348 6.46703C19.943 6.95802 20.47 7.52203 20.992 8.08803C22.507 6.28503 24.489 4.95403 26.765 4.32603C30.795 3.21503 35.059 4.75603 37.518 8.15003C38.231 9.13303 38.893 10.682 39.126 11.88C39.387 13.221 39.318 14.606 39.318 15.965L39.316 23.279C39.316 23.776 39.355 24.309 39.274 24.799C39.006 26.425 38.058 27.119 36.789 27.955L29.237 33.222ZM8.325 11.693C7.397 11.772 6.661 12.479 6.758 13.452C6.852 14.395 7.648 14.742 8.337 15.219L19.258 22.852C20.832 23.97 21.466 23.753 23.08 22.676L33.827 15.181L34.588 14.653C36.473 13.226 34.418 10.64 32.383 12.183L31.639 12.756L21.413 19.881C21.298 19.965 21.184 20.058 21.058 20.124L10.537 12.773C9.869 12.301 9.201 11.664 8.325 11.693ZM34.199 20.661C33.54 20.723 33.127 21.134 32.611 21.501L29.085 23.925L22.557 28.461C22.384 28.582 21.074 29.546 20.997 29.523C20.965 29.513 20.892 29.445 20.862 29.423L10.361 22.074C9.788 21.667 8.838 20.866 8.152 20.697C6.498 20.288 5.388 22.431 6.81 23.581L7.848 24.33L18.666 31.875C19.86 32.713 20.815 33.591 22.335 32.635L34.739 23.956C35.464 23.45 36.157 23.037 35.928 21.935C35.769 21.169 34.97 20.608 34.199 20.661Z" fill="white"/>
<path id="Vector_2" d="M105.275 12.88L103.368 12.546V11.155L108.135 10.589H108.188L108.884 11.078V29.951L110.765 30.157V31.702H103.471V30.157L105.275 29.925V12.88Z" fill="white"/>
<path id="Vector_3" d="M89.156 27.685C89.156 26.123 89.938 24.947 91.501 24.158C93.082 23.368 95.118 22.965 97.61 22.948V22.356C97.61 21.652 97.533 21.102 97.378 20.708C97.24 20.313 96.974 20.021 96.578 19.832C96.201 19.626 95.642 19.523 94.903 19.523C94.062 19.523 93.305 19.635 92.635 19.858C91.965 20.064 91.269 20.339 90.548 20.682L89.749 19.034C90.006 18.811 90.436 18.545 91.037 18.236C91.656 17.927 92.386 17.661 93.228 17.438C94.07 17.197 94.938 17.077 95.831 17.077C97.154 17.077 98.186 17.249 98.924 17.592C99.68 17.936 100.222 18.485 100.548 19.24C100.875 19.995 101.038 21.008 101.038 22.278V30.157H102.43V31.599C102.085 31.685 101.596 31.771 100.961 31.856C100.324 31.942 99.766 31.985 99.285 31.985C98.7 31.985 98.306 31.899 98.1 31.728C97.91 31.556 97.816 31.204 97.816 30.672V29.977C97.352 30.492 96.75 30.955 96.011 31.367C95.273 31.779 94.44 31.985 93.511 31.985C92.721 31.985 91.991 31.822 91.321 31.496C90.668 31.153 90.144 30.663 89.749 30.028C89.353 29.376 89.156 28.595 89.156 27.685ZM95.162 29.848C95.522 29.848 95.934 29.745 96.398 29.539C96.862 29.316 97.266 29.05 97.61 28.741V24.518C96.064 24.518 94.903 24.784 94.13 25.316C93.374 25.831 92.996 26.501 92.996 27.325C92.996 28.149 93.185 28.775 93.563 29.204C93.958 29.633 94.491 29.848 95.162 29.848Z" fill="white"/>
<path id="Vector_4" d="M83.506 31.9341C82.424 31.9341 81.625 31.6851 81.109 31.1871C80.594 30.6891 80.336 29.9001 80.336 28.8181V19.3691H78.661V18.0301C78.798 17.9781 79.047 17.8931 79.408 17.7721C79.769 17.6351 80.044 17.5241 80.233 17.4381C80.525 17.2151 80.774 16.8281 80.98 16.2791C81.135 15.9191 81.418 15.0261 81.831 13.6011H83.893L83.996 17.3861H87.939V19.3691H84.022V26.6041C84.022 27.5651 84.047 28.2431 84.099 28.6381C84.15 29.0331 84.262 29.2901 84.434 29.4101C84.606 29.5131 84.907 29.5651 85.336 29.5651C85.766 29.5651 86.212 29.5221 86.676 29.4361C87.14 29.3331 87.527 29.2131 87.836 29.0761L88.326 30.5171C87.845 30.8781 87.14 31.2041 86.212 31.4961C85.284 31.7881 84.382 31.9341 83.506 31.9341Z" fill="white"/>
<path id="Vector_5" d="M73.566 15.0431C72.947 15.0431 72.457 14.8631 72.096 14.5031C71.736 14.1421 71.555 13.6791 71.555 13.1121C71.555 12.4601 71.761 11.9191 72.174 11.4901C72.586 11.0611 73.136 10.8461 73.823 10.8461C74.511 10.8461 75.035 11.0351 75.395 11.4131C75.756 11.7731 75.937 12.2281 75.937 12.7771C75.937 13.4641 75.731 14.0131 75.318 14.4251C74.906 14.8371 74.33 15.0431 73.591 15.0431H73.566ZM72.2 19.8321L70.37 19.3431V17.6181L75.086 17.0521H75.138L75.859 17.5671V29.9511L77.586 30.1571V31.7021H70.395V30.1571L72.2 29.9251V19.8321Z" fill="white"/>
<path id="Vector_6" d="M51.438 12.571H59.273V14.168L57.083 14.502L60.923 26.037L61.67 28.638L62.315 26.012L65.923 14.502L63.887 14.168V12.571H70.124V14.168L68.475 14.502L62.547 31.882H59.48L52.985 14.502L51.438 14.168V12.571Z" fill="white"/>
</g>
</svg>

================
File: public/file.svg
================
<svg fill="none" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M14.5 13.5V5.41a1 1 0 0 0-.3-.7L9.8.29A1 1 0 0 0 9.08 0H1.5v13.5A2.5 2.5 0 0 0 4 16h8a2.5 2.5 0 0 0 2.5-2.5m-1.5 0v-7H8v-5H3v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1M9.5 5V2.12L12.38 5zM5.13 5h-.62v1.25h2.12V5zm-.62 3h7.12v1.25H4.5zm.62 3h-.62v1.25h7.12V11z" clip-rule="evenodd" fill="#666" fill-rule="evenodd"/></svg>

================
File: public/globe.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><g clip-path="url(#a)"><path fill-rule="evenodd" clip-rule="evenodd" d="M10.27 14.1a6.5 6.5 0 0 0 3.67-3.45q-1.24.21-2.7.34-.31 1.83-.97 3.1M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16m.48-1.52a7 7 0 0 1-.96 0H7.5a4 4 0 0 1-.84-1.32q-.38-.89-.63-2.08a40 40 0 0 0 3.92 0q-.25 1.2-.63 2.08a4 4 0 0 1-.84 1.31zm2.94-4.76q1.66-.15 2.95-.43a7 7 0 0 0 0-2.58q-1.3-.27-2.95-.43a18 18 0 0 1 0 3.44m-1.27-3.54a17 17 0 0 1 0 3.64 39 39 0 0 1-4.3 0 17 17 0 0 1 0-3.64 39 39 0 0 1 4.3 0m1.1-1.17q1.45.13 2.69.34a6.5 6.5 0 0 0-3.67-3.44q.65 1.26.98 3.1M8.48 1.5l.01.02q.41.37.84 1.31.38.89.63 2.08a40 40 0 0 0-3.92 0q.25-1.2.63-2.08a4 4 0 0 1 .85-1.32 7 7 0 0 1 .96 0m-2.75.4a6.5 6.5 0 0 0-3.67 3.44 29 29 0 0 1 2.7-.34q.31-1.83.97-3.1M4.58 6.28q-1.66.16-2.95.43a7 7 0 0 0 0 2.58q1.3.27 2.95.43a18 18 0 0 1 0-3.44m.17 4.71q-1.45-.12-2.69-.34a6.5 6.5 0 0 0 3.67 3.44q-.65-1.27-.98-3.1" fill="#666"/></g><defs><clipPath id="a"><path fill="#fff" d="M0 0h16v16H0z"/></clipPath></defs></svg>

================
File: public/next.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>

================
File: public/vercel.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1155 1000"><path d="m577.3 0 577.4 1000H0z" fill="#fff"/></svg>

================
File: public/window.svg
================
<svg fill="none" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16"><path fill-rule="evenodd" clip-rule="evenodd" d="M1.5 2.5h13v10a1 1 0 0 1-1 1h-11a1 1 0 0 1-1-1zM0 1h16v11.5a2.5 2.5 0 0 1-2.5 2.5h-11A2.5 2.5 0 0 1 0 12.5zm3.75 4.5a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5M7 4.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0m1.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5" fill="#666"/></svg>

================
File: src/app/globals.css
================
@tailwind base;
@tailwind components;
@tailwind utilities;

/* body {
	font-family: Arial, Helvetica, sans-serif;
} */

@layer base {
	:root {
		--background: 0 0% 100%;
		--foreground: 240 10% 3.9%;
		--card: 0 0% 100%;
		--card-foreground: 240 10% 3.9%;
		--popover: 0 0% 100%;
		--popover-foreground: 240 10% 3.9%;
		--primary: 142.1 76.2% 36.3%;
		--primary-foreground: 355.7 100% 97.3%;
		--secondary: 240 4.8% 95.9%;
		--secondary-foreground: 240 5.9% 10%;
		--muted: 240 4.8% 95.9%;
		--muted-foreground: 240 3.8% 46.1%;
		--accent: 240 4.8% 95.9%;
		--accent-foreground: 240 5.9% 10%;
		--destructive: 0 84.2% 60.2%;
		--destructive-foreground: 0 0% 98%;
		--border: 240 5.9% 90%;
		--input: 240 5.9% 90%;
		--ring: 142.1 76.2% 36.3%;
		--radius: 0.5rem;
		--chart-1: 12 76% 61%;
		--chart-2: 173 58% 39%;
		--chart-3: 197 37% 24%;
		--chart-4: 43 74% 66%;
		--chart-5: 27 87% 67%;
		--sidebar-background: 0 0% 98%;
		--sidebar-foreground: 240 5.3% 26.1%;
		--sidebar-primary: 240 5.9% 10%;
		--sidebar-primary-foreground: 0 0% 98%;
		--sidebar-accent: 240 4.8% 95.9%;
		--sidebar-accent-foreground: 240 5.9% 10%;
		--sidebar-border: 220 13% 91%;
		--sidebar-ring: 217.2 91.2% 59.8%;
	}

	.dark {
		--background: 20 14.3% 4.1%;
		--foreground: 0 0% 95%;
		--card: 24 9.8% 10%;
		--card-foreground: 0 0% 95%;
		--popover: 0 0% 9%;
		--popover-foreground: 0 0% 95%;
		--primary: 142.1 70.6% 45.3%;
		--primary-foreground: 144.9 80.4% 10%;
		--secondary: 240 3.7% 15.9%;
		--secondary-foreground: 0 0% 98%;
		--muted: 0 0% 15%;
		--muted-foreground: 240 5% 64.9%;
		--accent: 12 6.5% 15.1%;
		--accent-foreground: 0 0% 98%;
		--destructive: 0 62.8% 30.6%;
		--destructive-foreground: 0 85.7% 97.3%;
		--border: 240 3.7% 15.9%;
		--input: 240 3.7% 15.9%;
		--ring: 142.4 71.8% 29.2%;
		--chart-1: 220 70% 50%;
		--chart-2: 160 60% 45%;
		--chart-3: 30 80% 55%;
		--chart-4: 280 65% 60%;
		--chart-5: 340 75% 55%;
		--sidebar-background: 240 5.9% 10%;
		--sidebar-foreground: 240 4.8% 95.9%;
		--sidebar-primary: 224.3 76.3% 48%;
		--sidebar-primary-foreground: 0 0% 100%;
		--sidebar-accent: 240 3.7% 15.9%;
		--sidebar-accent-foreground: 240 4.8% 95.9%;
		--sidebar-border: 240 3.7% 15.9%;
		--sidebar-ring: 217.2 91.2% 59.8%;
	}
}

@layer base {
	* {
		@apply border-border;
	}
	body {
		@apply bg-background text-foreground;
	}
}

================
File: src/app/layout.tsx
================
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import './globals.css'

import Navbar from '@/components/navigation/navbar'
import { Footer } from '@/components/footer'

const inter = Inter({
	variable: '--font-inter',
	subsets: ['latin'],
})

export const metadata: Metadata = {
	title: 'Create Next App',
	description: 'Generated by create next app',
}

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode
}>) {
	return (
		<html lang="en">
			<body className={`${inter.variable} font-inter antialiased bg-[#0F0F10]`}>
				<Navbar />
				{children}
				<Footer />
			</body>
		</html>
	)
}

================
File: src/app/page.tsx
================
import HeroSection from '@/components/hero-section'
import UsedCompanies from '@/components/used-companies'
import BenefitSection from '@/components/benefit-section'
import FeatureSection from '@/components/feature-section'
import StatsSection from '@/components/stats-section'
import TestimonialsSection from '@/components/testimonials-section'
import FAQSection from '@/components/faq-section'
import ContactSection from '@/components/contact-section'
import PricingSection from '@/components/pricing-section'
import CTASection from '@/components/cta-section'

export default function Home() {
	return (
		<div className="mx-auto p-9 pb-20 gap-16 sm:p-20 mt-12">
			<HeroSection />
			<UsedCompanies />
			<BenefitSection />
			<FeatureSection />
			<StatsSection />
			<TestimonialsSection />
			<FAQSection />
			<ContactSection />
			<PricingSection />
			<CTASection />
		</div>
	)
}

================
File: src/components/navigation/navbar.tsx
================
'use client'

import Link from 'next/link'
import { ArrowUpRight } from 'lucide-react'
import { Button } from '@/components/ui/button'
import Image from 'next/image'

export default function Navbar() {
	return (
		<header className="fixed top-2 z-50 w-full">
			<div className="mx-auto flex h-[72px] max-w-[1200px] bg-[#0F0F10] border max-h-[60px] border-[#2C2D30]  items-center justify-between px-2 lg:px-3 rounded-md">
				<Link href="/" className="flex items-center justify-center gap-2">
					<Image
						src="/images/logo.svg"
						alt="Logo"
						width={46}
						height={16}
						className="w-10 h-10"
					/>
					<span className="text-md font-medium text-[#EBECED] ">LIGHTING</span>
				</Link>
				<nav className="hidden md:block">
					<ul className="flex items-center gap-6">
						<li>
							<Link
								href="#benefits"
								className="text-base font-medium text-[#EBECED] hover:text-[#EBECED]/80">
								Benefits
							</Link>
						</li>
						<li>
							<Link
								href="#how-it-works"
								className="text-base font-medium text-[#EBECED] hover:text-[#EBECED]/80">
								How it works
							</Link>
						</li>
						<li>
							<Link
								href="#faq"
								className="text-base font-medium text-[#EBECED] hover:text-[#EBECED]/80">
								FAQ
							</Link>
						</li>
						<li>
							<Link
								href="#pricing"
								className="text-base font-medium text-[#EBECED] hover:text-[#EBECED]/80">
								Pricing
							</Link>
						</li>
					</ul>
				</nav>
				<Button className="hidden w-[217.94px] h-11 rounded-lg bg-[#46B235] px-4 text-sm font-medium text-[#0F0F10] hover:bg-[#46b235a4] md:inline-flex items-center justify-center group  transition-transform duration-300">
					<Link
						className="text-[#0F0F10] text-sm font-medium leading-5"
						href="/template">
						Get template for FREE
					</Link>
					<div className="w-[30px] h-[30px] font-bold bg-[#68CC58] rounded-md flex items-center justify-center transition-transform duration-300 group-hover:-translate-y-[3px] group-hover:translate-x-1">
						<ArrowUpRight className="w-full h-full" />
					</div>
				</Button>
				<Button variant="outline" size="icon" className="md:hidden">
					<svg
						xmlns="http://www.w3.org/2000/svg"
						width="24"
						height="24"
						viewBox="0 0 24 24"
						fill="none"
						stroke="currentColor"
						strokeWidth="2"
						strokeLinecap="round"
						strokeLinejoin="round"
						className="h-6 w-6">
						<line x1="4" x2="20" y1="12" y2="12" />
						<line x1="4" x2="20" y1="6" y2="6" />
						<line x1="4" x2="20" y1="18" y2="18" />
					</svg>
					<span className="sr-only">Toggle menu</span>
				</Button>
			</div>
		</header>
	)
}

================
File: src/components/ui/3d-pin.tsx
================
'use client'
import React, { useState } from 'react'
import { motion } from 'framer-motion'
import { cn } from '@/lib/utils'
import Link from 'next/link'

export const PinContainer = ({
	children,
	title,
	href,
	className,
	containerClassName,
}: {
	children: React.ReactNode
	title?: string
	href?: string
	className?: string
	containerClassName?: string
}) => {
	const [transform, setTransform] = useState(
		'translate(-50%,-50%) rotateX(0deg)'
	)

	const onMouseEnter = () => {
		setTransform('translate(-50%,-50%) rotateX(40deg) scale(0.8)')
	}
	const onMouseLeave = () => {
		setTransform('translate(-50%,-50%) rotateX(0deg) scale(1)')
	}

	return (
		<Link
			className={cn(
				'relative group/pin z-50  cursor-pointer',
				containerClassName
			)}
			onMouseEnter={onMouseEnter}
			onMouseLeave={onMouseLeave}
			href={href || '/'}>
			<div
				style={{
					perspective: '1000px',
					transform: 'rotateX(70deg) translateZ(0deg)',
				}}
				className="absolute left-1/2 top-1/2 ml-[0.09375rem] mt-4 -translate-x-1/2 -translate-y-1/2">
				<div
					style={{
						transform: transform,
					}}
					className="absolute left-1/2 p-4 top-1/2  flex justify-start items-start  rounded-2xl  shadow-[0_8px_16px_rgb(0_0_0/0.4)] bg-black border border-white/[0.1] group-hover/pin:border-white/[0.2] transition duration-700 overflow-hidden">
					<div className={cn(' relative z-50 ', className)}>{children}</div>
				</div>
			</div>
			<PinPerspective title={title} href={href} />
		</Link>
	)
}

export const PinPerspective = ({
	title,
	href,
}: {
	title?: string
	href?: string
}) => {
	return (
		<motion.div className="pointer-events-none  w-96 h-80 flex items-center justify-center opacity-0 group-hover/pin:opacity-100 z-[60] transition duration-500">
			<div className=" w-full h-full -mt-7 flex-none  inset-0">
				<div className="absolute top-0 inset-x-0  flex justify-center">
					<div className="relative flex space-x-2 items-center z-10 rounded-full bg-zinc-950 py-0.5 px-4 ring-1 ring-white/10">
						<span className="relative z-20 text-white text-xs font-bold inline-block py-0.5">
							{title}
						</span>
						<span className="absolute -bottom-0 left-[1.125rem] h-px w-[calc(100%-2.25rem)] bg-gradient-to-r from-emerald-400/0 via-emerald-400/90 to-emerald-400/0 transition-opacity duration-500 group-hover/btn:opacity-40"></span>
					</div>
				</div>

				<div
					style={{
						perspective: '1000px',
						transform: 'rotateX(70deg) translateZ(0)',
					}}
					className="absolute left-1/2 top-1/2 ml-[0.09375rem] mt-4 -translate-x-1/2 -translate-y-1/2">
					<>
						<motion.div
							initial={{
								opacity: 0,
								scale: 0,
								x: '-50%',
								y: '-50%',
							}}
							animate={{
								opacity: [0, 1, 0.5, 0],
								scale: 1,

								z: 0,
							}}
							transition={{
								duration: 6,
								repeat: Infinity,
								delay: 0,
							}}
							className="absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]"></motion.div>
						<motion.div
							initial={{
								opacity: 0,
								scale: 0,
								x: '-50%',
								y: '-50%',
							}}
							animate={{
								opacity: [0, 1, 0.5, 0],
								scale: 1,

								z: 0,
							}}
							transition={{
								duration: 6,
								repeat: Infinity,
								delay: 2,
							}}
							className="absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]"></motion.div>
						<motion.div
							initial={{
								opacity: 0,
								scale: 0,
								x: '-50%',
								y: '-50%',
							}}
							animate={{
								opacity: [0, 1, 0.5, 0],
								scale: 1,

								z: 0,
							}}
							transition={{
								duration: 6,
								repeat: Infinity,
								delay: 4,
							}}
							className="absolute left-1/2 top-1/2  h-[11.25rem] w-[11.25rem] rounded-[50%] bg-sky-500/[0.08] shadow-[0_8px_16px_rgb(0_0_0/0.4)]"></motion.div>
					</>
				</div>

				<>
					<motion.div className="absolute right-1/2 bottom-1/2 bg-gradient-to-b from-transparent to-cyan-500 translate-y-[14px] w-px h-20 group-hover/pin:h-40 blur-[2px]" />
					<motion.div className="absolute right-1/2 bottom-1/2 bg-gradient-to-b from-transparent to-cyan-500 translate-y-[14px] w-px h-20 group-hover/pin:h-40  " />
					<motion.div className="absolute right-1/2 translate-x-[1.5px] bottom-1/2 bg-cyan-600 translate-y-[14px] w-[4px] h-[4px] rounded-full z-40 blur-[3px]" />
					<motion.div className="absolute right-1/2 translate-x-[0.5px] bottom-1/2 bg-cyan-300 translate-y-[14px] w-[2px] h-[2px] rounded-full z-40 " />
				</>
			</div>
		</motion.div>
	)
}

================
File: src/components/ui/accordion.tsx
================
"use client"

import * as React from "react"
import * as AccordionPrimitive from "@radix-ui/react-accordion"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const Accordion = AccordionPrimitive.Root

const AccordionItem = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>
>(({ className, ...props }, ref) => (
  <AccordionPrimitive.Item
    ref={ref}
    className={cn("border-b", className)}
    {...props}
  />
))
AccordionItem.displayName = "AccordionItem"

const AccordionTrigger = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Header className="flex">
    <AccordionPrimitive.Trigger
      ref={ref}
      className={cn(
        "flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180",
        className
      )}
      {...props}
    >
      {children}
      <ChevronDown className="h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200" />
    </AccordionPrimitive.Trigger>
  </AccordionPrimitive.Header>
))
AccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName

const AccordionContent = React.forwardRef<
  React.ElementRef<typeof AccordionPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <AccordionPrimitive.Content
    ref={ref}
    className="overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down"
    {...props}
  >
    <div className={cn("pb-4 pt-0", className)}>{children}</div>
  </AccordionPrimitive.Content>
))
AccordionContent.displayName = AccordionPrimitive.Content.displayName

export { Accordion, AccordionItem, AccordionTrigger, AccordionContent }

================
File: src/components/ui/alert-dialog.tsx
================
"use client"

import * as React from "react"
import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

const AlertDialog = AlertDialogPrimitive.Root

const AlertDialogTrigger = AlertDialogPrimitive.Trigger

const AlertDialogPortal = AlertDialogPrimitive.Portal

const AlertDialogOverlay = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
AlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName

const AlertDialogContent = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>
>(({ className, ...props }, ref) => (
  <AlertDialogPortal>
    <AlertDialogOverlay />
    <AlertDialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    />
  </AlertDialogPortal>
))
AlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName

const AlertDialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
AlertDialogHeader.displayName = "AlertDialogHeader"

const AlertDialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
AlertDialogFooter.displayName = "AlertDialogFooter"

const AlertDialogTitle = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold", className)}
    {...props}
  />
))
AlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName

const AlertDialogDescription = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
AlertDialogDescription.displayName =
  AlertDialogPrimitive.Description.displayName

const AlertDialogAction = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Action>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Action
    ref={ref}
    className={cn(buttonVariants(), className)}
    {...props}
  />
))
AlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName

const AlertDialogCancel = React.forwardRef<
  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,
  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>
>(({ className, ...props }, ref) => (
  <AlertDialogPrimitive.Cancel
    ref={ref}
    className={cn(
      buttonVariants({ variant: "outline" }),
      "mt-2 sm:mt-0",
      className
    )}
    {...props}
  />
))
AlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName

export {
  AlertDialog,
  AlertDialogPortal,
  AlertDialogOverlay,
  AlertDialogTrigger,
  AlertDialogContent,
  AlertDialogHeader,
  AlertDialogFooter,
  AlertDialogTitle,
  AlertDialogDescription,
  AlertDialogAction,
  AlertDialogCancel,
}

================
File: src/components/ui/alert.tsx
================
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const alertVariants = cva(
  "relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive:
          "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Alert = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>
>(({ className, variant, ...props }, ref) => (
  <div
    ref={ref}
    role="alert"
    className={cn(alertVariants({ variant }), className)}
    {...props}
  />
))
Alert.displayName = "Alert"

const AlertTitle = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLHeadingElement>
>(({ className, ...props }, ref) => (
  <h5
    ref={ref}
    className={cn("mb-1 font-medium leading-none tracking-tight", className)}
    {...props}
  />
))
AlertTitle.displayName = "AlertTitle"

const AlertDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm [&_p]:leading-relaxed", className)}
    {...props}
  />
))
AlertDescription.displayName = "AlertDescription"

export { Alert, AlertTitle, AlertDescription }

================
File: src/components/ui/animated-beam.tsx
================
"use client";

import { motion } from "motion/react";
import { RefObject, useEffect, useId, useState } from "react";

import { cn } from "@/lib/utils";

export interface AnimatedBeamProps {
  className?: string;
  containerRef: RefObject<HTMLElement | null>; // Container ref
  fromRef: RefObject<HTMLElement | null>;
  toRef: RefObject<HTMLElement | null>;
  curvature?: number;
  reverse?: boolean;
  pathColor?: string;
  pathWidth?: number;
  pathOpacity?: number;
  gradientStartColor?: string;
  gradientStopColor?: string;
  delay?: number;
  duration?: number;
  startXOffset?: number;
  startYOffset?: number;
  endXOffset?: number;
  endYOffset?: number;
}

export const AnimatedBeam: React.FC<AnimatedBeamProps> = ({
  className,
  containerRef,
  fromRef,
  toRef,
  curvature = 0,
  reverse = false, // Include the reverse prop
  duration = Math.random() * 3 + 4,
  delay = 0,
  pathColor = "gray",
  pathWidth = 2,
  pathOpacity = 0.2,
  gradientStartColor = "#ffaa40",
  gradientStopColor = "#9c40ff",
  startXOffset = 0,
  startYOffset = 0,
  endXOffset = 0,
  endYOffset = 0,
}) => {
  const id = useId();
  const [pathD, setPathD] = useState("");
  const [svgDimensions, setSvgDimensions] = useState({ width: 0, height: 0 });

  // Calculate the gradient coordinates based on the reverse prop
  const gradientCoordinates = reverse
    ? {
        x1: ["90%", "-10%"],
        x2: ["100%", "0%"],
        y1: ["0%", "0%"],
        y2: ["0%", "0%"],
      }
    : {
        x1: ["10%", "110%"],
        x2: ["0%", "100%"],
        y1: ["0%", "0%"],
        y2: ["0%", "0%"],
      };

  useEffect(() => {
    const updatePath = () => {
      if (containerRef.current && fromRef.current && toRef.current) {
        const containerRect = containerRef.current.getBoundingClientRect();
        const rectA = fromRef.current.getBoundingClientRect();
        const rectB = toRef.current.getBoundingClientRect();

        const svgWidth = containerRect.width;
        const svgHeight = containerRect.height;
        setSvgDimensions({ width: svgWidth, height: svgHeight });

        const startX =
          rectA.left - containerRect.left + rectA.width / 2 + startXOffset;
        const startY =
          rectA.top - containerRect.top + rectA.height / 2 + startYOffset;
        const endX =
          rectB.left - containerRect.left + rectB.width / 2 + endXOffset;
        const endY =
          rectB.top - containerRect.top + rectB.height / 2 + endYOffset;

        const controlY = startY - curvature;
        const d = `M ${startX},${startY} Q ${
          (startX + endX) / 2
        },${controlY} ${endX},${endY}`;
        setPathD(d);
      }
    };

    // Initialize ResizeObserver
    const resizeObserver = new ResizeObserver((entries) => {
      // For all entries, recalculate the path
      for (let entry of entries) {
        updatePath();
      }
    });

    // Observe the container element
    if (containerRef.current) {
      resizeObserver.observe(containerRef.current);
    }

    // Call the updatePath initially to set the initial path
    updatePath();

    // Clean up the observer on component unmount
    return () => {
      resizeObserver.disconnect();
    };
  }, [
    containerRef,
    fromRef,
    toRef,
    curvature,
    startXOffset,
    startYOffset,
    endXOffset,
    endYOffset,
  ]);

  return (
    <svg
      fill="none"
      width={svgDimensions.width}
      height={svgDimensions.height}
      xmlns="http://www.w3.org/2000/svg"
      className={cn(
        "pointer-events-none absolute left-0 top-0 transform-gpu stroke-2",
        className,
      )}
      viewBox={`0 0 ${svgDimensions.width} ${svgDimensions.height}`}
    >
      <path
        d={pathD}
        stroke={pathColor}
        strokeWidth={pathWidth}
        strokeOpacity={pathOpacity}
        strokeLinecap="round"
      />
      <path
        d={pathD}
        strokeWidth={pathWidth}
        stroke={`url(#${id})`}
        strokeOpacity="1"
        strokeLinecap="round"
      />
      <defs>
        <motion.linearGradient
          className="transform-gpu"
          id={id}
          gradientUnits={"userSpaceOnUse"}
          initial={{
            x1: "0%",
            x2: "0%",
            y1: "0%",
            y2: "0%",
          }}
          animate={{
            x1: gradientCoordinates.x1,
            x2: gradientCoordinates.x2,
            y1: gradientCoordinates.y1,
            y2: gradientCoordinates.y2,
          }}
          transition={{
            delay,
            duration,
            ease: [0.16, 1, 0.3, 1], // https://easings.net/#easeOutExpo
            repeat: Infinity,
            repeatDelay: 0,
          }}
        >
          <stop stopColor={gradientStartColor} stopOpacity="0"></stop>
          <stop stopColor={gradientStartColor}></stop>
          <stop offset="32.5%" stopColor={gradientStopColor}></stop>
          <stop
            offset="100%"
            stopColor={gradientStopColor}
            stopOpacity="0"
          ></stop>
        </motion.linearGradient>
      </defs>
    </svg>
  );
};

================
File: src/components/ui/animated-list.tsx
================
'use client'

import { AnimatePresence, motion } from 'motion/react'
import React, {
	ComponentPropsWithoutRef,
	useEffect,
	useMemo,
	useState,
} from 'react'

export function AnimatedListItem({ children }: { children: React.ReactNode }) {
	const animations = {
		initial: { scale: 0, opacity: 0 },
		animate: { scale: 1, opacity: 1, originY: 0 },
		exit: { scale: 0, opacity: 0 },
		transition: { type: 'spring', stiffness: 350, damping: 40 },
	}

	return (
		<motion.div {...animations} layout className="mx-auto w-full">
			{children}
		</motion.div>
	)
}

export interface AnimatedListProps extends ComponentPropsWithoutRef<'div'> {
	children: React.ReactNode
	delay?: number
	infinite?: boolean
}

export const AnimatedList = React.memo(
	({
		children,
		className,
		delay = 1000,
		infinite = false,
		...props
	}: AnimatedListProps) => {
		const [index, setIndex] = useState(0)
		const childrenArray = useMemo(
			() => React.Children.toArray(children),
			[children]
		)

		useEffect(() => {
			const timeout = setTimeout(() => {
				if (index < childrenArray.length - 1) {
					setIndex((prevIndex) => prevIndex + 1)
				} else if (infinite) {
					setIndex(0)
				}
			}, delay)

			return () => clearTimeout(timeout)
		}, [index, delay, childrenArray.length, infinite])

		const itemsToShow = useMemo(() => {
			const result = childrenArray.slice(0, index + 1).reverse()
			return result
		}, [index, childrenArray])

		return (
			<div
				className={`flex flex-col items-center gap-4 ${className}`}
				{...props}>
				<AnimatePresence>
					{itemsToShow.map((item) => (
						<AnimatedListItem key={(item as React.ReactElement).key}>
							{item}
						</AnimatedListItem>
					))}
				</AnimatePresence>
			</div>
		)
	}
)

AnimatedList.displayName = 'AnimatedList'

================
File: src/components/ui/aspect-ratio.tsx
================
"use client"

import * as AspectRatioPrimitive from "@radix-ui/react-aspect-ratio"

const AspectRatio = AspectRatioPrimitive.Root

export { AspectRatio }

================
File: src/components/ui/avatar.tsx
================
"use client"

import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

const Avatar = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    )}
    {...props}
  />
))
Avatar.displayName = AvatarPrimitive.Root.displayName

const AvatarImage = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Image>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Image
    ref={ref}
    className={cn("aspect-square h-full w-full", className)}
    {...props}
  />
))
AvatarImage.displayName = AvatarPrimitive.Image.displayName

const AvatarFallback = React.forwardRef<
  React.ElementRef<typeof AvatarPrimitive.Fallback>,
  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>
>(({ className, ...props }, ref) => (
  <AvatarPrimitive.Fallback
    ref={ref}
    className={cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    )}
    {...props}
  />
))
AvatarFallback.displayName = AvatarPrimitive.Fallback.displayName

export { Avatar, AvatarImage, AvatarFallback }

================
File: src/components/ui/badge.tsx
================
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }

================
File: src/components/ui/bento-grid.tsx
================
import { ArrowRightIcon } from "@radix-ui/react-icons";
import { ComponentPropsWithoutRef, ReactNode } from "react";

import { Button } from "@/components/ui/button";
import { cn } from "@/lib/utils";

interface BentoGridProps extends ComponentPropsWithoutRef<"div"> {
  children: ReactNode;
  className?: string;
}

interface BentoCardProps extends ComponentPropsWithoutRef<"div"> {
  name: string;
  className: string;
  background: ReactNode;
  Icon: React.ElementType;
  description: string;
  href: string;
  cta: string;
}

const BentoGrid = ({ children, className, ...props }: BentoGridProps) => {
  return (
    <div
      className={cn(
        "grid w-full auto-rows-[22rem] grid-cols-3 gap-4",
        className,
      )}
      {...props}
    >
      {children}
    </div>
  );
};

const BentoCard = ({
  name,
  className,
  background,
  Icon,
  description,
  href,
  cta,
  ...props
}: BentoCardProps) => (
  <div
    key={name}
    className={cn(
      "group relative col-span-3 flex flex-col justify-between overflow-hidden rounded-xl",
      // light styles
      "bg-white [box-shadow:0_0_0_1px_rgba(0,0,0,.03),0_2px_4px_rgba(0,0,0,.05),0_12px_24px_rgba(0,0,0,.05)]",
      // dark styles
      "transform-gpu dark:bg-black dark:[border:1px_solid_rgba(255,255,255,.1)] dark:[box-shadow:0_-20px_80px_-20px_#ffffff1f_inset]",
      className,
    )}
    {...props}
  >
    <div>{background}</div>
    <div className="pointer-events-none z-10 flex transform-gpu flex-col gap-1 p-6 transition-all duration-300 group-hover:-translate-y-10">
      <Icon className="h-12 w-12 origin-left transform-gpu text-neutral-700 transition-all duration-300 ease-in-out group-hover:scale-75" />
      <h3 className="text-xl font-semibold text-neutral-700 dark:text-neutral-300">
        {name}
      </h3>
      <p className="max-w-lg text-neutral-400">{description}</p>
    </div>

    <div
      className={cn(
        "pointer-events-none absolute bottom-0 flex w-full translate-y-10 transform-gpu flex-row items-center p-4 opacity-0 transition-all duration-300 group-hover:translate-y-0 group-hover:opacity-100",
      )}
    >
      <Button variant="ghost" asChild size="sm" className="pointer-events-auto">
        <a href={href}>
          {cta}
          <ArrowRightIcon className="ml-2 h-4 w-4" />
        </a>
      </Button>
    </div>
    <div className="pointer-events-none absolute inset-0 transform-gpu transition-all duration-300 group-hover:bg-black/[.03] group-hover:dark:bg-neutral-800/10" />
  </div>
);

export { BentoCard, BentoGrid };

================
File: src/components/ui/breadcrumb.tsx
================
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { ChevronRight, MoreHorizontal } from "lucide-react"

import { cn } from "@/lib/utils"

const Breadcrumb = React.forwardRef<
  HTMLElement,
  React.ComponentPropsWithoutRef<"nav"> & {
    separator?: React.ReactNode
  }
>(({ ...props }, ref) => <nav ref={ref} aria-label="breadcrumb" {...props} />)
Breadcrumb.displayName = "Breadcrumb"

const BreadcrumbList = React.forwardRef<
  HTMLOListElement,
  React.ComponentPropsWithoutRef<"ol">
>(({ className, ...props }, ref) => (
  <ol
    ref={ref}
    className={cn(
      "flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5",
      className
    )}
    {...props}
  />
))
BreadcrumbList.displayName = "BreadcrumbList"

const BreadcrumbItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentPropsWithoutRef<"li">
>(({ className, ...props }, ref) => (
  <li
    ref={ref}
    className={cn("inline-flex items-center gap-1.5", className)}
    {...props}
  />
))
BreadcrumbItem.displayName = "BreadcrumbItem"

const BreadcrumbLink = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentPropsWithoutRef<"a"> & {
    asChild?: boolean
  }
>(({ asChild, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      ref={ref}
      className={cn("transition-colors hover:text-foreground", className)}
      {...props}
    />
  )
})
BreadcrumbLink.displayName = "BreadcrumbLink"

const BreadcrumbPage = React.forwardRef<
  HTMLSpanElement,
  React.ComponentPropsWithoutRef<"span">
>(({ className, ...props }, ref) => (
  <span
    ref={ref}
    role="link"
    aria-disabled="true"
    aria-current="page"
    className={cn("font-normal text-foreground", className)}
    {...props}
  />
))
BreadcrumbPage.displayName = "BreadcrumbPage"

const BreadcrumbSeparator = ({
  children,
  className,
  ...props
}: React.ComponentProps<"li">) => (
  <li
    role="presentation"
    aria-hidden="true"
    className={cn("[&>svg]:w-3.5 [&>svg]:h-3.5", className)}
    {...props}
  >
    {children ?? <ChevronRight />}
  </li>
)
BreadcrumbSeparator.displayName = "BreadcrumbSeparator"

const BreadcrumbEllipsis = ({
  className,
  ...props
}: React.ComponentProps<"span">) => (
  <span
    role="presentation"
    aria-hidden="true"
    className={cn("flex h-9 w-9 items-center justify-center", className)}
    {...props}
  >
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More</span>
  </span>
)
BreadcrumbEllipsis.displayName = "BreadcrumbElipssis"

export {
  Breadcrumb,
  BreadcrumbList,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbPage,
  BreadcrumbSeparator,
  BreadcrumbEllipsis,
}

================
File: src/components/ui/button.tsx
================
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }

================
File: src/components/ui/calendar.tsx
================
"use client"

import * as React from "react"
import { ChevronLeft, ChevronRight } from "lucide-react"
import { DayPicker } from "react-day-picker"

import { cn } from "@/lib/utils"
import { buttonVariants } from "@/components/ui/button"

export type CalendarProps = React.ComponentProps<typeof DayPicker>

function Calendar({
  className,
  classNames,
  showOutsideDays = true,
  ...props
}: CalendarProps) {
  return (
    <DayPicker
      showOutsideDays={showOutsideDays}
      className={cn("p-3", className)}
      classNames={{
        months: "flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0",
        month: "space-y-4",
        caption: "flex justify-center pt-1 relative items-center",
        caption_label: "text-sm font-medium",
        nav: "space-x-1 flex items-center",
        nav_button: cn(
          buttonVariants({ variant: "outline" }),
          "h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100"
        ),
        nav_button_previous: "absolute left-1",
        nav_button_next: "absolute right-1",
        table: "w-full border-collapse space-y-1",
        head_row: "flex",
        head_cell:
          "text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]",
        row: "flex w-full mt-2",
        cell: cn(
          "relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md",
          props.mode === "range"
            ? "[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md"
            : "[&:has([aria-selected])]:rounded-md"
        ),
        day: cn(
          buttonVariants({ variant: "ghost" }),
          "h-8 w-8 p-0 font-normal aria-selected:opacity-100"
        ),
        day_range_start: "day-range-start",
        day_range_end: "day-range-end",
        day_selected:
          "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
        day_today: "bg-accent text-accent-foreground",
        day_outside:
          "day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground",
        day_disabled: "text-muted-foreground opacity-50",
        day_range_middle:
          "aria-selected:bg-accent aria-selected:text-accent-foreground",
        day_hidden: "invisible",
        ...classNames,
      }}
      components={{
        IconLeft: ({ className, ...props }) => (
          <ChevronLeft className={cn("h-4 w-4", className)} {...props} />
        ),
        IconRight: ({ className, ...props }) => (
          <ChevronRight className={cn("h-4 w-4", className)} {...props} />
        ),
      }}
      {...props}
    />
  )
}
Calendar.displayName = "Calendar"

export { Calendar }

================
File: src/components/ui/card.tsx
================
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-xl border bg-card text-card-foreground shadow",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("font-semibold leading-none tracking-tight", className)}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }

================
File: src/components/ui/carousel.tsx
================
"use client"

import * as React from "react"
import useEmblaCarousel, {
  type UseEmblaCarouselType,
} from "embla-carousel-react"
import { ArrowLeft, ArrowRight } from "lucide-react"

import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"

type CarouselApi = UseEmblaCarouselType[1]
type UseCarouselParameters = Parameters<typeof useEmblaCarousel>
type CarouselOptions = UseCarouselParameters[0]
type CarouselPlugin = UseCarouselParameters[1]

type CarouselProps = {
  opts?: CarouselOptions
  plugins?: CarouselPlugin
  orientation?: "horizontal" | "vertical"
  setApi?: (api: CarouselApi) => void
}

type CarouselContextProps = {
  carouselRef: ReturnType<typeof useEmblaCarousel>[0]
  api: ReturnType<typeof useEmblaCarousel>[1]
  scrollPrev: () => void
  scrollNext: () => void
  canScrollPrev: boolean
  canScrollNext: boolean
} & CarouselProps

const CarouselContext = React.createContext<CarouselContextProps | null>(null)

function useCarousel() {
  const context = React.useContext(CarouselContext)

  if (!context) {
    throw new Error("useCarousel must be used within a <Carousel />")
  }

  return context
}

const Carousel = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement> & CarouselProps
>(
  (
    {
      orientation = "horizontal",
      opts,
      setApi,
      plugins,
      className,
      children,
      ...props
    },
    ref
  ) => {
    const [carouselRef, api] = useEmblaCarousel(
      {
        ...opts,
        axis: orientation === "horizontal" ? "x" : "y",
      },
      plugins
    )
    const [canScrollPrev, setCanScrollPrev] = React.useState(false)
    const [canScrollNext, setCanScrollNext] = React.useState(false)

    const onSelect = React.useCallback((api: CarouselApi) => {
      if (!api) {
        return
      }

      setCanScrollPrev(api.canScrollPrev())
      setCanScrollNext(api.canScrollNext())
    }, [])

    const scrollPrev = React.useCallback(() => {
      api?.scrollPrev()
    }, [api])

    const scrollNext = React.useCallback(() => {
      api?.scrollNext()
    }, [api])

    const handleKeyDown = React.useCallback(
      (event: React.KeyboardEvent<HTMLDivElement>) => {
        if (event.key === "ArrowLeft") {
          event.preventDefault()
          scrollPrev()
        } else if (event.key === "ArrowRight") {
          event.preventDefault()
          scrollNext()
        }
      },
      [scrollPrev, scrollNext]
    )

    React.useEffect(() => {
      if (!api || !setApi) {
        return
      }

      setApi(api)
    }, [api, setApi])

    React.useEffect(() => {
      if (!api) {
        return
      }

      onSelect(api)
      api.on("reInit", onSelect)
      api.on("select", onSelect)

      return () => {
        api?.off("select", onSelect)
      }
    }, [api, onSelect])

    return (
      <CarouselContext.Provider
        value={{
          carouselRef,
          api: api,
          opts,
          orientation:
            orientation || (opts?.axis === "y" ? "vertical" : "horizontal"),
          scrollPrev,
          scrollNext,
          canScrollPrev,
          canScrollNext,
        }}
      >
        <div
          ref={ref}
          onKeyDownCapture={handleKeyDown}
          className={cn("relative", className)}
          role="region"
          aria-roledescription="carousel"
          {...props}
        >
          {children}
        </div>
      </CarouselContext.Provider>
    )
  }
)
Carousel.displayName = "Carousel"

const CarouselContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { carouselRef, orientation } = useCarousel()

  return (
    <div ref={carouselRef} className="overflow-hidden">
      <div
        ref={ref}
        className={cn(
          "flex",
          orientation === "horizontal" ? "-ml-4" : "-mt-4 flex-col",
          className
        )}
        {...props}
      />
    </div>
  )
})
CarouselContent.displayName = "CarouselContent"

const CarouselItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { orientation } = useCarousel()

  return (
    <div
      ref={ref}
      role="group"
      aria-roledescription="slide"
      className={cn(
        "min-w-0 shrink-0 grow-0 basis-full",
        orientation === "horizontal" ? "pl-4" : "pt-4",
        className
      )}
      {...props}
    />
  )
})
CarouselItem.displayName = "CarouselItem"

const CarouselPrevious = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ className, variant = "outline", size = "icon", ...props }, ref) => {
  const { orientation, scrollPrev, canScrollPrev } = useCarousel()

  return (
    <Button
      ref={ref}
      variant={variant}
      size={size}
      className={cn(
        "absolute  h-8 w-8 rounded-full",
        orientation === "horizontal"
          ? "-left-12 top-1/2 -translate-y-1/2"
          : "-top-12 left-1/2 -translate-x-1/2 rotate-90",
        className
      )}
      disabled={!canScrollPrev}
      onClick={scrollPrev}
      {...props}
    >
      <ArrowLeft className="h-4 w-4" />
      <span className="sr-only">Previous slide</span>
    </Button>
  )
})
CarouselPrevious.displayName = "CarouselPrevious"

const CarouselNext = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<typeof Button>
>(({ className, variant = "outline", size = "icon", ...props }, ref) => {
  const { orientation, scrollNext, canScrollNext } = useCarousel()

  return (
    <Button
      ref={ref}
      variant={variant}
      size={size}
      className={cn(
        "absolute h-8 w-8 rounded-full",
        orientation === "horizontal"
          ? "-right-12 top-1/2 -translate-y-1/2"
          : "-bottom-12 left-1/2 -translate-x-1/2 rotate-90",
        className
      )}
      disabled={!canScrollNext}
      onClick={scrollNext}
      {...props}
    >
      <ArrowRight className="h-4 w-4" />
      <span className="sr-only">Next slide</span>
    </Button>
  )
})
CarouselNext.displayName = "CarouselNext"

export {
  type CarouselApi,
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselPrevious,
  CarouselNext,
}

================
File: src/components/ui/chart.tsx
================
"use client"

import * as React from "react"
import * as RechartsPrimitive from "recharts"

import { cn } from "@/lib/utils"

// Format: { THEME_NAME: CSS_SELECTOR }
const THEMES = { light: "", dark: ".dark" } as const

export type ChartConfig = {
  [k in string]: {
    label?: React.ReactNode
    icon?: React.ComponentType
  } & (
    | { color?: string; theme?: never }
    | { color?: never; theme: Record<keyof typeof THEMES, string> }
  )
}

type ChartContextProps = {
  config: ChartConfig
}

const ChartContext = React.createContext<ChartContextProps | null>(null)

function useChart() {
  const context = React.useContext(ChartContext)

  if (!context) {
    throw new Error("useChart must be used within a <ChartContainer />")
  }

  return context
}

const ChartContainer = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    config: ChartConfig
    children: React.ComponentProps<
      typeof RechartsPrimitive.ResponsiveContainer
    >["children"]
  }
>(({ id, className, children, config, ...props }, ref) => {
  const uniqueId = React.useId()
  const chartId = `chart-${id || uniqueId.replace(/:/g, "")}`

  return (
    <ChartContext.Provider value={{ config }}>
      <div
        data-chart={chartId}
        ref={ref}
        className={cn(
          "flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none",
          className
        )}
        {...props}
      >
        <ChartStyle id={chartId} config={config} />
        <RechartsPrimitive.ResponsiveContainer>
          {children}
        </RechartsPrimitive.ResponsiveContainer>
      </div>
    </ChartContext.Provider>
  )
})
ChartContainer.displayName = "Chart"

const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {
  const colorConfig = Object.entries(config).filter(
    ([, config]) => config.theme || config.color
  )

  if (!colorConfig.length) {
    return null
  }

  return (
    <style
      dangerouslySetInnerHTML={{
        __html: Object.entries(THEMES)
          .map(
            ([theme, prefix]) => `
${prefix} [data-chart=${id}] {
${colorConfig
  .map(([key, itemConfig]) => {
    const color =
      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||
      itemConfig.color
    return color ? `  --color-${key}: ${color};` : null
  })
  .join("\n")}
}
`
          )
          .join("\n"),
      }}
    />
  )
}

const ChartTooltip = RechartsPrimitive.Tooltip

const ChartTooltipContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &
    React.ComponentProps<"div"> & {
      hideLabel?: boolean
      hideIndicator?: boolean
      indicator?: "line" | "dot" | "dashed"
      nameKey?: string
      labelKey?: string
    }
>(
  (
    {
      active,
      payload,
      className,
      indicator = "dot",
      hideLabel = false,
      hideIndicator = false,
      label,
      labelFormatter,
      labelClassName,
      formatter,
      color,
      nameKey,
      labelKey,
    },
    ref
  ) => {
    const { config } = useChart()

    const tooltipLabel = React.useMemo(() => {
      if (hideLabel || !payload?.length) {
        return null
      }

      const [item] = payload
      const key = `${labelKey || item.dataKey || item.name || "value"}`
      const itemConfig = getPayloadConfigFromPayload(config, item, key)
      const value =
        !labelKey && typeof label === "string"
          ? config[label as keyof typeof config]?.label || label
          : itemConfig?.label

      if (labelFormatter) {
        return (
          <div className={cn("font-medium", labelClassName)}>
            {labelFormatter(value, payload)}
          </div>
        )
      }

      if (!value) {
        return null
      }

      return <div className={cn("font-medium", labelClassName)}>{value}</div>
    }, [
      label,
      labelFormatter,
      payload,
      hideLabel,
      labelClassName,
      config,
      labelKey,
    ])

    if (!active || !payload?.length) {
      return null
    }

    const nestLabel = payload.length === 1 && indicator !== "dot"

    return (
      <div
        ref={ref}
        className={cn(
          "grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl",
          className
        )}
      >
        {!nestLabel ? tooltipLabel : null}
        <div className="grid gap-1.5">
          {payload.map((item, index) => {
            const key = `${nameKey || item.name || item.dataKey || "value"}`
            const itemConfig = getPayloadConfigFromPayload(config, item, key)
            const indicatorColor = color || item.payload.fill || item.color

            return (
              <div
                key={item.dataKey}
                className={cn(
                  "flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground",
                  indicator === "dot" && "items-center"
                )}
              >
                {formatter && item?.value !== undefined && item.name ? (
                  formatter(item.value, item.name, item, index, item.payload)
                ) : (
                  <>
                    {itemConfig?.icon ? (
                      <itemConfig.icon />
                    ) : (
                      !hideIndicator && (
                        <div
                          className={cn(
                            "shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]",
                            {
                              "h-2.5 w-2.5": indicator === "dot",
                              "w-1": indicator === "line",
                              "w-0 border-[1.5px] border-dashed bg-transparent":
                                indicator === "dashed",
                              "my-0.5": nestLabel && indicator === "dashed",
                            }
                          )}
                          style={
                            {
                              "--color-bg": indicatorColor,
                              "--color-border": indicatorColor,
                            } as React.CSSProperties
                          }
                        />
                      )
                    )}
                    <div
                      className={cn(
                        "flex flex-1 justify-between leading-none",
                        nestLabel ? "items-end" : "items-center"
                      )}
                    >
                      <div className="grid gap-1.5">
                        {nestLabel ? tooltipLabel : null}
                        <span className="text-muted-foreground">
                          {itemConfig?.label || item.name}
                        </span>
                      </div>
                      {item.value && (
                        <span className="font-mono font-medium tabular-nums text-foreground">
                          {item.value.toLocaleString()}
                        </span>
                      )}
                    </div>
                  </>
                )}
              </div>
            )
          })}
        </div>
      </div>
    )
  }
)
ChartTooltipContent.displayName = "ChartTooltip"

const ChartLegend = RechartsPrimitive.Legend

const ChartLegendContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> &
    Pick<RechartsPrimitive.LegendProps, "payload" | "verticalAlign"> & {
      hideIcon?: boolean
      nameKey?: string
    }
>(
  (
    { className, hideIcon = false, payload, verticalAlign = "bottom", nameKey },
    ref
  ) => {
    const { config } = useChart()

    if (!payload?.length) {
      return null
    }

    return (
      <div
        ref={ref}
        className={cn(
          "flex items-center justify-center gap-4",
          verticalAlign === "top" ? "pb-3" : "pt-3",
          className
        )}
      >
        {payload.map((item) => {
          const key = `${nameKey || item.dataKey || "value"}`
          const itemConfig = getPayloadConfigFromPayload(config, item, key)

          return (
            <div
              key={item.value}
              className={cn(
                "flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground"
              )}
            >
              {itemConfig?.icon && !hideIcon ? (
                <itemConfig.icon />
              ) : (
                <div
                  className="h-2 w-2 shrink-0 rounded-[2px]"
                  style={{
                    backgroundColor: item.color,
                  }}
                />
              )}
              {itemConfig?.label}
            </div>
          )
        })}
      </div>
    )
  }
)
ChartLegendContent.displayName = "ChartLegend"

// Helper to extract item config from a payload.
function getPayloadConfigFromPayload(
  config: ChartConfig,
  payload: unknown,
  key: string
) {
  if (typeof payload !== "object" || payload === null) {
    return undefined
  }

  const payloadPayload =
    "payload" in payload &&
    typeof payload.payload === "object" &&
    payload.payload !== null
      ? payload.payload
      : undefined

  let configLabelKey: string = key

  if (
    key in payload &&
    typeof payload[key as keyof typeof payload] === "string"
  ) {
    configLabelKey = payload[key as keyof typeof payload] as string
  } else if (
    payloadPayload &&
    key in payloadPayload &&
    typeof payloadPayload[key as keyof typeof payloadPayload] === "string"
  ) {
    configLabelKey = payloadPayload[
      key as keyof typeof payloadPayload
    ] as string
  }

  return configLabelKey in config
    ? config[configLabelKey]
    : config[key as keyof typeof config]
}

export {
  ChartContainer,
  ChartTooltip,
  ChartTooltipContent,
  ChartLegend,
  ChartLegendContent,
  ChartStyle,
}

================
File: src/components/ui/checkbox.tsx
================
"use client"

import * as React from "react"
import * as CheckboxPrimitive from "@radix-ui/react-checkbox"
import { Check } from "lucide-react"

import { cn } from "@/lib/utils"

const Checkbox = React.forwardRef<
  React.ElementRef<typeof CheckboxPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
>(({ className, ...props }, ref) => (
  <CheckboxPrimitive.Root
    ref={ref}
    className={cn(
      "peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",
      className
    )}
    {...props}
  >
    <CheckboxPrimitive.Indicator
      className={cn("flex items-center justify-center text-current")}
    >
      <Check className="h-4 w-4" />
    </CheckboxPrimitive.Indicator>
  </CheckboxPrimitive.Root>
))
Checkbox.displayName = CheckboxPrimitive.Root.displayName

export { Checkbox }

================
File: src/components/ui/collapsible.tsx
================
"use client"

import * as CollapsiblePrimitive from "@radix-ui/react-collapsible"

const Collapsible = CollapsiblePrimitive.Root

const CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger

const CollapsibleContent = CollapsiblePrimitive.CollapsibleContent

export { Collapsible, CollapsibleTrigger, CollapsibleContent }

================
File: src/components/ui/command.tsx
================
"use client"

import * as React from "react"
import { type DialogProps } from "@radix-ui/react-dialog"
import { Command as CommandPrimitive } from "cmdk"
import { Search } from "lucide-react"

import { cn } from "@/lib/utils"
import { Dialog, DialogContent } from "@/components/ui/dialog"

const Command = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive>
>(({ className, ...props }, ref) => (
  <CommandPrimitive
    ref={ref}
    className={cn(
      "flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",
      className
    )}
    {...props}
  />
))
Command.displayName = CommandPrimitive.displayName

const CommandDialog = ({ children, ...props }: DialogProps) => {
  return (
    <Dialog {...props}>
      <DialogContent className="overflow-hidden p-0">
        <Command className="[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5">
          {children}
        </Command>
      </DialogContent>
    </Dialog>
  )
}

const CommandInput = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Input>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>
>(({ className, ...props }, ref) => (
  <div className="flex items-center border-b px-3" cmdk-input-wrapper="">
    <Search className="mr-2 h-4 w-4 shrink-0 opacity-50" />
    <CommandPrimitive.Input
      ref={ref}
      className={cn(
        "flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    />
  </div>
))

CommandInput.displayName = CommandPrimitive.Input.displayName

const CommandList = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.List
    ref={ref}
    className={cn("max-h-[300px] overflow-y-auto overflow-x-hidden", className)}
    {...props}
  />
))

CommandList.displayName = CommandPrimitive.List.displayName

const CommandEmpty = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Empty>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>
>((props, ref) => (
  <CommandPrimitive.Empty
    ref={ref}
    className="py-6 text-center text-sm"
    {...props}
  />
))

CommandEmpty.displayName = CommandPrimitive.Empty.displayName

const CommandGroup = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Group>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Group
    ref={ref}
    className={cn(
      "overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",
      className
    )}
    {...props}
  />
))

CommandGroup.displayName = CommandPrimitive.Group.displayName

const CommandSeparator = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 h-px bg-border", className)}
    {...props}
  />
))
CommandSeparator.displayName = CommandPrimitive.Separator.displayName

const CommandItem = React.forwardRef<
  React.ElementRef<typeof CommandPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>
>(({ className, ...props }, ref) => (
  <CommandPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      className
    )}
    {...props}
  />
))

CommandItem.displayName = CommandPrimitive.Item.displayName

const CommandShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
CommandShortcut.displayName = "CommandShortcut"

export {
  Command,
  CommandDialog,
  CommandInput,
  CommandList,
  CommandEmpty,
  CommandGroup,
  CommandItem,
  CommandShortcut,
  CommandSeparator,
}

================
File: src/components/ui/context-menu.tsx
================
"use client"

import * as React from "react"
import * as ContextMenuPrimitive from "@radix-ui/react-context-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const ContextMenu = ContextMenuPrimitive.Root

const ContextMenuTrigger = ContextMenuPrimitive.Trigger

const ContextMenuGroup = ContextMenuPrimitive.Group

const ContextMenuPortal = ContextMenuPrimitive.Portal

const ContextMenuSub = ContextMenuPrimitive.Sub

const ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup

const ContextMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <ContextMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </ContextMenuPrimitive.SubTrigger>
))
ContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName

const ContextMenuSubContent = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    )}
    {...props}
  />
))
ContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName

const ContextMenuContent = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.Portal>
    <ContextMenuPrimitive.Content
      ref={ref}
      className={cn(
        "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      )}
      {...props}
    />
  </ContextMenuPrimitive.Portal>
))
ContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName

const ContextMenuItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <ContextMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
ContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName

const ContextMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <ContextMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <ContextMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </ContextMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </ContextMenuPrimitive.CheckboxItem>
))
ContextMenuCheckboxItem.displayName =
  ContextMenuPrimitive.CheckboxItem.displayName

const ContextMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <ContextMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <ContextMenuPrimitive.ItemIndicator>
        <Circle className="h-4 w-4 fill-current" />
      </ContextMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </ContextMenuPrimitive.RadioItem>
))
ContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName

const ContextMenuLabel = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <ContextMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold text-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
ContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName

const ContextMenuSeparator = React.forwardRef<
  React.ElementRef<typeof ContextMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <ContextMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-border", className)}
    {...props}
  />
))
ContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName

const ContextMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
ContextMenuShortcut.displayName = "ContextMenuShortcut"

export {
  ContextMenu,
  ContextMenuTrigger,
  ContextMenuContent,
  ContextMenuItem,
  ContextMenuCheckboxItem,
  ContextMenuRadioItem,
  ContextMenuLabel,
  ContextMenuSeparator,
  ContextMenuShortcut,
  ContextMenuGroup,
  ContextMenuPortal,
  ContextMenuSub,
  ContextMenuSubContent,
  ContextMenuSubTrigger,
  ContextMenuRadioGroup,
}

================
File: src/components/ui/custom-button.tsx
================
import { ArrowUpRight } from 'lucide-react'
import Link from 'next/link'
import { Button } from './button'

interface CustomButtonProps {
	href: string
	children: React.ReactNode
	className?: string
	variant?: 'default' | 'wide'
}

export function CustomButton({
	href,
	children,
	className = '',
	variant = 'default',
}: CustomButtonProps) {
	const baseStyles =
		'h-11 rounded-lg bg-[#46B235] px-4 text-sm font-medium text-[#0F0F10] hover:bg-[#46b235a4] inline-flex items-center justify-center group transition-transform duration-300'
	const widthStyles = variant === 'wide' ? 'w-[217.94px]' : 'w-[140px]'

	return (
		<Button className={`${baseStyles} ${widthStyles} ${className}`}>
			<Link
				className="text-[#0F0F10] text-sm font-medium leading-5"
				href={href}>
				{children}
			</Link>
			<div className="ml-2 w-[30px] h-[30px] font-bold bg-[#68CC58] rounded-md flex items-center justify-center transition-transform duration-300 group-hover:-translate-y-[3px] group-hover:translate-x-1">
				<ArrowUpRight className="w-5 h-5" />
			</div>
		</Button>
	)
}

================
File: src/components/ui/dialog.tsx
================
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Dialog = DialogPrimitive.Root

const DialogTrigger = DialogPrimitive.Trigger

const DialogPortal = DialogPrimitive.Portal

const DialogClose = DialogPrimitive.Close

const DialogOverlay = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Overlay
    ref={ref}
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
  />
))
DialogOverlay.displayName = DialogPrimitive.Overlay.displayName

const DialogContent = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DialogPortal>
    <DialogOverlay />
    <DialogPrimitive.Content
      ref={ref}
      className={cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      )}
      {...props}
    >
      {children}
      <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </DialogPrimitive.Close>
    </DialogPrimitive.Content>
  </DialogPortal>
))
DialogContent.displayName = DialogPrimitive.Content.displayName

const DialogHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
DialogHeader.displayName = "DialogHeader"

const DialogFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
DialogFooter.displayName = "DialogFooter"

const DialogTitle = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DialogTitle.displayName = DialogPrimitive.Title.displayName

const DialogDescription = React.forwardRef<
  React.ElementRef<typeof DialogPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DialogPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DialogDescription.displayName = DialogPrimitive.Description.displayName

export {
  Dialog,
  DialogPortal,
  DialogOverlay,
  DialogTrigger,
  DialogClose,
  DialogContent,
  DialogHeader,
  DialogFooter,
  DialogTitle,
  DialogDescription,
}

================
File: src/components/ui/drawer.tsx
================
"use client"

import * as React from "react"
import { Drawer as DrawerPrimitive } from "vaul"

import { cn } from "@/lib/utils"

const Drawer = ({
  shouldScaleBackground = true,
  ...props
}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (
  <DrawerPrimitive.Root
    shouldScaleBackground={shouldScaleBackground}
    {...props}
  />
)
Drawer.displayName = "Drawer"

const DrawerTrigger = DrawerPrimitive.Trigger

const DrawerPortal = DrawerPrimitive.Portal

const DrawerClose = DrawerPrimitive.Close

const DrawerOverlay = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Overlay
    ref={ref}
    className={cn("fixed inset-0 z-50 bg-black/80", className)}
    {...props}
  />
))
DrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName

const DrawerContent = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>
>(({ className, children, ...props }, ref) => (
  <DrawerPortal>
    <DrawerOverlay />
    <DrawerPrimitive.Content
      ref={ref}
      className={cn(
        "fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background",
        className
      )}
      {...props}
    >
      <div className="mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted" />
      {children}
    </DrawerPrimitive.Content>
  </DrawerPortal>
))
DrawerContent.displayName = "DrawerContent"

const DrawerHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn("grid gap-1.5 p-4 text-center sm:text-left", className)}
    {...props}
  />
)
DrawerHeader.displayName = "DrawerHeader"

const DrawerFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn("mt-auto flex flex-col gap-2 p-4", className)}
    {...props}
  />
)
DrawerFooter.displayName = "DrawerFooter"

const DrawerTitle = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Title
    ref={ref}
    className={cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    )}
    {...props}
  />
))
DrawerTitle.displayName = DrawerPrimitive.Title.displayName

const DrawerDescription = React.forwardRef<
  React.ElementRef<typeof DrawerPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>
>(({ className, ...props }, ref) => (
  <DrawerPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
DrawerDescription.displayName = DrawerPrimitive.Description.displayName

export {
  Drawer,
  DrawerPortal,
  DrawerOverlay,
  DrawerTrigger,
  DrawerClose,
  DrawerContent,
  DrawerHeader,
  DrawerFooter,
  DrawerTitle,
  DrawerDescription,
}

================
File: src/components/ui/dropdown-menu.tsx
================
"use client"

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const DropdownMenu = DropdownMenuPrimitive.Root

const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger

const DropdownMenuGroup = DropdownMenuPrimitive.Group

const DropdownMenuPortal = DropdownMenuPrimitive.Portal

const DropdownMenuSub = DropdownMenuPrimitive.Sub

const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup

const DropdownMenuSubTrigger = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <DropdownMenuPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto" />
  </DropdownMenuPrimitive.SubTrigger>
))
DropdownMenuSubTrigger.displayName =
  DropdownMenuPrimitive.SubTrigger.displayName

const DropdownMenuSubContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    )}
    {...props}
  />
))
DropdownMenuSubContent.displayName =
  DropdownMenuPrimitive.SubContent.displayName

const DropdownMenuContent = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <DropdownMenuPrimitive.Portal>
    <DropdownMenuPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md",
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      )}
      {...props}
    />
  </DropdownMenuPrimitive.Portal>
))
DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName

const DropdownMenuItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&>svg]:size-4 [&>svg]:shrink-0",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName

const DropdownMenuCheckboxItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <DropdownMenuPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.CheckboxItem>
))
DropdownMenuCheckboxItem.displayName =
  DropdownMenuPrimitive.CheckboxItem.displayName

const DropdownMenuRadioItem = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <DropdownMenuPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <DropdownMenuPrimitive.ItemIndicator>
        <Circle className="h-2 w-2 fill-current" />
      </DropdownMenuPrimitive.ItemIndicator>
    </span>
    {children}
  </DropdownMenuPrimitive.RadioItem>
))
DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName

const DropdownMenuLabel = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <DropdownMenuPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName

const DropdownMenuSeparator = React.forwardRef<
  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <DropdownMenuPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName

const DropdownMenuShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn("ml-auto text-xs tracking-widest opacity-60", className)}
      {...props}
    />
  )
}
DropdownMenuShortcut.displayName = "DropdownMenuShortcut"

export {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioItem,
  DropdownMenuLabel,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuGroup,
  DropdownMenuPortal,
  DropdownMenuSub,
  DropdownMenuSubContent,
  DropdownMenuSubTrigger,
  DropdownMenuRadioGroup,
}

================
File: src/components/ui/file-tree.tsx
================
"use client";

import * as AccordionPrimitive from "@radix-ui/react-accordion";
import { FileIcon, FolderIcon, FolderOpenIcon } from "lucide-react";
import React, {
  createContext,
  forwardRef,
  useCallback,
  useContext,
  useEffect,
  useState,
} from "react";

import { Button } from "@/components/ui/button";
import { ScrollArea } from "@/components/ui/scroll-area";
import { cn } from "@/lib/utils";

type TreeViewElement = {
  id: string;
  name: string;
  isSelectable?: boolean;
  children?: TreeViewElement[];
};

type TreeContextProps = {
  selectedId: string | undefined;
  expandedItems: string[] | undefined;
  indicator: boolean;
  handleExpand: (id: string) => void;
  selectItem: (id: string) => void;
  setExpandedItems?: React.Dispatch<React.SetStateAction<string[] | undefined>>;
  openIcon?: React.ReactNode;
  closeIcon?: React.ReactNode;
  direction: "rtl" | "ltr";
};

const TreeContext = createContext<TreeContextProps | null>(null);

const useTree = () => {
  const context = useContext(TreeContext);
  if (!context) {
    throw new Error("useTree must be used within a TreeProvider");
  }
  return context;
};

interface TreeViewComponentProps extends React.HTMLAttributes<HTMLDivElement> {}

type Direction = "rtl" | "ltr" | undefined;

type TreeViewProps = {
  initialSelectedId?: string;
  indicator?: boolean;
  elements?: TreeViewElement[];
  initialExpandedItems?: string[];
  openIcon?: React.ReactNode;
  closeIcon?: React.ReactNode;
} & TreeViewComponentProps;

const Tree = forwardRef<HTMLDivElement, TreeViewProps>(
  (
    {
      className,
      elements,
      initialSelectedId,
      initialExpandedItems,
      children,
      indicator = true,
      openIcon,
      closeIcon,
      dir,
      ...props
    },
    ref,
  ) => {
    const [selectedId, setSelectedId] = useState<string | undefined>(
      initialSelectedId,
    );
    const [expandedItems, setExpandedItems] = useState<string[] | undefined>(
      initialExpandedItems,
    );

    const selectItem = useCallback((id: string) => {
      setSelectedId(id);
    }, []);

    const handleExpand = useCallback((id: string) => {
      setExpandedItems((prev) => {
        if (prev?.includes(id)) {
          return prev.filter((item) => item !== id);
        }
        return [...(prev ?? []), id];
      });
    }, []);

    const expandSpecificTargetedElements = useCallback(
      (elements?: TreeViewElement[], selectId?: string) => {
        if (!elements || !selectId) return;
        const findParent = (
          currentElement: TreeViewElement,
          currentPath: string[] = [],
        ) => {
          const isSelectable = currentElement.isSelectable ?? true;
          const newPath = [...currentPath, currentElement.id];
          if (currentElement.id === selectId) {
            if (isSelectable) {
              setExpandedItems((prev) => [...(prev ?? []), ...newPath]);
            } else {
              if (newPath.includes(currentElement.id)) {
                newPath.pop();
                setExpandedItems((prev) => [...(prev ?? []), ...newPath]);
              }
            }
            return;
          }
          if (
            isSelectable &&
            currentElement.children &&
            currentElement.children.length > 0
          ) {
            currentElement.children.forEach((child) => {
              findParent(child, newPath);
            });
          }
        };
        elements.forEach((element) => {
          findParent(element);
        });
      },
      [],
    );

    useEffect(() => {
      if (initialSelectedId) {
        expandSpecificTargetedElements(elements, initialSelectedId);
      }
    }, [initialSelectedId, elements]);

    const direction = dir === "rtl" ? "rtl" : "ltr";

    return (
      <TreeContext.Provider
        value={{
          selectedId,
          expandedItems,
          handleExpand,
          selectItem,
          setExpandedItems,
          indicator,
          openIcon,
          closeIcon,
          direction,
        }}
      >
        <div className={cn("size-full", className)}>
          <ScrollArea
            ref={ref}
            className="relative h-full px-2"
            dir={dir as Direction}
          >
            <AccordionPrimitive.Root
              {...props}
              type="multiple"
              defaultValue={expandedItems}
              value={expandedItems}
              className="flex flex-col gap-1"
              onValueChange={(value) =>
                setExpandedItems((prev) => [...(prev ?? []), value[0]])
              }
              dir={dir as Direction}
            >
              {children}
            </AccordionPrimitive.Root>
          </ScrollArea>
        </div>
      </TreeContext.Provider>
    );
  },
);

Tree.displayName = "Tree";

const TreeIndicator = forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const { direction } = useTree();

  return (
    <div
      dir={direction}
      ref={ref}
      className={cn(
        "absolute left-1.5 h-full w-px rounded-md bg-muted py-3 duration-300 ease-in-out hover:bg-slate-300 rtl:right-1.5",
        className,
      )}
      {...props}
    />
  );
});

TreeIndicator.displayName = "TreeIndicator";

interface FolderComponentProps
  extends React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item> {}

type FolderProps = {
  expandedItems?: string[];
  element: string;
  isSelectable?: boolean;
  isSelect?: boolean;
} & FolderComponentProps;

const Folder = forwardRef<
  HTMLDivElement,
  FolderProps & React.HTMLAttributes<HTMLDivElement>
>(
  (
    {
      className,
      element,
      value,
      isSelectable = true,
      isSelect,
      children,
      ...props
    },
    ref,
  ) => {
    const {
      direction,
      handleExpand,
      expandedItems,
      indicator,
      setExpandedItems,
      openIcon,
      closeIcon,
    } = useTree();

    return (
      <AccordionPrimitive.Item
        {...props}
        value={value}
        className="relative h-full overflow-hidden"
      >
        <AccordionPrimitive.Trigger
          className={cn(
            `flex items-center gap-1 rounded-md text-sm`,
            className,
            {
              "bg-muted rounded-md": isSelect && isSelectable,
              "cursor-pointer": isSelectable,
              "cursor-not-allowed opacity-50": !isSelectable,
            },
          )}
          disabled={!isSelectable}
          onClick={() => handleExpand(value)}
        >
          {expandedItems?.includes(value)
            ? (openIcon ?? <FolderOpenIcon className="size-4" />)
            : (closeIcon ?? <FolderIcon className="size-4" />)}
          <span>{element}</span>
        </AccordionPrimitive.Trigger>
        <AccordionPrimitive.Content className="relative h-full overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down">
          {element && indicator && <TreeIndicator aria-hidden="true" />}
          <AccordionPrimitive.Root
            dir={direction}
            type="multiple"
            className="ml-5 flex flex-col gap-1 py-1 rtl:mr-5 "
            defaultValue={expandedItems}
            value={expandedItems}
            onValueChange={(value) => {
              setExpandedItems?.((prev) => [...(prev ?? []), value[0]]);
            }}
          >
            {children}
          </AccordionPrimitive.Root>
        </AccordionPrimitive.Content>
      </AccordionPrimitive.Item>
    );
  },
);

Folder.displayName = "Folder";

const File = forwardRef<
  HTMLButtonElement,
  {
    value: string;
    handleSelect?: (id: string) => void;
    isSelectable?: boolean;
    isSelect?: boolean;
    fileIcon?: React.ReactNode;
  } & React.ButtonHTMLAttributes<HTMLButtonElement>
>(
  (
    {
      value,
      className,
      handleSelect,
      isSelectable = true,
      isSelect,
      fileIcon,
      children,
      ...props
    },
    ref,
  ) => {
    const { direction, selectedId, selectItem } = useTree();
    const isSelected = isSelect ?? selectedId === value;
    return (
      <button
        ref={ref}
        type="button"
        disabled={!isSelectable}
        className={cn(
          "flex w-fit items-center gap-1 rounded-md pr-1 text-sm duration-200 ease-in-out rtl:pl-1 rtl:pr-0",
          {
            "bg-muted": isSelected && isSelectable,
          },
          isSelectable ? "cursor-pointer" : "cursor-not-allowed opacity-50",
          direction === "rtl" ? "rtl" : "ltr",
          className,
        )}
        onClick={() => selectItem(value)}
        {...props}
      >
        {fileIcon ?? <FileIcon className="size-4" />}
        {children}
      </button>
    );
  },
);

File.displayName = "File";

const CollapseButton = forwardRef<
  HTMLButtonElement,
  {
    elements: TreeViewElement[];
    expandAll?: boolean;
  } & React.HTMLAttributes<HTMLButtonElement>
>(({ className, elements, expandAll = false, children, ...props }, ref) => {
  const { expandedItems, setExpandedItems } = useTree();

  const expendAllTree = useCallback((elements: TreeViewElement[]) => {
    const expandTree = (element: TreeViewElement) => {
      const isSelectable = element.isSelectable ?? true;
      if (isSelectable && element.children && element.children.length > 0) {
        setExpandedItems?.((prev) => [...(prev ?? []), element.id]);
        element.children.forEach(expandTree);
      }
    };

    elements.forEach(expandTree);
  }, []);

  const closeAll = useCallback(() => {
    setExpandedItems?.([]);
  }, []);

  useEffect(() => {
    console.log(expandAll);
    if (expandAll) {
      expendAllTree(elements);
    }
  }, [expandAll]);

  return (
    <Button
      variant={"ghost"}
      className="absolute bottom-1 right-2 h-8 w-fit p-1"
      onClick={
        expandedItems && expandedItems.length > 0
          ? closeAll
          : () => expendAllTree(elements)
      }
      ref={ref}
      {...props}
    >
      {children}
      <span className="sr-only">Toggle</span>
    </Button>
  );
});

CollapseButton.displayName = "CollapseButton";

export { CollapseButton, File, Folder, Tree, type TreeViewElement };

================
File: src/components/ui/form.tsx
================
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { Slot } from "@radix-ui/react-slot"
import {
  Controller,
  ControllerProps,
  FieldPath,
  FieldValues,
  FormProvider,
  useFormContext,
} from "react-hook-form"

import { cn } from "@/lib/utils"
import { Label } from "@/components/ui/label"

const Form = FormProvider

type FormFieldContextValue<
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
> = {
  name: TName
}

const FormFieldContext = React.createContext<FormFieldContextValue>(
  {} as FormFieldContextValue
)

const FormField = <
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>
>({
  ...props
}: ControllerProps<TFieldValues, TName>) => {
  return (
    <FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>
  )
}

const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext)
  const itemContext = React.useContext(FormItemContext)
  const { getFieldState, formState } = useFormContext()

  const fieldState = getFieldState(fieldContext.name, formState)

  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>")
  }

  const { id } = itemContext

  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  }
}

type FormItemContextValue = {
  id: string
}

const FormItemContext = React.createContext<FormItemContextValue>(
  {} as FormItemContextValue
)

const FormItem = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => {
  const id = React.useId()

  return (
    <FormItemContext.Provider value={{ id }}>
      <div ref={ref} className={cn("space-y-2", className)} {...props} />
    </FormItemContext.Provider>
  )
})
FormItem.displayName = "FormItem"

const FormLabel = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
>(({ className, ...props }, ref) => {
  const { error, formItemId } = useFormField()

  return (
    <Label
      ref={ref}
      className={cn(error && "text-destructive", className)}
      htmlFor={formItemId}
      {...props}
    />
  )
})
FormLabel.displayName = "FormLabel"

const FormControl = React.forwardRef<
  React.ElementRef<typeof Slot>,
  React.ComponentPropsWithoutRef<typeof Slot>
>(({ ...props }, ref) => {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()

  return (
    <Slot
      ref={ref}
      id={formItemId}
      aria-describedby={
        !error
          ? `${formDescriptionId}`
          : `${formDescriptionId} ${formMessageId}`
      }
      aria-invalid={!!error}
      {...props}
    />
  )
})
FormControl.displayName = "FormControl"

const FormDescription = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, ...props }, ref) => {
  const { formDescriptionId } = useFormField()

  return (
    <p
      ref={ref}
      id={formDescriptionId}
      className={cn("text-[0.8rem] text-muted-foreground", className)}
      {...props}
    />
  )
})
FormDescription.displayName = "FormDescription"

const FormMessage = React.forwardRef<
  HTMLParagraphElement,
  React.HTMLAttributes<HTMLParagraphElement>
>(({ className, children, ...props }, ref) => {
  const { error, formMessageId } = useFormField()
  const body = error ? String(error?.message) : children

  if (!body) {
    return null
  }

  return (
    <p
      ref={ref}
      id={formMessageId}
      className={cn("text-[0.8rem] font-medium text-destructive", className)}
      {...props}
    >
      {body}
    </p>
  )
})
FormMessage.displayName = "FormMessage"

export {
  useFormField,
  Form,
  FormItem,
  FormLabel,
  FormControl,
  FormDescription,
  FormMessage,
  FormField,
}

================
File: src/components/ui/globe.tsx
================
'use client'

import createGlobe, { COBEOptions } from 'cobe'
import { useCallback, useEffect, useRef, useState } from 'react'

import { cn } from '@/lib/utils'

const GLOBE_CONFIG: COBEOptions = {
	width: 800,
	height: 800,
	onRender: () => {},
	devicePixelRatio: 2,
	phi: 0,
	theta: 0.3,
	dark: 0,
	diffuse: 0.4,
	mapSamples: 16000,
	mapBrightness: 1.2,
	baseColor: [1, 1, 1],
	markerColor: [251 / 255, 100 / 255, 21 / 255],
	glowColor: [1, 1, 1],
	markers: [
		{ location: [14.5995, 120.9842], size: 0.03 },
		{ location: [19.076, 72.8777], size: 0.1 },
		{ location: [23.8103, 90.4125], size: 0.05 },
		{ location: [30.0444, 31.2357], size: 0.07 },
		{ location: [39.9042, 116.4074], size: 0.08 },
		{ location: [-23.5505, -46.6333], size: 0.1 },
		{ location: [19.4326, -99.1332], size: 0.1 },
		{ location: [40.7128, -74.006], size: 0.1 },
		{ location: [34.6937, 135.5022], size: 0.05 },
		{ location: [41.0082, 28.9784], size: 0.06 },
	],
}

export function Globe({
	className,
	config = GLOBE_CONFIG,
}: {
	className?: string
	config?: COBEOptions
}) {
	let phi = 0
	let width = 0
	const canvasRef = useRef<HTMLCanvasElement>(null)
	const pointerInteracting = useRef(null)
	const pointerInteractionMovement = useRef(0)
	const [r, setR] = useState(0)

	const updatePointerInteraction = (value: any) => {
		pointerInteracting.current = value
		if (canvasRef.current) {
			canvasRef.current.style.cursor = value ? 'grabbing' : 'grab'
		}
	}

	const updateMovement = (clientX: any) => {
		if (pointerInteracting.current !== null) {
			const delta = clientX - pointerInteracting.current
			pointerInteractionMovement.current = delta
			setR(delta / 200)
		}
	}

	const onRender = useCallback(
		(state: Record<string, any>) => {
			if (!pointerInteracting.current) phi += 0.005
			state.phi = phi + r
			state.width = width * 2
			state.height = width * 2
		},
		[r]
	)

	const onResize = () => {
		if (canvasRef.current) {
			width = canvasRef.current.offsetWidth
		}
	}

	useEffect(() => {
		window.addEventListener('resize', onResize)
		onResize()

		const globe = createGlobe(canvasRef.current!, {
			...config,
			width: width * 2,
			height: width * 2,
			onRender,
		})

		setTimeout(() => (canvasRef.current!.style.opacity = '1'))
		return () => globe.destroy()
	}, [])

	return (
		<div
			className={cn(
				'absolute inset-0 mx-auto aspect-[1/1]  w-full max-w-[600px]',
				className
			)}>
			<canvas
				className={cn(
					'size-full opacity-0 transition-opacity duration-500 [contain:layout_paint_size]'
				)}
				ref={canvasRef}
				onPointerDown={(e) =>
					updatePointerInteraction(
						e.clientX - pointerInteractionMovement.current
					)
				}
				onPointerUp={() => updatePointerInteraction(null)}
				onPointerOut={() => updatePointerInteraction(null)}
				onMouseMove={(e) => updateMovement(e.clientX)}
				onTouchMove={(e) =>
					e.touches[0] && updateMovement(e.touches[0].clientX)
				}
			/>
		</div>
	)
}

================
File: src/components/ui/hover-card.tsx
================
"use client"

import * as React from "react"
import * as HoverCardPrimitive from "@radix-ui/react-hover-card"

import { cn } from "@/lib/utils"

const HoverCard = HoverCardPrimitive.Root

const HoverCardTrigger = HoverCardPrimitive.Trigger

const HoverCardContent = React.forwardRef<
  React.ElementRef<typeof HoverCardPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <HoverCardPrimitive.Content
    ref={ref}
    align={align}
    sideOffset={sideOffset}
    className={cn(
      "z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    )}
    {...props}
  />
))
HoverCardContent.displayName = HoverCardPrimitive.Content.displayName

export { HoverCard, HoverCardTrigger, HoverCardContent }

================
File: src/components/ui/icon-cloud.tsx
================
"use client";

import React, { useEffect, useRef, useState } from "react";
import { renderToString } from "react-dom/server";

interface Icon {
  x: number;
  y: number;
  z: number;
  scale: number;
  opacity: number;
  id: number;
}

interface IconCloudProps {
  icons?: React.ReactNode[];
  images?: string[];
}

function easeOutCubic(t: number): number {
  return 1 - Math.pow(1 - t, 3);
}

export function IconCloud({ icons, images }: IconCloudProps) {
  const canvasRef = useRef<HTMLCanvasElement>(null);
  const [iconPositions, setIconPositions] = useState<Icon[]>([]);
  const [rotation, setRotation] = useState({ x: 0, y: 0 });
  const [isDragging, setIsDragging] = useState(false);
  const [lastMousePos, setLastMousePos] = useState({ x: 0, y: 0 });
  const [mousePos, setMousePos] = useState({ x: 0, y: 0 });
  const [targetRotation, setTargetRotation] = useState<{
    x: number;
    y: number;
    startX: number;
    startY: number;
    distance: number;
    startTime: number;
    duration: number;
  } | null>(null);
  const animationFrameRef = useRef<number>();
  const rotationRef = useRef(rotation);
  const iconCanvasesRef = useRef<HTMLCanvasElement[]>([]);
  const imagesLoadedRef = useRef<boolean[]>([]);

  // Create icon canvases once when icons/images change
  useEffect(() => {
    if (!icons && !images) return;

    const items = icons || images || [];
    imagesLoadedRef.current = new Array(items.length).fill(false);

    const newIconCanvases = items.map((item, index) => {
      const offscreen = document.createElement("canvas");
      offscreen.width = 40;
      offscreen.height = 40;
      const offCtx = offscreen.getContext("2d");

      if (offCtx) {
        if (images) {
          // Handle image URLs directly
          const img = new Image();
          img.crossOrigin = "anonymous";
          img.src = items[index] as string;
          img.onload = () => {
            offCtx.clearRect(0, 0, offscreen.width, offscreen.height);

            // Create circular clipping path
            offCtx.beginPath();
            offCtx.arc(20, 20, 20, 0, Math.PI * 2);
            offCtx.closePath();
            offCtx.clip();

            // Draw the image
            offCtx.drawImage(img, 0, 0, 40, 40);

            imagesLoadedRef.current[index] = true;
          };
        } else {
          // Handle SVG icons
          offCtx.scale(0.4, 0.4);
          const svgString = renderToString(item as React.ReactElement);
          const img = new Image();
          img.src = "data:image/svg+xml;base64," + btoa(svgString);
          img.onload = () => {
            offCtx.clearRect(0, 0, offscreen.width, offscreen.height);
            offCtx.drawImage(img, 0, 0);
            imagesLoadedRef.current[index] = true;
          };
        }
      }
      return offscreen;
    });

    iconCanvasesRef.current = newIconCanvases;
  }, [icons, images]);

  // Generate initial icon positions on a sphere
  useEffect(() => {
    const items = icons || images || [];
    const newIcons: Icon[] = [];
    const numIcons = items.length || 20;

    // Fibonacci sphere parameters
    const offset = 2 / numIcons;
    const increment = Math.PI * (3 - Math.sqrt(5));

    for (let i = 0; i < numIcons; i++) {
      const y = i * offset - 1 + offset / 2;
      const r = Math.sqrt(1 - y * y);
      const phi = i * increment;

      const x = Math.cos(phi) * r;
      const z = Math.sin(phi) * r;

      newIcons.push({
        x: x * 100,
        y: y * 100,
        z: z * 100,
        scale: 1,
        opacity: 1,
        id: i,
      });
    }
    setIconPositions(newIcons);
  }, [icons, images]);

  // Handle mouse events
  const handleMouseDown = (e: React.MouseEvent<HTMLCanvasElement>) => {
    const rect = canvasRef.current?.getBoundingClientRect();
    if (!rect || !canvasRef.current) return;

    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;

    const ctx = canvasRef.current.getContext("2d");
    if (!ctx) return;

    iconPositions.forEach((icon) => {
      const cosX = Math.cos(rotationRef.current.x);
      const sinX = Math.sin(rotationRef.current.x);
      const cosY = Math.cos(rotationRef.current.y);
      const sinY = Math.sin(rotationRef.current.y);

      const rotatedX = icon.x * cosY - icon.z * sinY;
      const rotatedZ = icon.x * sinY + icon.z * cosY;
      const rotatedY = icon.y * cosX + rotatedZ * sinX;

      const screenX = canvasRef.current!.width / 2 + rotatedX;
      const screenY = canvasRef.current!.height / 2 + rotatedY;

      const scale = (rotatedZ + 200) / 300;
      const radius = 20 * scale;
      const dx = x - screenX;
      const dy = y - screenY;

      if (dx * dx + dy * dy < radius * radius) {
        const targetX = -Math.atan2(
          icon.y,
          Math.sqrt(icon.x * icon.x + icon.z * icon.z),
        );
        const targetY = Math.atan2(icon.x, icon.z);

        const currentX = rotationRef.current.x;
        const currentY = rotationRef.current.y;
        const distance = Math.sqrt(
          Math.pow(targetX - currentX, 2) + Math.pow(targetY - currentY, 2),
        );

        const duration = Math.min(2000, Math.max(800, distance * 1000));

        setTargetRotation({
          x: targetX,
          y: targetY,
          startX: currentX,
          startY: currentY,
          distance,
          startTime: performance.now(),
          duration,
        });
        return;
      }
    });

    setIsDragging(true);
    setLastMousePos({ x: e.clientX, y: e.clientY });
  };

  const handleMouseMove = (e: React.MouseEvent<HTMLCanvasElement>) => {
    const rect = canvasRef.current?.getBoundingClientRect();
    if (rect) {
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      setMousePos({ x, y });
    }

    if (isDragging) {
      const deltaX = e.clientX - lastMousePos.x;
      const deltaY = e.clientY - lastMousePos.y;

      rotationRef.current = {
        x: rotationRef.current.x + deltaY * 0.002,
        y: rotationRef.current.y + deltaX * 0.002,
      };

      setLastMousePos({ x: e.clientX, y: e.clientY });
    }
  };

  const handleMouseUp = () => {
    setIsDragging(false);
  };

  // Animation and rendering
  useEffect(() => {
    const canvas = canvasRef.current;
    const ctx = canvas?.getContext("2d");
    if (!canvas || !ctx) return;

    const animate = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);

      const centerX = canvas.width / 2;
      const centerY = canvas.height / 2;
      const maxDistance = Math.sqrt(centerX * centerX + centerY * centerY);
      const dx = mousePos.x - centerX;
      const dy = mousePos.y - centerY;
      const distance = Math.sqrt(dx * dx + dy * dy);
      const speed = 0.003 + (distance / maxDistance) * 0.01;

      if (targetRotation) {
        const elapsed = performance.now() - targetRotation.startTime;
        const progress = Math.min(1, elapsed / targetRotation.duration);
        const easedProgress = easeOutCubic(progress);

        rotationRef.current = {
          x:
            targetRotation.startX +
            (targetRotation.x - targetRotation.startX) * easedProgress,
          y:
            targetRotation.startY +
            (targetRotation.y - targetRotation.startY) * easedProgress,
        };

        if (progress >= 1) {
          setTargetRotation(null);
        }
      } else if (!isDragging) {
        rotationRef.current = {
          x: rotationRef.current.x + (dy / canvas.height) * speed,
          y: rotationRef.current.y + (dx / canvas.width) * speed,
        };
      }

      iconPositions.forEach((icon, index) => {
        const cosX = Math.cos(rotationRef.current.x);
        const sinX = Math.sin(rotationRef.current.x);
        const cosY = Math.cos(rotationRef.current.y);
        const sinY = Math.sin(rotationRef.current.y);

        const rotatedX = icon.x * cosY - icon.z * sinY;
        const rotatedZ = icon.x * sinY + icon.z * cosY;
        const rotatedY = icon.y * cosX + rotatedZ * sinX;

        const scale = (rotatedZ + 200) / 300;
        const opacity = Math.max(0.2, Math.min(1, (rotatedZ + 150) / 200));

        ctx.save();
        ctx.translate(
          canvas.width / 2 + rotatedX,
          canvas.height / 2 + rotatedY,
        );
        ctx.scale(scale, scale);
        ctx.globalAlpha = opacity;

        if (icons || images) {
          // Only try to render icons/images if they exist
          if (
            iconCanvasesRef.current[index] &&
            imagesLoadedRef.current[index]
          ) {
            ctx.drawImage(iconCanvasesRef.current[index], -20, -20, 40, 40);
          }
        } else {
          // Show numbered circles if no icons/images are provided
          ctx.beginPath();
          ctx.arc(0, 0, 20, 0, Math.PI * 2);
          ctx.fillStyle = "#4444ff";
          ctx.fill();
          ctx.fillStyle = "white";
          ctx.textAlign = "center";
          ctx.textBaseline = "middle";
          ctx.font = "16px Arial";
          ctx.fillText(`${icon.id + 1}`, 0, 0);
        }

        ctx.restore();
      });
      animationFrameRef.current = requestAnimationFrame(animate);
    };

    animate();

    return () => {
      if (animationFrameRef.current) {
        cancelAnimationFrame(animationFrameRef.current);
      }
    };
  }, [icons, images, iconPositions, isDragging, mousePos, targetRotation]);

  return (
    <canvas
      ref={canvasRef}
      width={400}
      height={400}
      onMouseDown={handleMouseDown}
      onMouseMove={handleMouseMove}
      onMouseUp={handleMouseUp}
      onMouseLeave={handleMouseUp}
      className="rounded-lg"
      aria-label="Interactive 3D Icon Cloud"
      role="img"
    />
  );
}

================
File: src/components/ui/input-otp.tsx
================
"use client"

import * as React from "react"
import { OTPInput, OTPInputContext } from "input-otp"
import { Minus } from "lucide-react"

import { cn } from "@/lib/utils"

const InputOTP = React.forwardRef<
  React.ElementRef<typeof OTPInput>,
  React.ComponentPropsWithoutRef<typeof OTPInput>
>(({ className, containerClassName, ...props }, ref) => (
  <OTPInput
    ref={ref}
    containerClassName={cn(
      "flex items-center gap-2 has-[:disabled]:opacity-50",
      containerClassName
    )}
    className={cn("disabled:cursor-not-allowed", className)}
    {...props}
  />
))
InputOTP.displayName = "InputOTP"

const InputOTPGroup = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div">
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("flex items-center", className)} {...props} />
))
InputOTPGroup.displayName = "InputOTPGroup"

const InputOTPSlot = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div"> & { index: number }
>(({ index, className, ...props }, ref) => {
  const inputOTPContext = React.useContext(OTPInputContext)
  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]

  return (
    <div
      ref={ref}
      className={cn(
        "relative flex h-9 w-9 items-center justify-center border-y border-r border-input text-sm shadow-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md",
        isActive && "z-10 ring-1 ring-ring",
        className
      )}
      {...props}
    >
      {char}
      {hasFakeCaret && (
        <div className="pointer-events-none absolute inset-0 flex items-center justify-center">
          <div className="h-4 w-px animate-caret-blink bg-foreground duration-1000" />
        </div>
      )}
    </div>
  )
})
InputOTPSlot.displayName = "InputOTPSlot"

const InputOTPSeparator = React.forwardRef<
  React.ElementRef<"div">,
  React.ComponentPropsWithoutRef<"div">
>(({ ...props }, ref) => (
  <div ref={ref} role="separator" {...props}>
    <Minus />
  </div>
))
InputOTPSeparator.displayName = "InputOTPSeparator"

export { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }

================
File: src/components/ui/input.tsx
================
import * as React from "react"

import { cn } from "@/lib/utils"

const Input = React.forwardRef<HTMLInputElement, React.ComponentProps<"input">>(
  ({ className, type, ...props }, ref) => {
    return (
      <input
        type={type}
        className={cn(
          "flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
          className
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Input.displayName = "Input"

export { Input }

================
File: src/components/ui/interactive-grid-pattern.tsx
================
'use client'
import { cn } from '@/lib/utils'
import React, { useState } from 'react'

/**
 * InteractiveGridPattern is a component that renders a grid pattern with interactive squares.
 *
 * @param width - The width of each square.
 * @param height - The height of each square.
 * @param squares - The number of squares in the grid. The first element is the number of horizontal squares, and the second element is the number of vertical squares.
 * @param className - The class name of the grid.
 * @param squaresClassName - The class name of the squares.
 */
interface InteractiveGridPatternProps extends React.SVGProps<SVGSVGElement> {
	width?: number
	height?: number
	squares?: [number, number] // [horizontal, vertical]
	className?: string
	squaresClassName?: string
}

/**
 * The InteractiveGridPattern component.
 *
 * @see InteractiveGridPatternProps for the props interface.
 * @returns A React component.
 */
export function InteractiveGridPattern({
	width = 40,
	height = 40,
	squares = [24, 24],
	className,
	squaresClassName,
	...props
}: InteractiveGridPatternProps) {
	const [horizontal, vertical] = squares
	const [hoveredSquare, setHoveredSquare] = useState<number | null>(null)

	return (
		<svg
			width={width * horizontal}
			height={height * vertical}
			className={cn(
				'absolute inset-0 h-full w-full border border-gray-400/30',
				className
			)}
			{...props}>
			{Array.from({ length: horizontal * vertical }).map((_, index) => {
				const x = (index % horizontal) * width
				const y = Math.floor(index / horizontal) * height
				return (
					<rect
						key={index}
						x={x}
						y={y}
						width={width}
						height={height}
						className={cn(
							'stroke-gray-400/30 transition-all duration-100 ease-in-out [&:not(:hover)]:duration-1000',
							hoveredSquare === index ? 'fill-gray-300/30' : 'fill-transparent',
							squaresClassName
						)}
						onMouseEnter={() => setHoveredSquare(index)}
						onMouseLeave={() => setHoveredSquare(null)}
					/>
				)
			})}
		</svg>
	)
}

================
File: src/components/ui/label.tsx
================
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
)

const Label = React.forwardRef<
  React.ElementRef<typeof LabelPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &
    VariantProps<typeof labelVariants>
>(({ className, ...props }, ref) => (
  <LabelPrimitive.Root
    ref={ref}
    className={cn(labelVariants(), className)}
    {...props}
  />
))
Label.displayName = LabelPrimitive.Root.displayName

export { Label }

================
File: src/components/ui/marquee.tsx
================
import { cn } from "@/lib/utils";
import { ComponentPropsWithoutRef } from "react";

interface MarqueeProps extends ComponentPropsWithoutRef<"div"> {
  /**
   * Optional CSS class name to apply custom styles
   */
  className?: string;
  /**
   * Whether to reverse the animation direction
   * @default false
   */
  reverse?: boolean;
  /**
   * Whether to pause the animation on hover
   * @default false
   */
  pauseOnHover?: boolean;
  /**
   * Content to be displayed in the marquee
   */
  children: React.ReactNode;
  /**
   * Whether to animate vertically instead of horizontally
   * @default false
   */
  vertical?: boolean;
  /**
   * Number of times to repeat the content
   * @default 4
   */
  repeat?: number;
}

export function Marquee({
  className,
  reverse = false,
  pauseOnHover = false,
  children,
  vertical = false,
  repeat = 4,
  ...props
}: MarqueeProps) {
  return (
    <div
      {...props}
      className={cn(
        "group flex overflow-hidden p-2 [--duration:40s] [--gap:1rem] [gap:var(--gap)]",
        {
          "flex-row": !vertical,
          "flex-col": vertical,
        },
        className,
      )}
    >
      {Array(repeat)
        .fill(0)
        .map((_, i) => (
          <div
            key={i}
            className={cn("flex shrink-0 justify-around [gap:var(--gap)]", {
              "animate-marquee flex-row": !vertical,
              "animate-marquee-vertical flex-col": vertical,
              "group-hover:[animation-play-state:paused]": pauseOnHover,
              "[animation-direction:reverse]": reverse,
            })}
          >
            {children}
          </div>
        ))}
    </div>
  );
}

================
File: src/components/ui/menubar.tsx
================
"use client"

import * as React from "react"
import * as MenubarPrimitive from "@radix-ui/react-menubar"
import { Check, ChevronRight, Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const MenubarMenu = MenubarPrimitive.Menu

const MenubarGroup = MenubarPrimitive.Group

const MenubarPortal = MenubarPrimitive.Portal

const MenubarSub = MenubarPrimitive.Sub

const MenubarRadioGroup = MenubarPrimitive.RadioGroup

const Menubar = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Root
    ref={ref}
    className={cn(
      "flex h-9 items-center space-x-1 rounded-md border bg-background p-1 shadow-sm",
      className
    )}
    {...props}
  />
))
Menubar.displayName = MenubarPrimitive.Root.displayName

const MenubarTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-3 py-1 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      className
    )}
    {...props}
  />
))
MenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName

const MenubarSubTrigger = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {
    inset?: boolean
  }
>(({ className, inset, children, ...props }, ref) => (
  <MenubarPrimitive.SubTrigger
    ref={ref}
    className={cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      inset && "pl-8",
      className
    )}
    {...props}
  >
    {children}
    <ChevronRight className="ml-auto h-4 w-4" />
  </MenubarPrimitive.SubTrigger>
))
MenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName

const MenubarSubContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.SubContent>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.SubContent
    ref={ref}
    className={cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    )}
    {...props}
  />
))
MenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName

const MenubarContent = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>
>(
  (
    { className, align = "start", alignOffset = -4, sideOffset = 8, ...props },
    ref
  ) => (
    <MenubarPrimitive.Portal>
      <MenubarPrimitive.Content
        ref={ref}
        align={align}
        alignOffset={alignOffset}
        sideOffset={sideOffset}
        className={cn(
          "z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
          className
        )}
        {...props}
      />
    </MenubarPrimitive.Portal>
  )
)
MenubarContent.displayName = MenubarPrimitive.Content.displayName

const MenubarItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
MenubarItem.displayName = MenubarPrimitive.Item.displayName

const MenubarCheckboxItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>
>(({ className, children, checked, ...props }, ref) => (
  <MenubarPrimitive.CheckboxItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    checked={checked}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.CheckboxItem>
))
MenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName

const MenubarRadioItem = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.RadioItem>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>
>(({ className, children, ...props }, ref) => (
  <MenubarPrimitive.RadioItem
    ref={ref}
    className={cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
      <MenubarPrimitive.ItemIndicator>
        <Circle className="h-4 w-4 fill-current" />
      </MenubarPrimitive.ItemIndicator>
    </span>
    {children}
  </MenubarPrimitive.RadioItem>
))
MenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName

const MenubarLabel = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {
    inset?: boolean
  }
>(({ className, inset, ...props }, ref) => (
  <MenubarPrimitive.Label
    ref={ref}
    className={cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    )}
    {...props}
  />
))
MenubarLabel.displayName = MenubarPrimitive.Label.displayName

const MenubarSeparator = React.forwardRef<
  React.ElementRef<typeof MenubarPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <MenubarPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
MenubarSeparator.displayName = MenubarPrimitive.Separator.displayName

const MenubarShortcut = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLSpanElement>) => {
  return (
    <span
      className={cn(
        "ml-auto text-xs tracking-widest text-muted-foreground",
        className
      )}
      {...props}
    />
  )
}
MenubarShortcut.displayname = "MenubarShortcut"

export {
  Menubar,
  MenubarMenu,
  MenubarTrigger,
  MenubarContent,
  MenubarItem,
  MenubarSeparator,
  MenubarLabel,
  MenubarCheckboxItem,
  MenubarRadioGroup,
  MenubarRadioItem,
  MenubarPortal,
  MenubarSubContent,
  MenubarSubTrigger,
  MenubarGroup,
  MenubarSub,
  MenubarShortcut,
}

================
File: src/components/ui/navigation-menu.tsx
================
import * as React from "react"
import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu"
import { cva } from "class-variance-authority"
import { ChevronDown } from "lucide-react"

import { cn } from "@/lib/utils"

const NavigationMenu = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Root
    ref={ref}
    className={cn(
      "relative z-10 flex max-w-max flex-1 items-center justify-center",
      className
    )}
    {...props}
  >
    {children}
    <NavigationMenuViewport />
  </NavigationMenuPrimitive.Root>
))
NavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName

const NavigationMenuList = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.List
    ref={ref}
    className={cn(
      "group flex flex-1 list-none items-center justify-center space-x-1",
      className
    )}
    {...props}
  />
))
NavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName

const NavigationMenuItem = NavigationMenuPrimitive.Item

const navigationMenuTriggerStyle = cva(
  "group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50"
)

const NavigationMenuTrigger = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <NavigationMenuPrimitive.Trigger
    ref={ref}
    className={cn(navigationMenuTriggerStyle(), "group", className)}
    {...props}
  >
    {children}{" "}
    <ChevronDown
      className="relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180"
      aria-hidden="true"
    />
  </NavigationMenuPrimitive.Trigger>
))
NavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName

const NavigationMenuContent = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Content
    ref={ref}
    className={cn(
      "left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto ",
      className
    )}
    {...props}
  />
))
NavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName

const NavigationMenuLink = NavigationMenuPrimitive.Link

const NavigationMenuViewport = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>
>(({ className, ...props }, ref) => (
  <div className={cn("absolute left-0 top-full flex justify-center")}>
    <NavigationMenuPrimitive.Viewport
      className={cn(
        "origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]",
        className
      )}
      ref={ref}
      {...props}
    />
  </div>
))
NavigationMenuViewport.displayName =
  NavigationMenuPrimitive.Viewport.displayName

const NavigationMenuIndicator = React.forwardRef<
  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,
  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>
>(({ className, ...props }, ref) => (
  <NavigationMenuPrimitive.Indicator
    ref={ref}
    className={cn(
      "top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in",
      className
    )}
    {...props}
  >
    <div className="relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md" />
  </NavigationMenuPrimitive.Indicator>
))
NavigationMenuIndicator.displayName =
  NavigationMenuPrimitive.Indicator.displayName

export {
  navigationMenuTriggerStyle,
  NavigationMenu,
  NavigationMenuList,
  NavigationMenuItem,
  NavigationMenuContent,
  NavigationMenuTrigger,
  NavigationMenuLink,
  NavigationMenuIndicator,
  NavigationMenuViewport,
}

================
File: src/components/ui/orbiting-circles.tsx
================
import { cn } from '@/lib/utils'
import React from 'react'

export interface OrbitingCirclesProps
	extends React.HTMLAttributes<HTMLDivElement> {
	className?: string
	children?: React.ReactNode
	reverse?: boolean
	duration?: number
	delay?: number
	radius?: number
	path?: boolean
	iconSize?: number
	speed?: number
}

export function OrbitingCircles({
	className,
	children,
	reverse,
	duration = 20,
	radius = 160,
	path = true,
	iconSize = 30,
	speed = 1,
	...props
}: OrbitingCirclesProps) {
	const calculatedDuration = duration / speed
	return (
		<>
			{path && (
				<svg
					xmlns="http://www.w3.org/2000/svg"
					version="1.1"
					className="pointer-events-none absolute inset-0 size-full">
					<circle
						className="stroke-[#404245] stroke-1 dark:stroke-white/10"
						cx="50%"
						cy="50%"
						r={radius}
						fill="none"
					/>
				</svg>
			)}
			{React.Children.map(children, (child, index) => {
				const angle = (360 / React.Children.count(children)) * index
				return (
					<div
						style={
							{
								'--duration': calculatedDuration,
								'--radius': radius,
								'--angle': angle,
								'--icon-size': `${iconSize}px`,
							} as React.CSSProperties
						}
						className={cn(
							`absolute flex size-[var(--icon-size)] transform-gpu animate-orbit items-center justify-center rounded-full`,
							{ '[animation-direction:reverse]': reverse },
							className
						)}
						{...props}>
						{child}
					</div>
				)
			})}
		</>
	)
}

================
File: src/components/ui/pagination.tsx
================
import * as React from "react"
import { ChevronLeft, ChevronRight, MoreHorizontal } from "lucide-react"

import { cn } from "@/lib/utils"
import { ButtonProps, buttonVariants } from "@/components/ui/button"

const Pagination = ({ className, ...props }: React.ComponentProps<"nav">) => (
  <nav
    role="navigation"
    aria-label="pagination"
    className={cn("mx-auto flex w-full justify-center", className)}
    {...props}
  />
)
Pagination.displayName = "Pagination"

const PaginationContent = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    className={cn("flex flex-row items-center gap-1", className)}
    {...props}
  />
))
PaginationContent.displayName = "PaginationContent"

const PaginationItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ className, ...props }, ref) => (
  <li ref={ref} className={cn("", className)} {...props} />
))
PaginationItem.displayName = "PaginationItem"

type PaginationLinkProps = {
  isActive?: boolean
} & Pick<ButtonProps, "size"> &
  React.ComponentProps<"a">

const PaginationLink = ({
  className,
  isActive,
  size = "icon",
  ...props
}: PaginationLinkProps) => (
  <a
    aria-current={isActive ? "page" : undefined}
    className={cn(
      buttonVariants({
        variant: isActive ? "outline" : "ghost",
        size,
      }),
      className
    )}
    {...props}
  />
)
PaginationLink.displayName = "PaginationLink"

const PaginationPrevious = ({
  className,
  ...props
}: React.ComponentProps<typeof PaginationLink>) => (
  <PaginationLink
    aria-label="Go to previous page"
    size="default"
    className={cn("gap-1 pl-2.5", className)}
    {...props}
  >
    <ChevronLeft className="h-4 w-4" />
    <span>Previous</span>
  </PaginationLink>
)
PaginationPrevious.displayName = "PaginationPrevious"

const PaginationNext = ({
  className,
  ...props
}: React.ComponentProps<typeof PaginationLink>) => (
  <PaginationLink
    aria-label="Go to next page"
    size="default"
    className={cn("gap-1 pr-2.5", className)}
    {...props}
  >
    <span>Next</span>
    <ChevronRight className="h-4 w-4" />
  </PaginationLink>
)
PaginationNext.displayName = "PaginationNext"

const PaginationEllipsis = ({
  className,
  ...props
}: React.ComponentProps<"span">) => (
  <span
    aria-hidden
    className={cn("flex h-9 w-9 items-center justify-center", className)}
    {...props}
  >
    <MoreHorizontal className="h-4 w-4" />
    <span className="sr-only">More pages</span>
  </span>
)
PaginationEllipsis.displayName = "PaginationEllipsis"

export {
  Pagination,
  PaginationContent,
  PaginationLink,
  PaginationItem,
  PaginationPrevious,
  PaginationNext,
  PaginationEllipsis,
}

================
File: src/components/ui/popover.tsx
================
"use client"

import * as React from "react"
import * as PopoverPrimitive from "@radix-ui/react-popover"

import { cn } from "@/lib/utils"

const Popover = PopoverPrimitive.Root

const PopoverTrigger = PopoverPrimitive.Trigger

const PopoverAnchor = PopoverPrimitive.Anchor

const PopoverContent = React.forwardRef<
  React.ElementRef<typeof PopoverPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>
>(({ className, align = "center", sideOffset = 4, ...props }, ref) => (
  <PopoverPrimitive.Portal>
    <PopoverPrimitive.Content
      ref={ref}
      align={align}
      sideOffset={sideOffset}
      className={cn(
        "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      )}
      {...props}
    />
  </PopoverPrimitive.Portal>
))
PopoverContent.displayName = PopoverPrimitive.Content.displayName

export { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }

================
File: src/components/ui/progress.tsx
================
"use client"

import * as React from "react"
import * as ProgressPrimitive from "@radix-ui/react-progress"

import { cn } from "@/lib/utils"

const Progress = React.forwardRef<
  React.ElementRef<typeof ProgressPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>
>(({ className, value, ...props }, ref) => (
  <ProgressPrimitive.Root
    ref={ref}
    className={cn(
      "relative h-2 w-full overflow-hidden rounded-full bg-primary/20",
      className
    )}
    {...props}
  >
    <ProgressPrimitive.Indicator
      className="h-full w-full flex-1 bg-primary transition-all"
      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}
    />
  </ProgressPrimitive.Root>
))
Progress.displayName = ProgressPrimitive.Root.displayName

export { Progress }

================
File: src/components/ui/radio-group.tsx
================
"use client"

import * as React from "react"
import * as RadioGroupPrimitive from "@radix-ui/react-radio-group"
import { Circle } from "lucide-react"

import { cn } from "@/lib/utils"

const RadioGroup = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Root
      className={cn("grid gap-2", className)}
      {...props}
      ref={ref}
    />
  )
})
RadioGroup.displayName = RadioGroupPrimitive.Root.displayName

const RadioGroupItem = React.forwardRef<
  React.ElementRef<typeof RadioGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>
>(({ className, ...props }, ref) => {
  return (
    <RadioGroupPrimitive.Item
      ref={ref}
      className={cn(
        "aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",
        className
      )}
      {...props}
    >
      <RadioGroupPrimitive.Indicator className="flex items-center justify-center">
        <Circle className="h-3.5 w-3.5 fill-primary" />
      </RadioGroupPrimitive.Indicator>
    </RadioGroupPrimitive.Item>
  )
})
RadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName

export { RadioGroup, RadioGroupItem }

================
File: src/components/ui/resizable.tsx
================
"use client"

import { GripVertical } from "lucide-react"
import * as ResizablePrimitive from "react-resizable-panels"

import { cn } from "@/lib/utils"

const ResizablePanelGroup = ({
  className,
  ...props
}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (
  <ResizablePrimitive.PanelGroup
    className={cn(
      "flex h-full w-full data-[panel-group-direction=vertical]:flex-col",
      className
    )}
    {...props}
  />
)

const ResizablePanel = ResizablePrimitive.Panel

const ResizableHandle = ({
  withHandle,
  className,
  ...props
}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {
  withHandle?: boolean
}) => (
  <ResizablePrimitive.PanelResizeHandle
    className={cn(
      "relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90",
      className
    )}
    {...props}
  >
    {withHandle && (
      <div className="z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border">
        <GripVertical className="h-2.5 w-2.5" />
      </div>
    )}
  </ResizablePrimitive.PanelResizeHandle>
)

export { ResizablePanelGroup, ResizablePanel, ResizableHandle }

================
File: src/components/ui/scroll-area.tsx
================
"use client"

import * as React from "react"
import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"

import { cn } from "@/lib/utils"

const ScrollArea = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
>(({ className, children, ...props }, ref) => (
  <ScrollAreaPrimitive.Root
    ref={ref}
    className={cn("relative overflow-hidden", className)}
    {...props}
  >
    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
      {children}
    </ScrollAreaPrimitive.Viewport>
    <ScrollBar />
    <ScrollAreaPrimitive.Corner />
  </ScrollAreaPrimitive.Root>
))
ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName

const ScrollBar = React.forwardRef<
  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
>(({ className, orientation = "vertical", ...props }, ref) => (
  <ScrollAreaPrimitive.ScrollAreaScrollbar
    ref={ref}
    orientation={orientation}
    className={cn(
      "flex touch-none select-none transition-colors",
      orientation === "vertical" &&
        "h-full w-2.5 border-l border-l-transparent p-[1px]",
      orientation === "horizontal" &&
        "h-2.5 flex-col border-t border-t-transparent p-[1px]",
      className
    )}
    {...props}
  >
    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
  </ScrollAreaPrimitive.ScrollAreaScrollbar>
))
ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName

export { ScrollArea, ScrollBar }

================
File: src/components/ui/select.tsx
================
"use client"

import * as React from "react"
import * as SelectPrimitive from "@radix-ui/react-select"
import { Check, ChevronDown, ChevronUp } from "lucide-react"

import { cn } from "@/lib/utils"

const Select = SelectPrimitive.Root

const SelectGroup = SelectPrimitive.Group

const SelectValue = SelectPrimitive.Value

const SelectTrigger = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Trigger
    ref={ref}
    className={cn(
      "flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    )}
    {...props}
  >
    {children}
    <SelectPrimitive.Icon asChild>
      <ChevronDown className="h-4 w-4 opacity-50" />
    </SelectPrimitive.Icon>
  </SelectPrimitive.Trigger>
))
SelectTrigger.displayName = SelectPrimitive.Trigger.displayName

const SelectScrollUpButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollUpButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronUp className="h-4 w-4" />
  </SelectPrimitive.ScrollUpButton>
))
SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName

const SelectScrollDownButton = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.ScrollDownButton
    ref={ref}
    className={cn(
      "flex cursor-default items-center justify-center py-1",
      className
    )}
    {...props}
  >
    <ChevronDown className="h-4 w-4" />
  </SelectPrimitive.ScrollDownButton>
))
SelectScrollDownButton.displayName =
  SelectPrimitive.ScrollDownButton.displayName

const SelectContent = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
>(({ className, children, position = "popper", ...props }, ref) => (
  <SelectPrimitive.Portal>
    <SelectPrimitive.Content
      ref={ref}
      className={cn(
        "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        position === "popper" &&
          "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
        className
      )}
      position={position}
      {...props}
    >
      <SelectScrollUpButton />
      <SelectPrimitive.Viewport
        className={cn(
          "p-1",
          position === "popper" &&
            "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
        )}
      >
        {children}
      </SelectPrimitive.Viewport>
      <SelectScrollDownButton />
    </SelectPrimitive.Content>
  </SelectPrimitive.Portal>
))
SelectContent.displayName = SelectPrimitive.Content.displayName

const SelectLabel = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Label>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Label
    ref={ref}
    className={cn("px-2 py-1.5 text-sm font-semibold", className)}
    {...props}
  />
))
SelectLabel.displayName = SelectPrimitive.Label.displayName

const SelectItem = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
>(({ className, children, ...props }, ref) => (
  <SelectPrimitive.Item
    ref={ref}
    className={cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    )}
    {...props}
  >
    <span className="absolute right-2 flex h-3.5 w-3.5 items-center justify-center">
      <SelectPrimitive.ItemIndicator>
        <Check className="h-4 w-4" />
      </SelectPrimitive.ItemIndicator>
    </span>
    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
  </SelectPrimitive.Item>
))
SelectItem.displayName = SelectPrimitive.Item.displayName

const SelectSeparator = React.forwardRef<
  React.ElementRef<typeof SelectPrimitive.Separator>,
  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
>(({ className, ...props }, ref) => (
  <SelectPrimitive.Separator
    ref={ref}
    className={cn("-mx-1 my-1 h-px bg-muted", className)}
    {...props}
  />
))
SelectSeparator.displayName = SelectPrimitive.Separator.displayName

export {
  Select,
  SelectGroup,
  SelectValue,
  SelectTrigger,
  SelectContent,
  SelectLabel,
  SelectItem,
  SelectSeparator,
  SelectScrollUpButton,
  SelectScrollDownButton,
}

================
File: src/components/ui/separator.tsx
================
"use client"

import * as React from "react"
import * as SeparatorPrimitive from "@radix-ui/react-separator"

import { cn } from "@/lib/utils"

const Separator = React.forwardRef<
  React.ElementRef<typeof SeparatorPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>
>(
  (
    { className, orientation = "horizontal", decorative = true, ...props },
    ref
  ) => (
    <SeparatorPrimitive.Root
      ref={ref}
      decorative={decorative}
      orientation={orientation}
      className={cn(
        "shrink-0 bg-border",
        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
        className
      )}
      {...props}
    />
  )
)
Separator.displayName = SeparatorPrimitive.Root.displayName

export { Separator }

================
File: src/components/ui/sheet.tsx
================
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const Sheet = SheetPrimitive.Root

const SheetTrigger = SheetPrimitive.Trigger

const SheetClose = SheetPrimitive.Close

const SheetPortal = SheetPrimitive.Portal

const SheetOverlay = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Overlay>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Overlay
    className={cn(
      "fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    )}
    {...props}
    ref={ref}
  />
))
SheetOverlay.displayName = SheetPrimitive.Overlay.displayName

const sheetVariants = cva(
  "fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out",
  {
    variants: {
      side: {
        top: "inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top",
        bottom:
          "inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom",
        left: "inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm",
        right:
          "inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm",
      },
    },
    defaultVariants: {
      side: "right",
    },
  }
)

interface SheetContentProps
  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,
    VariantProps<typeof sheetVariants> {}

const SheetContent = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Content>,
  SheetContentProps
>(({ side = "right", className, children, ...props }, ref) => (
  <SheetPortal>
    <SheetOverlay />
    <SheetPrimitive.Content
      ref={ref}
      className={cn(sheetVariants({ side }), className)}
      {...props}
    >
      <SheetPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary">
        <X className="h-4 w-4" />
        <span className="sr-only">Close</span>
      </SheetPrimitive.Close>
      {children}
    </SheetPrimitive.Content>
  </SheetPortal>
))
SheetContent.displayName = SheetPrimitive.Content.displayName

const SheetHeader = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    )}
    {...props}
  />
)
SheetHeader.displayName = "SheetHeader"

const SheetFooter = ({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) => (
  <div
    className={cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    )}
    {...props}
  />
)
SheetFooter.displayName = "SheetFooter"

const SheetTitle = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Title>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Title
    ref={ref}
    className={cn("text-lg font-semibold text-foreground", className)}
    {...props}
  />
))
SheetTitle.displayName = SheetPrimitive.Title.displayName

const SheetDescription = React.forwardRef<
  React.ElementRef<typeof SheetPrimitive.Description>,
  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>
>(({ className, ...props }, ref) => (
  <SheetPrimitive.Description
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
SheetDescription.displayName = SheetPrimitive.Description.displayName

export {
  Sheet,
  SheetPortal,
  SheetOverlay,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}

================
File: src/components/ui/sidebar.tsx
================
"use client"

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { VariantProps, cva } from "class-variance-authority"
import { PanelLeft } from "lucide-react"

import { useIsMobile } from "@/hooks/use-mobile"
import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Separator } from "@/components/ui/separator"
import { Sheet, SheetContent } from "@/components/ui/sheet"
import { Skeleton } from "@/components/ui/skeleton"
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip"

const SIDEBAR_COOKIE_NAME = "sidebar:state"
const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7
const SIDEBAR_WIDTH = "16rem"
const SIDEBAR_WIDTH_MOBILE = "18rem"
const SIDEBAR_WIDTH_ICON = "3rem"
const SIDEBAR_KEYBOARD_SHORTCUT = "b"

type SidebarContext = {
  state: "expanded" | "collapsed"
  open: boolean
  setOpen: (open: boolean) => void
  openMobile: boolean
  setOpenMobile: (open: boolean) => void
  isMobile: boolean
  toggleSidebar: () => void
}

const SidebarContext = React.createContext<SidebarContext | null>(null)

function useSidebar() {
  const context = React.useContext(SidebarContext)
  if (!context) {
    throw new Error("useSidebar must be used within a SidebarProvider.")
  }

  return context
}

const SidebarProvider = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    defaultOpen?: boolean
    open?: boolean
    onOpenChange?: (open: boolean) => void
  }
>(
  (
    {
      defaultOpen = true,
      open: openProp,
      onOpenChange: setOpenProp,
      className,
      style,
      children,
      ...props
    },
    ref
  ) => {
    const isMobile = useIsMobile()
    const [openMobile, setOpenMobile] = React.useState(false)

    // This is the internal state of the sidebar.
    // We use openProp and setOpenProp for control from outside the component.
    const [_open, _setOpen] = React.useState(defaultOpen)
    const open = openProp ?? _open
    const setOpen = React.useCallback(
      (value: boolean | ((value: boolean) => boolean)) => {
        const openState = typeof value === "function" ? value(open) : value
        if (setOpenProp) {
          setOpenProp(openState)
        } else {
          _setOpen(openState)
        }

        // This sets the cookie to keep the sidebar state.
        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`
      },
      [setOpenProp, open]
    )

    // Helper to toggle the sidebar.
    const toggleSidebar = React.useCallback(() => {
      return isMobile
        ? setOpenMobile((open) => !open)
        : setOpen((open) => !open)
    }, [isMobile, setOpen, setOpenMobile])

    // Adds a keyboard shortcut to toggle the sidebar.
    React.useEffect(() => {
      const handleKeyDown = (event: KeyboardEvent) => {
        if (
          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&
          (event.metaKey || event.ctrlKey)
        ) {
          event.preventDefault()
          toggleSidebar()
        }
      }

      window.addEventListener("keydown", handleKeyDown)
      return () => window.removeEventListener("keydown", handleKeyDown)
    }, [toggleSidebar])

    // We add a state so that we can do data-state="expanded" or "collapsed".
    // This makes it easier to style the sidebar with Tailwind classes.
    const state = open ? "expanded" : "collapsed"

    const contextValue = React.useMemo<SidebarContext>(
      () => ({
        state,
        open,
        setOpen,
        isMobile,
        openMobile,
        setOpenMobile,
        toggleSidebar,
      }),
      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]
    )

    return (
      <SidebarContext.Provider value={contextValue}>
        <TooltipProvider delayDuration={0}>
          <div
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH,
                "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
                ...style,
              } as React.CSSProperties
            }
            className={cn(
              "group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar",
              className
            )}
            ref={ref}
            {...props}
          >
            {children}
          </div>
        </TooltipProvider>
      </SidebarContext.Provider>
    )
  }
)
SidebarProvider.displayName = "SidebarProvider"

const Sidebar = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    side?: "left" | "right"
    variant?: "sidebar" | "floating" | "inset"
    collapsible?: "offcanvas" | "icon" | "none"
  }
>(
  (
    {
      side = "left",
      variant = "sidebar",
      collapsible = "offcanvas",
      className,
      children,
      ...props
    },
    ref
  ) => {
    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()

    if (collapsible === "none") {
      return (
        <div
          className={cn(
            "flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground",
            className
          )}
          ref={ref}
          {...props}
        >
          {children}
        </div>
      )
    }

    if (isMobile) {
      return (
        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>
          <SheetContent
            data-sidebar="sidebar"
            data-mobile="true"
            className="w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden"
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
              } as React.CSSProperties
            }
            side={side}
          >
            <div className="flex h-full w-full flex-col">{children}</div>
          </SheetContent>
        </Sheet>
      )
    }

    return (
      <div
        ref={ref}
        className="group peer hidden md:block text-sidebar-foreground"
        data-state={state}
        data-collapsible={state === "collapsed" ? collapsible : ""}
        data-variant={variant}
        data-side={side}
      >
        {/* This is what handles the sidebar gap on desktop */}
        <div
          className={cn(
            "duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear",
            "group-data-[collapsible=offcanvas]:w-0",
            "group-data-[side=right]:rotate-180",
            variant === "floating" || variant === "inset"
              ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon]"
          )}
        />
        <div
          className={cn(
            "duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex",
            side === "left"
              ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
              : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
            // Adjust the padding for floating and inset variants.
            variant === "floating" || variant === "inset"
              ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]"
              : "group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l",
            className
          )}
          {...props}
        >
          <div
            data-sidebar="sidebar"
            className="flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow"
          >
            {children}
          </div>
        </div>
      </div>
    )
  }
)
Sidebar.displayName = "Sidebar"

const SidebarTrigger = React.forwardRef<
  React.ElementRef<typeof Button>,
  React.ComponentProps<typeof Button>
>(({ className, onClick, ...props }, ref) => {
  const { toggleSidebar } = useSidebar()

  return (
    <Button
      ref={ref}
      data-sidebar="trigger"
      variant="ghost"
      size="icon"
      className={cn("h-7 w-7", className)}
      onClick={(event) => {
        onClick?.(event)
        toggleSidebar()
      }}
      {...props}
    >
      <PanelLeft />
      <span className="sr-only">Toggle Sidebar</span>
    </Button>
  )
})
SidebarTrigger.displayName = "SidebarTrigger"

const SidebarRail = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button">
>(({ className, ...props }, ref) => {
  const { toggleSidebar } = useSidebar()

  return (
    <button
      ref={ref}
      data-sidebar="rail"
      aria-label="Toggle Sidebar"
      tabIndex={-1}
      onClick={toggleSidebar}
      title="Toggle Sidebar"
      className={cn(
        "absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex",
        "[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize",
        "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
        "group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar",
        "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
        "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
        className
      )}
      {...props}
    />
  )
})
SidebarRail.displayName = "SidebarRail"

const SidebarInset = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"main">
>(({ className, ...props }, ref) => {
  return (
    <main
      ref={ref}
      className={cn(
        "relative flex min-h-svh flex-1 flex-col bg-background",
        "peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow",
        className
      )}
      {...props}
    />
  )
})
SidebarInset.displayName = "SidebarInset"

const SidebarInput = React.forwardRef<
  React.ElementRef<typeof Input>,
  React.ComponentProps<typeof Input>
>(({ className, ...props }, ref) => {
  return (
    <Input
      ref={ref}
      data-sidebar="input"
      className={cn(
        "h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring",
        className
      )}
      {...props}
    />
  )
})
SidebarInput.displayName = "SidebarInput"

const SidebarHeader = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="header"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
})
SidebarHeader.displayName = "SidebarHeader"

const SidebarFooter = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="footer"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
})
SidebarFooter.displayName = "SidebarFooter"

const SidebarSeparator = React.forwardRef<
  React.ElementRef<typeof Separator>,
  React.ComponentProps<typeof Separator>
>(({ className, ...props }, ref) => {
  return (
    <Separator
      ref={ref}
      data-sidebar="separator"
      className={cn("mx-2 w-auto bg-sidebar-border", className)}
      {...props}
    />
  )
})
SidebarSeparator.displayName = "SidebarSeparator"

const SidebarContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="content"
      className={cn(
        "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarContent.displayName = "SidebarContent"

const SidebarGroup = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => {
  return (
    <div
      ref={ref}
      data-sidebar="group"
      className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
      {...props}
    />
  )
})
SidebarGroup.displayName = "SidebarGroup"

const SidebarGroupLabel = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "div"

  return (
    <Comp
      ref={ref}
      data-sidebar="group-label"
      className={cn(
        "duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
        className
      )}
      {...props}
    />
  )
})
SidebarGroupLabel.displayName = "SidebarGroupLabel"

const SidebarGroupAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & { asChild?: boolean }
>(({ className, asChild = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      ref={ref}
      data-sidebar="group-action"
      className={cn(
        "absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarGroupAction.displayName = "SidebarGroupAction"

const SidebarGroupContent = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    data-sidebar="group-content"
    className={cn("w-full text-sm", className)}
    {...props}
  />
))
SidebarGroupContent.displayName = "SidebarGroupContent"

const SidebarMenu = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    data-sidebar="menu"
    className={cn("flex w-full min-w-0 flex-col gap-1", className)}
    {...props}
  />
))
SidebarMenu.displayName = "SidebarMenu"

const SidebarMenuItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ className, ...props }, ref) => (
  <li
    ref={ref}
    data-sidebar="menu-item"
    className={cn("group/menu-item relative", className)}
    {...props}
  />
))
SidebarMenuItem.displayName = "SidebarMenuItem"

const sidebarMenuButtonVariants = cva(
  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
        outline:
          "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
      },
      size: {
        default: "h-8 text-sm",
        sm: "h-7 text-xs",
        lg: "h-12 text-sm group-data-[collapsible=icon]:!p-0",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

const SidebarMenuButton = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean
    isActive?: boolean
    tooltip?: string | React.ComponentProps<typeof TooltipContent>
  } & VariantProps<typeof sidebarMenuButtonVariants>
>(
  (
    {
      asChild = false,
      isActive = false,
      variant = "default",
      size = "default",
      tooltip,
      className,
      ...props
    },
    ref
  ) => {
    const Comp = asChild ? Slot : "button"
    const { isMobile, state } = useSidebar()

    const button = (
      <Comp
        ref={ref}
        data-sidebar="menu-button"
        data-size={size}
        data-active={isActive}
        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
        {...props}
      />
    )

    if (!tooltip) {
      return button
    }

    if (typeof tooltip === "string") {
      tooltip = {
        children: tooltip,
      }
    }

    return (
      <Tooltip>
        <TooltipTrigger asChild>{button}</TooltipTrigger>
        <TooltipContent
          side="right"
          align="center"
          hidden={state !== "collapsed" || isMobile}
          {...tooltip}
        />
      </Tooltip>
    )
  }
)
SidebarMenuButton.displayName = "SidebarMenuButton"

const SidebarMenuAction = React.forwardRef<
  HTMLButtonElement,
  React.ComponentProps<"button"> & {
    asChild?: boolean
    showOnHover?: boolean
  }
>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-action"
      className={cn(
        "absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 after:md:hidden",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        showOnHover &&
          "group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0",
        className
      )}
      {...props}
    />
  )
})
SidebarMenuAction.displayName = "SidebarMenuAction"

const SidebarMenuBadge = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div">
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    data-sidebar="menu-badge"
    className={cn(
      "absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none",
      "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
      "peer-data-[size=sm]/menu-button:top-1",
      "peer-data-[size=default]/menu-button:top-1.5",
      "peer-data-[size=lg]/menu-button:top-2.5",
      "group-data-[collapsible=icon]:hidden",
      className
    )}
    {...props}
  />
))
SidebarMenuBadge.displayName = "SidebarMenuBadge"

const SidebarMenuSkeleton = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    showIcon?: boolean
  }
>(({ className, showIcon = false, ...props }, ref) => {
  // Random width between 50 to 90%.
  const width = React.useMemo(() => {
    return `${Math.floor(Math.random() * 40) + 50}%`
  }, [])

  return (
    <div
      ref={ref}
      data-sidebar="menu-skeleton"
      className={cn("rounded-md h-8 flex gap-2 px-2 items-center", className)}
      {...props}
    >
      {showIcon && (
        <Skeleton
          className="size-4 rounded-md"
          data-sidebar="menu-skeleton-icon"
        />
      )}
      <Skeleton
        className="h-4 flex-1 max-w-[--skeleton-width]"
        data-sidebar="menu-skeleton-text"
        style={
          {
            "--skeleton-width": width,
          } as React.CSSProperties
        }
      />
    </div>
  )
})
SidebarMenuSkeleton.displayName = "SidebarMenuSkeleton"

const SidebarMenuSub = React.forwardRef<
  HTMLUListElement,
  React.ComponentProps<"ul">
>(({ className, ...props }, ref) => (
  <ul
    ref={ref}
    data-sidebar="menu-sub"
    className={cn(
      "mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5",
      "group-data-[collapsible=icon]:hidden",
      className
    )}
    {...props}
  />
))
SidebarMenuSub.displayName = "SidebarMenuSub"

const SidebarMenuSubItem = React.forwardRef<
  HTMLLIElement,
  React.ComponentProps<"li">
>(({ ...props }, ref) => <li ref={ref} {...props} />)
SidebarMenuSubItem.displayName = "SidebarMenuSubItem"

const SidebarMenuSubButton = React.forwardRef<
  HTMLAnchorElement,
  React.ComponentProps<"a"> & {
    asChild?: boolean
    size?: "sm" | "md"
    isActive?: boolean
  }
>(({ asChild = false, size = "md", isActive, className, ...props }, ref) => {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      ref={ref}
      data-sidebar="menu-sub-button"
      data-size={size}
      data-active={isActive}
      className={cn(
        "flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground",
        "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
        size === "sm" && "text-xs",
        size === "md" && "text-sm",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
})
SidebarMenuSubButton.displayName = "SidebarMenuSubButton"

export {
  Sidebar,
  SidebarContent,
  SidebarFooter,
  SidebarGroup,
  SidebarGroupAction,
  SidebarGroupContent,
  SidebarGroupLabel,
  SidebarHeader,
  SidebarInput,
  SidebarInset,
  SidebarMenu,
  SidebarMenuAction,
  SidebarMenuBadge,
  SidebarMenuButton,
  SidebarMenuItem,
  SidebarMenuSkeleton,
  SidebarMenuSub,
  SidebarMenuSubButton,
  SidebarMenuSubItem,
  SidebarProvider,
  SidebarRail,
  SidebarSeparator,
  SidebarTrigger,
  useSidebar,
}

================
File: src/components/ui/skeleton.tsx
================
import { cn } from "@/lib/utils"

function Skeleton({
  className,
  ...props
}: React.HTMLAttributes<HTMLDivElement>) {
  return (
    <div
      className={cn("animate-pulse rounded-md bg-primary/10", className)}
      {...props}
    />
  )
}

export { Skeleton }

================
File: src/components/ui/slider.tsx
================
"use client"

import * as React from "react"
import * as SliderPrimitive from "@radix-ui/react-slider"

import { cn } from "@/lib/utils"

const Slider = React.forwardRef<
  React.ElementRef<typeof SliderPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>
>(({ className, ...props }, ref) => (
  <SliderPrimitive.Root
    ref={ref}
    className={cn(
      "relative flex w-full touch-none select-none items-center",
      className
    )}
    {...props}
  >
    <SliderPrimitive.Track className="relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20">
      <SliderPrimitive.Range className="absolute h-full bg-primary" />
    </SliderPrimitive.Track>
    <SliderPrimitive.Thumb className="block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50" />
  </SliderPrimitive.Root>
))
Slider.displayName = SliderPrimitive.Root.displayName

export { Slider }

================
File: src/components/ui/sonner.tsx
================
"use client"

import { useTheme } from "next-themes"
import { Toaster as Sonner } from "sonner"

type ToasterProps = React.ComponentProps<typeof Sonner>

const Toaster = ({ ...props }: ToasterProps) => {
  const { theme = "system" } = useTheme()

  return (
    <Sonner
      theme={theme as ToasterProps["theme"]}
      className="toaster group"
      toastOptions={{
        classNames: {
          toast:
            "group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",
          description: "group-[.toast]:text-muted-foreground",
          actionButton:
            "group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",
          cancelButton:
            "group-[.toast]:bg-muted group-[.toast]:text-muted-foreground",
        },
      }}
      {...props}
    />
  )
}

export { Toaster }

================
File: src/components/ui/stacked-cards.tsx
================
import Image from 'next/image'
import { cn } from '@/lib/utils'

export function StackedCards() {
	return (
		<div className="relative w-[400px] h-[400px]">
			{[0, 1, 2].map((index) => (
				<div
					key={index}
					className={cn(
						'absolute inset-0 transition-all duration-4000 ease-in-out',
						'hover:translate-y-[-8px] border-2 border-red-500',
						index === 0 && 'transform translate-y-4 rotate-[-12deg]',
						index === 1 && 'transform translate-y-8 rotate-[-3deg]',
						index === 2 && 'transform translate-y-0 rotate-[0deg]'
					)}
					style={{
						animation: `float ${
							2 + index * 0.5
						}s ease-in-out infinite alternate`,
					}}>
					<Image
						src="/images/modern-teams.svg"
						alt={`Circuit Card ${index + 1}`}
						width={400}
						height={400}
						className="object-contain drop-shadow-2xl"
					/>
				</div>
			))}
		</div>
	)
}

================
File: src/components/ui/switch.tsx
================
"use client"

import * as React from "react"
import * as SwitchPrimitives from "@radix-ui/react-switch"

import { cn } from "@/lib/utils"

const Switch = React.forwardRef<
  React.ElementRef<typeof SwitchPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>
>(({ className, ...props }, ref) => (
  <SwitchPrimitives.Root
    className={cn(
      "peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input",
      className
    )}
    {...props}
    ref={ref}
  >
    <SwitchPrimitives.Thumb
      className={cn(
        "pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0"
      )}
    />
  </SwitchPrimitives.Root>
))
Switch.displayName = SwitchPrimitives.Root.displayName

export { Switch }

================
File: src/components/ui/table.tsx
================
import * as React from "react"

import { cn } from "@/lib/utils"

const Table = React.forwardRef<
  HTMLTableElement,
  React.HTMLAttributes<HTMLTableElement>
>(({ className, ...props }, ref) => (
  <div className="relative w-full overflow-auto">
    <table
      ref={ref}
      className={cn("w-full caption-bottom text-sm", className)}
      {...props}
    />
  </div>
))
Table.displayName = "Table"

const TableHeader = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <thead ref={ref} className={cn("[&_tr]:border-b", className)} {...props} />
))
TableHeader.displayName = "TableHeader"

const TableBody = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tbody
    ref={ref}
    className={cn("[&_tr:last-child]:border-0", className)}
    {...props}
  />
))
TableBody.displayName = "TableBody"

const TableFooter = React.forwardRef<
  HTMLTableSectionElement,
  React.HTMLAttributes<HTMLTableSectionElement>
>(({ className, ...props }, ref) => (
  <tfoot
    ref={ref}
    className={cn(
      "border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",
      className
    )}
    {...props}
  />
))
TableFooter.displayName = "TableFooter"

const TableRow = React.forwardRef<
  HTMLTableRowElement,
  React.HTMLAttributes<HTMLTableRowElement>
>(({ className, ...props }, ref) => (
  <tr
    ref={ref}
    className={cn(
      "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
      className
    )}
    {...props}
  />
))
TableRow.displayName = "TableRow"

const TableHead = React.forwardRef<
  HTMLTableCellElement,
  React.ThHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <th
    ref={ref}
    className={cn(
      "h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
      className
    )}
    {...props}
  />
))
TableHead.displayName = "TableHead"

const TableCell = React.forwardRef<
  HTMLTableCellElement,
  React.TdHTMLAttributes<HTMLTableCellElement>
>(({ className, ...props }, ref) => (
  <td
    ref={ref}
    className={cn(
      "p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
      className
    )}
    {...props}
  />
))
TableCell.displayName = "TableCell"

const TableCaption = React.forwardRef<
  HTMLTableCaptionElement,
  React.HTMLAttributes<HTMLTableCaptionElement>
>(({ className, ...props }, ref) => (
  <caption
    ref={ref}
    className={cn("mt-4 text-sm text-muted-foreground", className)}
    {...props}
  />
))
TableCaption.displayName = "TableCaption"

export {
  Table,
  TableHeader,
  TableBody,
  TableFooter,
  TableHead,
  TableRow,
  TableCell,
  TableCaption,
}

================
File: src/components/ui/tabs.tsx
================
"use client"

import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"

import { cn } from "@/lib/utils"

const Tabs = TabsPrimitive.Root

const TabsList = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.List>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.List
    ref={ref}
    className={cn(
      "inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground",
      className
    )}
    {...props}
  />
))
TabsList.displayName = TabsPrimitive.List.displayName

const TabsTrigger = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Trigger>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Trigger
    ref={ref}
    className={cn(
      "inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow",
      className
    )}
    {...props}
  />
))
TabsTrigger.displayName = TabsPrimitive.Trigger.displayName

const TabsContent = React.forwardRef<
  React.ElementRef<typeof TabsPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
>(({ className, ...props }, ref) => (
  <TabsPrimitive.Content
    ref={ref}
    className={cn(
      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
      className
    )}
    {...props}
  />
))
TabsContent.displayName = TabsPrimitive.Content.displayName

export { Tabs, TabsList, TabsTrigger, TabsContent }

================
File: src/components/ui/textarea.tsx
================
import * as React from "react"

import { cn } from "@/lib/utils"

const Textarea = React.forwardRef<
  HTMLTextAreaElement,
  React.ComponentProps<"textarea">
>(({ className, ...props }, ref) => {
  return (
    <textarea
      className={cn(
        "flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-base shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm",
        className
      )}
      ref={ref}
      {...props}
    />
  )
})
Textarea.displayName = "Textarea"

export { Textarea }

================
File: src/components/ui/toast.tsx
================
"use client"

import * as React from "react"
import * as ToastPrimitives from "@radix-ui/react-toast"
import { cva, type VariantProps } from "class-variance-authority"
import { X } from "lucide-react"

import { cn } from "@/lib/utils"

const ToastProvider = ToastPrimitives.Provider

const ToastViewport = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Viewport>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Viewport
    ref={ref}
    className={cn(
      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
      className
    )}
    {...props}
  />
))
ToastViewport.displayName = ToastPrimitives.Viewport.displayName

const toastVariants = cva(
  "group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground",
        destructive:
          "destructive group border-destructive bg-destructive text-destructive-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

const Toast = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Root>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &
    VariantProps<typeof toastVariants>
>(({ className, variant, ...props }, ref) => {
  return (
    <ToastPrimitives.Root
      ref={ref}
      className={cn(toastVariants({ variant }), className)}
      {...props}
    />
  )
})
Toast.displayName = ToastPrimitives.Root.displayName

const ToastAction = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Action>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Action
    ref={ref}
    className={cn(
      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
      className
    )}
    {...props}
  />
))
ToastAction.displayName = ToastPrimitives.Action.displayName

const ToastClose = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Close>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Close
    ref={ref}
    className={cn(
      "absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
      className
    )}
    toast-close=""
    {...props}
  >
    <X className="h-4 w-4" />
  </ToastPrimitives.Close>
))
ToastClose.displayName = ToastPrimitives.Close.displayName

const ToastTitle = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Title>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Title
    ref={ref}
    className={cn("text-sm font-semibold [&+div]:text-xs", className)}
    {...props}
  />
))
ToastTitle.displayName = ToastPrimitives.Title.displayName

const ToastDescription = React.forwardRef<
  React.ElementRef<typeof ToastPrimitives.Description>,
  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
>(({ className, ...props }, ref) => (
  <ToastPrimitives.Description
    ref={ref}
    className={cn("text-sm opacity-90", className)}
    {...props}
  />
))
ToastDescription.displayName = ToastPrimitives.Description.displayName

type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>

type ToastActionElement = React.ReactElement<typeof ToastAction>

export {
  type ToastProps,
  type ToastActionElement,
  ToastProvider,
  ToastViewport,
  Toast,
  ToastTitle,
  ToastDescription,
  ToastClose,
  ToastAction,
}

================
File: src/components/ui/toaster.tsx
================
"use client"

import { useToast } from "@/hooks/use-toast"
import {
  Toast,
  ToastClose,
  ToastDescription,
  ToastProvider,
  ToastTitle,
  ToastViewport,
} from "@/components/ui/toast"

export function Toaster() {
  const { toasts } = useToast()

  return (
    <ToastProvider>
      {toasts.map(function ({ id, title, description, action, ...props }) {
        return (
          <Toast key={id} {...props}>
            <div className="grid gap-1">
              {title && <ToastTitle>{title}</ToastTitle>}
              {description && (
                <ToastDescription>{description}</ToastDescription>
              )}
            </div>
            {action}
            <ToastClose />
          </Toast>
        )
      })}
      <ToastViewport />
    </ToastProvider>
  )
}

================
File: src/components/ui/toggle-group.tsx
================
"use client"

import * as React from "react"
import * as ToggleGroupPrimitive from "@radix-ui/react-toggle-group"
import { type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"
import { toggleVariants } from "@/components/ui/toggle"

const ToggleGroupContext = React.createContext<
  VariantProps<typeof toggleVariants>
>({
  size: "default",
  variant: "default",
})

const ToggleGroup = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, children, ...props }, ref) => (
  <ToggleGroupPrimitive.Root
    ref={ref}
    className={cn("flex items-center justify-center gap-1", className)}
    {...props}
  >
    <ToggleGroupContext.Provider value={{ variant, size }}>
      {children}
    </ToggleGroupContext.Provider>
  </ToggleGroupPrimitive.Root>
))

ToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName

const ToggleGroupItem = React.forwardRef<
  React.ElementRef<typeof ToggleGroupPrimitive.Item>,
  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &
    VariantProps<typeof toggleVariants>
>(({ className, children, variant, size, ...props }, ref) => {
  const context = React.useContext(ToggleGroupContext)

  return (
    <ToggleGroupPrimitive.Item
      ref={ref}
      className={cn(
        toggleVariants({
          variant: context.variant || variant,
          size: context.size || size,
        }),
        className
      )}
      {...props}
    >
      {children}
    </ToggleGroupPrimitive.Item>
  )
})

ToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName

export { ToggleGroup, ToggleGroupItem }

================
File: src/components/ui/toggle.tsx
================
"use client"

import * as React from "react"
import * as TogglePrimitive from "@radix-ui/react-toggle"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const toggleVariants = cva(
  "inline-flex items-center justify-center gap-2 rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "bg-transparent",
        outline:
          "border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground",
      },
      size: {
        default: "h-9 px-2 min-w-9",
        sm: "h-8 px-1.5 min-w-8",
        lg: "h-10 px-2.5 min-w-10",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

const Toggle = React.forwardRef<
  React.ElementRef<typeof TogglePrimitive.Root>,
  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &
    VariantProps<typeof toggleVariants>
>(({ className, variant, size, ...props }, ref) => (
  <TogglePrimitive.Root
    ref={ref}
    className={cn(toggleVariants({ variant, size, className }))}
    {...props}
  />
))

Toggle.displayName = TogglePrimitive.Root.displayName

export { Toggle, toggleVariants }

================
File: src/components/ui/tooltip.tsx
================
"use client"

import * as React from "react"
import * as TooltipPrimitive from "@radix-ui/react-tooltip"

import { cn } from "@/lib/utils"

const TooltipProvider = TooltipPrimitive.Provider

const Tooltip = TooltipPrimitive.Root

const TooltipTrigger = TooltipPrimitive.Trigger

const TooltipContent = React.forwardRef<
  React.ElementRef<typeof TooltipPrimitive.Content>,
  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>
>(({ className, sideOffset = 4, ...props }, ref) => (
  <TooltipPrimitive.Portal>
    <TooltipPrimitive.Content
      ref={ref}
      sideOffset={sideOffset}
      className={cn(
        "z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      )}
      {...props}
    />
  </TooltipPrimitive.Portal>
))
TooltipContent.displayName = TooltipPrimitive.Content.displayName

export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }

================
File: src/components/benefit-section.tsx
================
"use client";
import { useState } from "react";
import { cn } from "@/lib/utils";
import { OrbitingCirclesDemo } from "./orbitin-circle";
import { Globe } from "@/components/ui/globe";
import { FileTreeDemo } from "./File-tree";

const tabs = [
  {
    id: "compliance",
    label: "Compliance First",
  },
  {
    id: "security",
    label: "Safe & Secure",
  },
  {
    id: "analytics",
    label: "Dashboards & Analytics",
  },
];

export default function BenefitSection() {
  const [activeTab, setActiveTab] = useState("compliance");

  return (
    <section className="w-full py-24 bg-[#0F0F10]">
      <div className="mx-auto max-w-[1200px] ">
        <div className="text-center mb-12">
          <h2
            className="text-5xl font-semibold text-[#fff] leading-[57.6px] tracking-tight
 mb-6"
          >
            Empower Your Product
            <br />
            Team
          </h2>
          <p className="text-lg text-[#EBECED] font-medium max-w-[800px] mx-auto leading-7">
            Focus. Speed. Quality. Elevate your product development with the
            <br />
            streamlined tools and proven practices of world-class teams.
          </p>
        </div>

        <div className="flex flex-col items-center mb-6">
          <div className="flex space-x-4 p-2 mb-12 w-[1200px] justify-center items-start gap-[16px] flex-shrink-0 rounded-[13px] bg-[#131316]">
            {tabs.map((tab) => (
              <button
                key={tab.id}
                onClick={() => setActiveTab(tab.id)}
                className={cn(
                  "px-6 py-3 rounded-lg text-base font-medium transition-all",
                  activeTab === tab.id
                    ? "bg-[#0F0F10] text-[#fff] shadow-lg"
                    : "text-[#5A616E]/60  hover:bg-[#242427]"
                )}
              >
                {tab.label}
              </button>
            ))}
          </div>

          <div className="w-[1200px] relative h-[460px]">
            <div
              className={`w-full transition-all duration-500 ease-in-out absolute inset-0 ${
                activeTab === "compliance"
                  ? "opacity-100 translate-y-0 z-10"
                  : "opacity-0 translate-y-4 pointer-events-none z-0"
              }`}
            >
              <ComplianceTab />
            </div>
            <div
              className={`w-full transition-all duration-500 ease-in-out absolute inset-0 ${
                activeTab === "security"
                  ? "opacity-100 translate-y-0 z-10"
                  : "opacity-0 translate-y-4 pointer-events-none z-0"
              }`}
            >
              <SecurityTab />
            </div>
            <div
              className={`w-full transition-all duration-500 ease-in-out absolute inset-0 ${
                activeTab === "analytics"
                  ? "opacity-100 translate-y-0 z-10"
                  : "opacity-0 translate-y-4 pointer-events-none z-0"
              }`}
            >
              <AnalyticsTab />
            </div>
          </div>
        </div>
      </div>
    </section>
  );
}

const ComplianceTab = () => {
  return (
    <div className="relative flex justify-center items-center w-full py-4 max-w-[1200px] h-[460px] aspect-square rounded-[13px] bg-[#1A1C1E]">
      <OrbitingCirclesDemo />
    </div>
  );
};

const SecurityTab = () => {
  return (
    <div className="dark w-[1200px] flex justify-center items-center h-[460px] rounded-[13px] bg-[#1A1C1E] py-4">
      <div className="relative flex size-full max-w-lg items-center justify-center overflow-hidden rounded-lg border bg-background px-40 pb-40 pt-8 md:pb-60 md:shadow-xl border-2 border-[#404245] rounded-xl shadow-[0px_0px_8px_0px_rgba(255,255,255,0.09)_inset]">
        <span className="pointer-events-none whitespace-pre-wrap bg-gradient-to-b from-black to-gray-300/80 bg-clip-text text-center text-8xl font-semibold leading-none text-transparent dark:from-white dark:to-slate-900/10">
          Globe
        </span>
        <Globe className="top-28" />
        <div className="pointer-events-none absolute inset-0 h-full bg-[radial-gradient(circle_at_50%_200%,rgba(0,0,0,0.2),rgba(255,255,255,0))]" />
      </div>
    </div>
  );
};

const AnalyticsTab = () => {
  return (
    <div className=" w-[1200px] flex justify-center items-center h-[380px] rounded-[13px] bg-[#1A1C1E]">
      <FileTreeDemo />
    </div>
  );
};

================
File: src/components/contact-section.tsx
================
'use client'

import { ArrowUpRight } from 'lucide-react'
import Link from 'next/link'

export default function ContactSection() {
	return (
		<section className="w-full py-20 bg-[#0F0F10] border-b border-[#1A1C1E]">
			<div className="mx-auto max-w-[1200px] text-center">
				<h2 className="text-5xl font-semibold text-white mb-2 leading-[57.6px] tracking-tight">
					Still Have Questions?
				</h2>
				<p className="text-[#80858F] leading-[27px] text-lg mb-10">
					We're here to help! Let us know what you need.
				</p>
				<Link
					href="mailto:support@lighting.dev"
					className="inline-flex items-center gap-2 bg-[#46B235] text-[#0F0F10] px-6 py-3 rounded-lg font-medium text-base hover:bg-[#46b235be] transition-colors group">
					Send us an email
					<div className="w-[34px] h-[34px] bg-[#68CC58] rounded-md flex items-center justify-center transition-transform duration-300 group-hover:-translate-y-[3px] group-hover:translate-x-1">
						<ArrowUpRight className="w-5 h-5" />
					</div>
				</Link>
			</div>
		</section>
	)
}

================
File: src/components/cta-section.tsx
================
import Link from 'next/link'
import { ArrowUpRight } from 'lucide-react'
import { Button } from '@/components/ui/button'
import { InteractiveGridPattern } from './ui/interactive-grid-pattern'
import { cn } from '@/lib/utils'

export default function CTASection() {
	return (
		<section className="mx-auto relative overflow-hidden flex max-w-[1200px] min-h-[307.59px] items-center justify-center bg-[#0F0F10] px-4 mt-12 border-b border-[#1A1C1E] mb-36">
			<div className=" z-10 mx-auto max-w-[1200px] text-center">
				<h2 className="mb-10 text-5xl font-semibold tracking-tight leading-[57.6px] text-[#fff]">
					Ready to Rock and Roll?
				</h2>

				<Button className="h-14 rounded-lg bg-[#46B235] px-6 text-lg font-medium text-[#0F0F10] hover:bg-[#46b235be] inline-flex items-center justify-center group transition-transform duration-300">
					<Link href="#" className="text-[#0F0F10]  font-medium leading-5 mr-2">
						Try Lighting for Free
					</Link>
					<div className="w-[34px] h-[34px] font-bold bg-[#68CC58] rounded-md flex items-center justify-center transition-transform duration-300 group-hover:-translate-y-[3px] group-hover:translate-x-1">
						<ArrowUpRight className="w-6 h-6" />
					</div>
				</Button>
			</div>
			<InteractiveGridPattern
				className={cn(
					'[mask-image:radial-gradient(500px_circle_at_center,#0F0F10,transparent)]',
					'inset-x-72 inset-y-[-30%] h-[200%] skew-y-12'
				)}
			/>
		</section>
	)
}

================
File: src/components/faq-section.tsx
================
'use client'

import { useState } from 'react'
import { X, Plus } from 'lucide-react'
import { cn } from '@/lib/utils'

interface FAQItemProps {
	question: string
	answer: string
	isOpen: boolean
	onToggle: () => void
}

const FAQItem = ({ question, answer, isOpen, onToggle }: FAQItemProps) => (
	<div className="border border-[#2C2D30] rounded-xl overflow-hidden bg-[#131316] transition-all duration-300 ease-in-out">
		<button
			onClick={onToggle}
			className="w-full px-6 py-4 flex items-center justify-between text-left">
			<span className="text-[#B9BBC1] text-base font-medium leading-6">
				{question}
			</span>
			<div
				className={cn(
					'transform transition-transform duration-300',
					isOpen ? 'rotate-180' : ''
				)}>
				{isOpen ? (
					<X className="w-5 h-5 text-[#404245]" />
				) : (
					<Plus className="w-5 h-5 text-[#404245]" />
				)}
			</div>
		</button>
		<div
			className={cn(
				'grid transition-all duration-300 ease-in-out',
				isOpen ? 'grid-rows-[1fr] opacity-100' : 'grid-rows-[0fr] opacity-0'
			)}>
			<div className="overflow-hidden">
				<div className="px-6 pb-4">
					<p className="text-[#B9BBC1] text-base">{answer}</p>
				</div>
			</div>
		</div>
	</div>
)

export default function FAQSection() {
	const [openIndex, setOpenIndex] = useState<number>(0)

	const faqs = [
		{
			question: 'What is Lighting?',
			answer: 'Cut Through the Confusion: Explore Lighting FAQs',
		},
		{
			question: 'Who is Lightingfor?',
			answer:
				'Lighting is ideal for product teams of all sizes, from startups to established organizations.',
		},
		{
			question: 'Can I import my projects from another tool?',
			answer:
				'Currently, Linear does not offer direct import functionality from other tools. However, you can manually migrate your projects by creating tasks and issues in Linear.',
		},
		{
			question: 'What are projects and issues in Lighting?',
			answer:
				'Projects are used to organize your work at a high level, while issues represent individual tasks or bugs within a project.',
		},
		{
			question: 'Can I integrate Lightingwith other tools?',
			answer:
				'Yes, Lighting offers robust integration capabilities with popular development and productivity tools.',
		},
		{
			question: 'Is my data secure in Lighting?',
			answer:
				'We implement industry-standard security measures to protect your data, including encryption and regular security audits.',
		},
		{
			question: 'How do I upgrade my plan?',
			answer:
				'You can easily upgrade your plan through your account settings. Choose from our flexible pricing options that scale with your needs.',
		},
	]

	return (
		<section className="w-full py-24 bg-[#0F0F10]">
			<div className="mx-auto max-w-[1200px]">
				<h1 className="text-7xl font-semibold text-center text-white mb-4">
					FAQ
				</h1>
				<p className="text-2xl text-center text-[#EBECED] mb-16">
					Everything You Need to Know About Lighting.
				</p>
				<div className="space-y-4 w-[600px] mx-auto">
					{faqs.map((faq, index) => (
						<FAQItem
							key={index}
							question={faq.question}
							answer={faq.answer}
							isOpen={index === openIndex}
							onToggle={() => setOpenIndex(index === openIndex ? -1 : index)}
						/>
					))}
				</div>
			</div>
		</section>
	)
}

================
File: src/components/feature-section.tsx
================
import { CustomButton } from "@/components/ui/custom-button";
import { PinContainer } from "./ui/3d-pin";
import { IconCloud } from "./ui/icon-cloud";
import { BentoGrid } from "./ui/bento-grid";
import { AnimatedList } from "./ui/animated-list";

// Types
interface FeatureItemProps {
  title: string;
  description: string;
}

interface FeatureSectionProps {
  title: string;
  features: FeatureItemProps[];
  rightContent?: React.ReactNode;
  isReversed?: boolean;
}

// Feature Item Component
const FeatureItem = ({ title, description }: FeatureItemProps) => (
  <div className="flex items-center gap-6">
    <div className="border border-[#1A1C1E] rounded-full">
      <div className="w-6 h-6 rounded-full bg-[#46B235] flex items-center justify-center m-3">
        <svg
          width="14"
          height="14"
          viewBox="0 0 14 10"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M1 5L5 9L13 1"
            stroke="#0F0F10"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
          />
        </svg>
      </div>
    </div>
    <div>
      <h3 className="text-[#EBECED] text-lg font-medium mb-1">{title}</h3>
      <p className="text-[#B9BBC1] text-base">{description}</p>
    </div>
  </div>
);

// Pin Content Component
const PinContent = ({ title }: { title: string }) => (
  <div className="h-[40rem] w-full flex items-center justify-center z-10">
    <PinContainer title={title}>
      <div className="flex basis-full flex-col p-4 tracking-tight text-slate-100/50 sm:basis-1/2 w-[20rem] h-[20rem] ">
        <h3 className="max-w-xs !pb-2 !m-0 font-bold text-base text-slate-100">
          {title}
        </h3>
        <div className="text-base !m-0 !p-0 font-normal">
          <span className="text-slate-500">
            Structure your work and visualize your workflow.
          </span>
        </div>
        <div className="flex flex-1 w-full rounded-lg mt-4 bg-gradient-to-br from-green-500 via-purple-500 to-green-500" />
      </div>
    </PinContainer>
  </div>
);

// Feature Content Component
const FeatureContent = ({
  title,
  features,
}: {
  title: string;
  features: FeatureItemProps[];
}) => (
  <div className="space-y-8">
    <h2 className="text-5xl font-semibold text-[#EBECED] mb-2">{title}</h2>
    <div className="space-y-9">
      {features.map((feature) => (
        <FeatureItem
          key={feature.title}
          title={feature.title}
          description={feature.description}
        />
      ))}
    </div>
    <CustomButton href="#">Get started</CustomButton>
  </div>
);

// Visual Content Map
const VISUAL_CONTENT_MAP = {
  default: (title: string) => (
    <div className="flex-1 h-[20rem] flex items-center justify-center">
      <PinContent title={title} />
    </div>
  ),
  teams: (
    <div className="dark h-[20rem] relative flex-1 flex items-center justify-center">
      <IconCloud />
    </div>
  ),
  iterate: (
    <div className="dark h-[20rem] relative flex-1 flex items-center justify-center">
      <BentoGrid />
    </div>
  ),
  collaborate: (
    <div className="dark h-[20rem] relative flex-1 flex items-center justify-center">
      <AnimatedList />
    </div>
  ),
};

// Feature Section Component
const FeatureSection = ({
  title,
  features,
  rightContent,
  isReversed,
}: FeatureSectionProps) => {
  const content = <FeatureContent title={title} features={features} />;
  const visualContent = rightContent || VISUAL_CONTENT_MAP.default(title);

  return (
    <div className="flex justify-between items-center gap-12">
      {isReversed ? (
        <>
          {visualContent}
          {content}
        </>
      ) : (
        <>
          {content}
          {visualContent}
        </>
      )}
    </div>
  );
};

// Feature Data
const FEATURES_DATA = {
  plan: {
    title: "Plan & Organize",
    features: [
      {
        title: "Capture & Prioritize Ideas",
        description: "Vote and prioritize features based on importance.",
      },
      {
        title: "Structure Your Work",
        description: "Create dedicated projects for clear organization.",
      },
      {
        title: "Visualize Workflow",
        description: "Track progress of tasks across different stages.",
      },
    ],
  },
  teams: {
    title: "Modern Teams. Build Better",
    features: [
      {
        title: "Empowering Workflows",
        description:
          "Lighting adapts to your team's specific needs and preferences.",
      },
      {
        title: "Focus on What Matters",
        description:
          "Eliminate distractions and prioritize tasks that drive results.",
      },
      {
        title: "Faster Iteration Cycles",
        description: "Streamlined workflows accelerate the feedback loop.",
      },
    ],
  },
  iterate: {
    title: "Iterate & Improve",
    features: [
      {
        title: "Effortless Feedback Management",
        description:
          "Gather user feedback through surveys or dedicated channels.",
      },
      {
        title: "Data-Driven Decisions",
        description:
          "Measure team performance and identify areas for improvement.",
      },
      {
        title: "Automate Workflows",
        description: "Automate repetitive tasks with customizable rules.",
      },
    ],
  },
  collaborate: {
    title: "Collaborate Effectively",
    features: [
      {
        title: "Seamless Communication",
        description: "Mention teammates for real-time collaboration.",
      },
      {
        title: "Shared Vision & Alignment",
        description: "Streamlined discussions keep everyone on the same page.",
      },
      {
        title: "Centralized Knowledge Base",
        description: "Eliminate information silos and duplicate efforts.",
      },
    ],
  },
};

// Main Component
export default function FeatureSections() {
  return (
    <section className="w-full py-10">
      <div className="mx-auto max-w-[1200px] flex justify-between flex-col gap-24">
        <FeatureSection {...FEATURES_DATA.plan} />
        <FeatureSection
          {...FEATURES_DATA.teams}
          rightContent={VISUAL_CONTENT_MAP.teams}
          isReversed
        />
        <FeatureSection
          {...FEATURES_DATA.iterate}
          rightContent={VISUAL_CONTENT_MAP.iterate}
        />
        <FeatureSection
          {...FEATURES_DATA.collaborate}
          rightContent={VISUAL_CONTENT_MAP.collaborate}
          isReversed
        />
      </div>
    </section>
  );
}

================
File: src/components/File-tree.tsx
================
import { File, Folder, Tree } from '@/components/ui/file-tree'

export function FileTreeDemo() {
	return (
		<div className="dark relative flex h-[300px] w-1/2 flex-col items-center justify-center overflow-hidden rounded-lg border bg-background md:shadow-xl border-2 border-[#404245] rounded-xl shadow-[0px_0px_8px_0px_rgba(255,255,255,0.09)_inset]">
			<Tree
				className="overflow-hidden rounded-md bg-background p-2 text-white"
				initialSelectedId="7"
				initialExpandedItems={[
					'1',
					'2',
					'3',
					'4',
					'5',
					'6',
					'7',
					'8',
					'9',
					'10',
					'11',
				]}
				elements={ELEMENTS}>
				<Folder element="src" value="1">
					<Folder value="2" element="app">
						<File value="3">
							<p>layout.tsx</p>
						</File>
						<File value="4">
							<p>page.tsx</p>
						</File>
					</Folder>
					<Folder value="5" element="components">
						<Folder value="6" element="ui">
							<File value="7">
								<p>button.tsx</p>
							</File>
						</Folder>
						<File value="8">
							<p>header.tsx</p>
						</File>
						<File value="9">
							<p>footer.tsx</p>
						</File>
					</Folder>
					<Folder value="10" element="lib">
						<File value="11">
							<p>utils.ts</p>
						</File>
					</Folder>
				</Folder>
			</Tree>
		</div>
	)
}

const ELEMENTS = [
	{
		id: '1',
		isSelectable: true,
		name: 'src',
		children: [
			{
				id: '2',
				isSelectable: true,
				name: 'app',
				children: [
					{
						id: '3',
						isSelectable: true,
						name: 'layout.tsx',
					},
					{
						id: '4',
						isSelectable: true,
						name: 'page.tsx',
					},
				],
			},
			{
				id: '5',
				isSelectable: true,
				name: 'components',
				children: [
					{
						id: '6',
						isSelectable: true,
						name: 'header.tsx',
					},
					{
						id: '7',
						isSelectable: true,
						name: 'footer.tsx',
					},
				],
			},
			{
				id: '8',
				isSelectable: true,
				name: 'lib',
				children: [
					{
						id: '9',
						isSelectable: true,
						name: 'utils.ts',
					},
				],
			},
		],
	},
]

================
File: src/components/footer.tsx
================
import Link from 'next/link'
import Image from 'next/image'

export function Footer() {
	return (
		<footer className="w-full bg-[#0F0F10] border-t border-[#1A1C1E] max-w-[1200px] mx-auto">
			<div className="mx-auto max-w-[1200px] px-2 lg:px-3 py-8">
				<div className="flex flex-col gap-4 py-8">
					<div className="flex items-center justify-between">
						<div className="flex items-center gap-2">
							<Image
								src="/images/logo.svg"
								alt="Logo"
								width={46}
								height={16}
								className="w-10 h-10"
							/>
							<span className="text-md font-medium text-[#EBECED]">
								LIGHTING
							</span>
						</div>
						<nav className="hidden md:block">
							<ul className="flex items-center gap-6">
								<li>
									<Link
										href="#benefits"
										className="text-base font-medium text-[#fff] hover:text-[#fff]/80">
										Benefits
									</Link>
								</li>
								<li>
									<Link
										href="#how-it-works"
										className="text-base font-medium text-[#fff] hover:text-[#fff]/80">
										How it works
									</Link>
								</li>
								<li>
									<Link
										href="#faq"
										className="text-base font-medium text-[#fff] hover:text-[#fff]/80">
										FAQ
									</Link>
								</li>
								<li>
									<Link
										href="#pricing"
										className="text-base font-medium text-[#fff] hover:text-[#fff]/80">
										Pricing
									</Link>
								</li>
							</ul>
						</nav>
					</div>

					<div className="flex flex-col gap-2 ">
						<p className="text-[#CFD1D5] text-base leading-6 ">
							Modern product development. Simplified. Explore Lighting.
						</p>
						<p className="text-[#fff] text-base leading-6">
							Build with ❤️ by
							<a
								href="https://www.rocketmvp.io/"
								target="_blank"
								className="ml-1 text-[#46B235]">
								Rocket MVP
							</a>
						</p>
					</div>
				</div>
				<div className="mt-8 flex justify-between border-t border-[#1A1C1E] pt-8">
					<p className="text-base text-[#CFD1D5]">
						Copyright © 2025. All Rights Reserved
					</p>
					<div className="flex items-center gap-4">
						<Link
							href="https://x.com/tarunyadav9761"
							target="_blank"
							className="text-sm text-[#EBECED] hover:text-[#EBECED]/80">
							<Image
								src="/images/twitter.svg"
								alt="Twitter"
								width={16}
								height={16}
								className="w-4 h-4 text-[#fff] "
							/>
						</Link>
						<Link
							href="https://cal.com/tarunyadav/15min"
							target="_blank"
							className="text-sm text-[#EBECED] hover:text-[#EBECED]/80">
							Cal.com
						</Link>
					</div>
				</div>
			</div>
		</footer>
	)
}

================
File: src/components/hero-section.tsx
================
import Link from 'next/link'
import { ArrowUpRight } from 'lucide-react'
import { Button } from '@/components/ui/button'
import Image from 'next/image'

export default function HeroSection() {
	return (
		<section className="relative flex flex-col min-h-screen items-center justify-center bg-[#0F0F10] px-4 mb-20">
			<div className="relative z-10 mx-auto max-w-[1200px] text-center">
				<div className="mb-7 inline-flex items-center">
					<span className="mr-2 h-[8px] w-[14px] rounded-full bg-[#46B235]"></span>
					<span className="text-base text-[#FFF]">BETA 1.5 AVAILABLE NOW</span>
				</div>

				<h1 className="mb-2 text-7xl font-semibold  tracking-tight leading-[86.4px] text-[#EBECED] md:text-7xl">
					Build Better Products
					<br />
					10x Faster
				</h1>

				<p className="mb-8 text-xl text-[#B9BBC1]">
					Faster Iterations, Better Products: Simplify your workflow and get
					shipping quickly.
				</p>

				<Button className="h-14 rounded-lg bg-[#46B235] px-6 text-lg font-medium text-[#0F0F10] hover:bg-[#46b235be] inline-flex items-center justify-center group transition-transform duration-300">
					<Link href="#" className="text-[#0F0F10] font-medium leading-5 mr-2">
						Get Started
					</Link>
					<div className="w-[34px] h-[34px] font-bold bg-[#68CC58] rounded-md flex items-center justify-center transition-transform duration-300 group-hover:-translate-y-[3px] group-hover:translate-x-1">
						<ArrowUpRight className="w-6 h-6" />
					</div>
				</Button>

				<div className="absolute -bottom-60 -left-48 -z-10">
					<img
						src="/images/dotted-pattern.png"
						alt="Dotted Pattern"
						width={600}
						height={600}
						className="w-full h-full"
					/>
				</div>
			</div>

			<div className="mt-10 z-10">
				<Image
					src="/images/image.png"
					alt="Hero Image"
					width={765 + 165}
					height={644}
					className="w-full h-full"
				/>
			</div>
		</section>
	)
}

================
File: src/components/orbitin-circle.tsx
================
import { OrbitingCircles } from '@/components/ui/orbiting-circles'

export function OrbitingCirclesDemo() {
	return (
		<div className="relative mx-auto flex bg-[#131316] w-[409px] h-[409px] h-full  flex-col items-center justify-center overflow-hidden border-2 border-[#404245] rounded-xl shadow-[0px_0px_8px_0px_rgba(255,255,255,0.09)_inset]">
			<OrbitingCircles radius={150} iconSize={40} speed={0.5}>
				<Icons.icon1 />
				<Icons.icon2 />
				<Icons.icon3 />
			</OrbitingCircles>
			<OrbitingCircles iconSize={30} radius={75} reverse speed={0.5}>
				<Icons.icon3 />
				<Icons.icon5 />
				<Icons.icon6 />
			</OrbitingCircles>
		</div>
	)
}

const Icons = {
	icon1: () => (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="56"
			height="55"
			viewBox="0 0 56 55"
			fill="none"
			className="drop-shadow-sm shadow-black  rounded-full">
			<g clipPath="url(#clip0_2_2038)">
				<g filter="url(#filter0_f_2_2038)">
					<rect
						x="-17.22"
						y="5.78003"
						width="70.4538"
						height="70.4538"
						transform="rotate(-19.5839 -17.22 5.78003)"
						fill="url(#paint0_linear_2_2038)"
					/>
				</g>
				<rect
					x="0.800009"
					y="0.169912"
					width="54"
					height="54"
					rx="27"
					stroke="white"
					strokeOpacity="0.04"
				/>
			</g>
			<defs>
				<filter
					id="filter0_f_2_2038"
					x="-22.22"
					y="-22.8352"
					width="99.9933"
					height="99.9934"
					filterUnits="userSpaceOnUse"
					colorInterpolationFilters="sRGB">
					<feFlood floodOpacity="0" result="BackgroundImageFix" />
					<feBlend
						mode="normal"
						in="SourceGraphic"
						in2="BackgroundImageFix"
						result="shape"
					/>
					<feGaussianBlur
						stdDeviation="2.5"
						result="effect1_foregroundBlur_2_2038"
					/>
				</filter>
				<linearGradient
					id="paint0_linear_2_2038"
					x1="-17.22"
					y1="76.2338"
					x2="53.2338"
					y2="5.78003"
					gradientUnits="userSpaceOnUse">
					<stop stopColor="#EBCC07" />
					<stop offset="0.333333" stopColor="#EDC664" />
					<stop offset="0.666667" stopColor="#FF6200" />
					<stop offset="1" stopColor="#FF0000" />
				</linearGradient>
				<clipPath id="clip0_2_2038">
					<rect
						x="0.299999"
						y="-0.330078"
						width="55"
						height="55"
						rx="27.5"
						fill="white"
					/>
				</clipPath>
			</defs>
		</svg>
	),
	icon2: () => (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="56"
			height="56"
			viewBox="0 0 56 56"
			fill="none">
			<g clipPath="url(#clip0_2_2044)">
				<g filter="url(#filter0_f_2_2044)">
					<rect
						x="-17.09"
						y="7.09009"
						width="70.4538"
						height="70.4571"
						transform="rotate(-19.5839 -17.09 7.09009)"
						fill="url(#paint0_linear_2_2044)"
					/>
				</g>
				<rect
					x="0.930003"
					y="1.47997"
					width="54"
					height="54"
					rx="27"
					stroke="white"
					strokeOpacity="0.04"
				/>
			</g>
			<defs>
				<filter
					id="filter0_f_2_2044"
					x="-22.09"
					y="-21.5251"
					width="99.9945"
					height="99.9966"
					filterUnits="userSpaceOnUse"
					colorInterpolationFilters="sRGB">
					<feFlood floodOpacity="0" result="BackgroundImageFix" />
					<feBlend
						mode="normal"
						in="SourceGraphic"
						in2="BackgroundImageFix"
						result="shape"
					/>
					<feGaussianBlur
						stdDeviation="2.5"
						result="effect1_foregroundBlur_2_2044"
					/>
				</filter>
				<linearGradient
					id="paint0_linear_2_2044"
					x1="-17.09"
					y1="77.5472"
					x2="53.3671"
					y2="7.09344"
					gradientUnits="userSpaceOnUse">
					<stop stopColor="#EB0707" />
					<stop offset="0.333333" stopColor="#64B4ED" />
					<stop offset="0.666667" stopColor="#E600FF" />
					<stop offset="1" stopColor="#5500FF" />
				</linearGradient>
				<clipPath id="clip0_2_2044">
					<rect
						x="0.429993"
						y="0.97998"
						width="55"
						height="55"
						rx="27.5"
						fill="white"
					/>
				</clipPath>
			</defs>
		</svg>
	),
	icon3: () => (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="56"
			height="56"
			viewBox="0 0 56 56"
			fill="none">
			<g clipPath="url(#clip0_2_2050)">
				<g filter="url(#filter0_f_2_2050)">
					<rect
						x="-16.92"
						y="7.04004"
						width="70.4477"
						height="70.4444"
						transform="rotate(-19.5839 -16.92 7.04004)"
						fill="url(#paint0_linear_2_2050)"
					/>
				</g>
				<rect
					x="1.09001"
					y="1.42992"
					width="54"
					height="54"
					rx="27"
					stroke="white"
					strokeOpacity="0.04"
				/>
			</g>
			<defs>
				<filter
					id="filter0_f_2_2050"
					x="-21.92"
					y="-21.573"
					width="99.9845"
					height="99.9824"
					filterUnits="userSpaceOnUse"
					colorInterpolationFilters="sRGB">
					<feFlood floodOpacity="0" result="BackgroundImageFix" />
					<feBlend
						mode="normal"
						in="SourceGraphic"
						in2="BackgroundImageFix"
						result="shape"
					/>
					<feGaussianBlur
						stdDeviation="2.5"
						result="effect1_foregroundBlur_2_2050"
					/>
				</filter>
				<linearGradient
					id="paint0_linear_2_2050"
					x1="-16.92"
					y1="77.4844"
					x2="53.5244"
					y2="7.03668"
					gradientUnits="userSpaceOnUse">
					<stop stopColor="#EBCC07" />
					<stop offset="0.333333" stopColor="#64ED6A" />
					<stop offset="0.666667" stopColor="#00EAFF" />
					<stop offset="1" stopColor="#002BFF" />
				</linearGradient>
				<clipPath id="clip0_2_2050">
					<rect
						x="0.589996"
						y="0.919922"
						width="55"
						height="55"
						rx="27.5"
						fill="white"
					/>
				</clipPath>
			</defs>
		</svg>
	),
	icon4: () => (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="31"
			height="32"
			viewBox="0 0 31 32"
			fill="none">
			<g clipPath="url(#clip0_2_2057)">
				<g filter="url(#filter0_f_2_2057)">
					<rect
						x="-7.25"
						y="5.5"
						width="36.769"
						height="36.7656"
						transform="rotate(-19.5815 -7.25 5.5)"
						fill="url(#paint0_linear_2_2057)"
					/>
				</g>
				<rect
					x="0.729985"
					y="1.15992"
					width="30"
					height="30"
					rx="15"
					stroke="white"
					strokeOpacity="0.04"
				/>
			</g>
			<defs>
				<filter
					id="filter0_f_2_2057"
					x="-12.25"
					y="-11.823"
					width="56.9644"
					height="56.9624"
					filterUnits="userSpaceOnUse"
					colorInterpolationFilters="sRGB">
					<feFlood floodOpacity="0" result="BackgroundImageFix" />
					<feBlend
						mode="normal"
						in="SourceGraphic"
						in2="BackgroundImageFix"
						result="shape"
					/>
					<feGaussianBlur
						stdDeviation="2.5"
						result="effect1_foregroundBlur_2_2057"
					/>
				</filter>
				<linearGradient
					id="paint0_linear_2_2057"
					x1="-7.25"
					y1="42.2656"
					x2="29.5156"
					y2="5.49665"
					gradientUnits="userSpaceOnUse">
					<stop stopColor="#C2B66D" />
					<stop offset="0.333333" stopColor="#E3B44D" />
					<stop offset="0.666667" stopColor="#CCFFEB" />
					<stop offset="1" stopColor="#AA98D9" />
				</linearGradient>
				<clipPath id="clip0_2_2057">
					<rect
						x="0.229996"
						y="0.659912"
						width="31"
						height="31"
						rx="15.5"
						fill="white"
					/>
				</clipPath>
			</defs>
		</svg>
	),
	icon5: () => (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="32"
			height="32"
			viewBox="0 0 32 32"
			fill="none">
			<g clipPath="url(#clip0_2_2069)">
				<g filter="url(#filter0_f_2_2069)">
					<rect
						x="-9.73001"
						y="4.12988"
						width="39.7072"
						height="39.7072"
						transform="rotate(-19.5815 -9.73001 4.12988)"
						fill="url(#paint0_linear_2_2069)"
					/>
				</g>
				<rect
					x="0.649983"
					y="1.17994"
					width="30"
					height="30"
					rx="15"
					stroke="white"
					strokeOpacity="0.04"
				/>
			</g>
			<defs>
				<filter
					id="filter0_f_2_2069"
					x="-14.73"
					y="-14.178"
					width="60.7186"
					height="60.7188"
					filterUnits="userSpaceOnUse"
					colorInterpolationFilters="sRGB">
					<feFlood floodOpacity="0" result="BackgroundImageFix" />
					<feBlend
						mode="normal"
						in="SourceGraphic"
						in2="BackgroundImageFix"
						result="shape"
					/>
					<feGaussianBlur
						stdDeviation="2.5"
						result="effect1_foregroundBlur_2_2069"
					/>
				</filter>
				<linearGradient
					id="paint0_linear_2_2069"
					x1="-9.73001"
					y1="43.8371"
					x2="29.9772"
					y2="4.12988"
					gradientUnits="userSpaceOnUse">
					<stop stopColor="#07EB25" />
					<stop offset="0.5" stopColor="#ED64E2" />
					<stop offset="1" stopColor="white" />
				</linearGradient>
				<clipPath id="clip0_2_2069">
					<rect
						x="0.149994"
						y="0.679932"
						width="31"
						height="31"
						rx="15.5"
						fill="white"
					/>
				</clipPath>
			</defs>
		</svg>
	),
	icon6: () => (
		<svg
			xmlns="http://www.w3.org/2000/svg"
			width="32"
			height="32"
			viewBox="0 0 32 32"
			fill="none">
			<g clipPath="url(#clip0_2_2069)">
				<g filter="url(#filter0_f_2_2069)">
					<rect
						x="-9.73001"
						y="4.12988"
						width="39.7072"
						height="39.7072"
						transform="rotate(-19.5815 -9.73001 4.12988)"
						fill="url(#paint0_linear_2_2069)"
					/>
				</g>
				<rect
					x="0.649983"
					y="1.17994"
					width="30"
					height="30"
					rx="15"
					stroke="white"
					strokeOpacity="0.04"
				/>
			</g>
			<defs>
				<filter
					id="filter0_f_2_2069"
					x="-14.73"
					y="-14.178"
					width="60.7186"
					height="60.7188"
					filterUnits="userSpaceOnUse"
					colorInterpolationFilters="sRGB">
					<feFlood floodOpacity="0" result="BackgroundImageFix" />
					<feBlend
						mode="normal"
						in="SourceGraphic"
						in2="BackgroundImageFix"
						result="shape"
					/>
					<feGaussianBlur
						stdDeviation="2.5"
						result="effect1_foregroundBlur_2_2069"
					/>
				</filter>
				<linearGradient
					id="paint0_linear_2_2069"
					x1="-9.73001"
					y1="43.8371"
					x2="29.9772"
					y2="4.12988"
					gradientUnits="userSpaceOnUse">
					<stop stopColor="#07EB25" />
					<stop offset="0.5" stopColor="#ED64E2" />
					<stop offset="1" stopColor="white" />
				</linearGradient>
				<clipPath id="clip0_2_2069">
					<rect
						x="0.149994"
						y="0.679932"
						width="31"
						height="31"
						rx="15.5"
						fill="white"
					/>
				</clipPath>
			</defs>
		</svg>
	),
}

================
File: src/components/pricing-section.tsx
================
'use client'

import { ArrowUpRight } from 'lucide-react'
import { Button } from '@/components/ui/button'
import Link from 'next/link'
import { useState } from 'react'

const plans = [
	{
		name: 'Basic',
		yearlyPrice: 'Free',
		monthlyPrice: 'Free',
		description: 'Perfect for small teams or individuals starting out',
		features: ['Unlimited members', '50 public issues', 'Basic Kanban board'],
		buttonText: 'Get Started For Free',
		buttonVariant: 'ghost',
		buttonLink: '#',
	},
	{
		name: 'Pro',
		yearlyPrice: '$24.99',
		monthlyPrice: '$29.99',
		description: 'Ideal for growing teams and startups',
		features: [
			'All Basic Plan features, plus:',
			'250 private issues',
			'Customizable workflows',
			'Advanced search and filtering',
			'GitHub integration',
		],
		buttonText: 'Get Started',
		buttonVariant: 'default',
		buttonLink: '#',
		highlight: true,
	},
	{
		name: 'Enterprise',
		yearlyPrice: '$49.99',
		monthlyPrice: '$59.99',
		description: 'Designed for large organizations and complex projects',
		features: [
			'All Pro Plan features, plus:',
			'SSO (SAML)',
			'Priority support',
		],
		buttonText: 'Get Started',
		buttonVariant: 'ghost',
		buttonLink: '#',
	},
]

export default function PricingSection() {
	const [billingPeriod, setBillingPeriod] = useState<'yearly' | 'monthly'>(
		'yearly'
	)

	return (
		<section className="relative flex flex-col items-center justify-center bg-[#0F0F10] px-4 py-10 mb-10">
			<div className="mx-auto max-w-[1200px] text-center">
				<h2 className="mb-2 text-5xl font-semibold tracking-tight leading-[57.6px] text-[#EBECED]">
					Plans for Every Team
				</h2>
				<p className="mb-8 text-lg leading-[27px] text-[#EBECED]">
					Scale with ease, emphasizes the ability to grow with Lighting.
				</p>

				<div className="mb-12 inline-flex items-center gap-2 rounded-lg bg-[#131316] p-1">
					<button
						onClick={() => setBillingPeriod('yearly')}
						className={`rounded-md px-6 py-2.5 text-sm font-medium transition-all duration-300 ${
							billingPeriod === 'yearly'
								? 'bg-[#2C2D30] text-[#fff]'
								: 'text-[#5A616E] hover:text-[#fff]'
						}`}>
						Yearly Billing
					</button>
					<button
						onClick={() => setBillingPeriod('monthly')}
						className={`rounded-md px-6 py-2.5 text-sm font-medium transition-all duration-300 ${
							billingPeriod === 'monthly'
								? 'bg-[#2C2D30] text-[#fff]'
								: 'text-[#5A616E] hover:text-[#fff]'
						}`}>
						Monthly Billing
					</button>
				</div>

				<div className="grid grid-cols-1 gap-8 md:grid-cols-3 items-center">
					{plans.map((plan) => (
						<div
							key={plan.name}
							className={`relative flex flex-col rounded-2xl border border-[#2C2D30] bg-[#131316] p-8 ${
								plan.highlight ? 'h-[500px]' : 'h-[450px]'
							}`}>
							<div className="mb-8">
								<h3 className="mb-2 text-sm font-medium text-[#5A616E]">
									{plan.name}
								</h3>
								<div className="mb-2">
									<span className="text-4xl font-semibold text-[#fff]">
										{billingPeriod === 'yearly'
											? plan.yearlyPrice
											: plan.monthlyPrice}
									</span>
									{billingPeriod === 'yearly' &&
										plan.yearlyPrice !== 'Free' && (
											<span className="ml-2 text-sm text-[#46B235]">
												Save 20%
											</span>
										)}
								</div>
								<p className="text-[12px] leading-[18px] text-[#B9BBC1]">
									{plan.description}
								</p>
							</div>

							<ul className="mb-8 space-y-4">
								{plan.features.map((feature, index) => (
									<li key={index} className="flex items-center gap-2">
										<svg
											className={`h-6 w-6 ${
												plan.highlight ? 'text-[#46B235]' : 'text-[#404245]'
											}`}
											viewBox="0 0 20 20"
											fill="currentColor">
											<path
												fillRule="evenodd"
												d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
												clipRule="evenodd"
											/>
										</svg>
										<span className="text-lg leading-[27px] text-[#B9BBC1]">
											{feature}
										</span>
									</li>
								))}
							</ul>

							<div className="mt-auto">
								<Button
									className={`group h-14 w-full rounded-lg text-base font-medium transition-all duration-300 ${
										plan.highlight
											? 'bg-[#46B235] text-[#0F0F10] hover:bg-[#46b235be]'
											: 'border border-[#2C2D30] bg-transparent text-[#fff] hover:bg-[#2C2D30]'
									}`}>
									<Link
										href={plan.buttonLink}
										className="flex items-center justify-center gap-2">
										{plan.buttonText}
										{plan.highlight && (
											<div className="flex h-[34px] w-[34px] items-center justify-center rounded-md bg-[#68CC58] transition-transform duration-300 group-hover:-translate-y-[3px] group-hover:translate-x-1">
												<ArrowUpRight className="h-6 w-6" />
											</div>
										)}
									</Link>
								</Button>
							</div>
						</div>
					))}
				</div>
			</div>
		</section>
	)
}

================
File: src/components/stats-section.tsx
================
import { cn } from '@/lib/utils'
import { Users, Globe, SmilePlus, TrendingUp } from 'lucide-react'
import Image from 'next/image'

interface StatItemProps {
	icon: React.ReactNode
	value: string
	label: string
}

const StatItem = ({ icon, value, label }: StatItemProps) => (
	<div className="relative border border-[#2C2D30] w-[279px] h-[250px] flex flex-col  items-start justify-between overflow-hidden rounded-2xl bg-[#131316] p-6 transition-all shadow-[0px_0px_42px_0px_rgba(0,0,0,0.63)]">
		<div className="mb-4 rounded-full">{icon}</div>
		<div>
			<h3 className="mb-1 text-5xl font-semibold tracking-tight leading-[57.6px] text-[#fff]">
				{value}
			</h3>
			<p className="text-sm text-[#B9BBC1]">{label}</p>
		</div>
	</div>
)

export default function StatsSection() {
	const stats = [
		{
			icon: (
				<Image
					src="/images/monthly-active-user.svg"
					alt="Users"
					width={48}
					height={48}
				/>
			),
			value: '2.5M',
			label: 'Monthly Active Users',
		},
		{
			icon: (
				<Image
					src="/images/country.svg"
					alt="Countries Available"
					width={48}
					height={48}
				/>
			),
			value: '190',
			label: 'Countries Available',
		},
		{
			icon: (
				<Image
					src="/images/customer-sat.svg"
					alt="Customer Satisfaction"
					width={48}
					height={48}
				/>
			),
			value: '98%',
			label: 'Customer Satisfaction Rate',
		},
		{
			icon: (
				<Image
					src="/images/growth.svg"
					alt="YOY Growth"
					width={48}
					height={48}
				/>
			),
			value: '150%',
			label: 'YOY Growth',
		},
	]

	return (
		<section className="relative max-w-[1200px] mx-auto  py-20">
			<div className="mx-auto max-w-7xl">
				<div className="mb-20 text-center">
					<h2 className="mb-3 text-5xl font-semibold tracking-tight leading-[57.6px] text-[#fff]">
						How Companies Succeed
						<br />
						Using Our Product
					</h2>
					<p className="mx-auto opacity-80 max-w-2xl text-lg leading-[27px] text-[#EBECED]">
						The path to success starts here. See how companies are winning with
						<br />
						our product.
					</p>
				</div>
				<div className="flex flex-wrap justify-between px-5">
					{stats.map((stat, index) => (
						<StatItem key={index} {...stat} />
					))}
				</div>
			</div>
		</section>
	)
}

================
File: src/components/testimonials-section.tsx
================
import Image from 'next/image'

interface TestimonialCardProps {
	content: string
	author: {
		name: string
		username: string
		avatar: string
	}
}

const TestimonialCard = ({ content, author }: TestimonialCardProps) => (
	<div className="relative border border-[#2C2D30] flex flex-col justify-between overflow-hidden rounded-2xl bg-[#0F0F10] p-6">
		<p className="text-[#B9BBC1] text-base leading-[24px] mb-6">{content}</p>
		<div className="flex items-center gap-3">
			<div className="relative w-10 h-10 rounded-[1000px] overflow-hidden">
				<Image
					src={author.avatar}
					alt={author.name}
					fill
					className="object-cover object-center"
					unoptimized
				/>
			</div>
			<div className="flex flex-col">
				<p className="text-[#EBECED] text-lg font-medium">{author.name}</p>
				<p className="text-[#5A616E] text-base">@{author.username}</p>
			</div>
		</div>
	</div>
)

export default function TestimonialsSection() {
	const testimonials = [
		{
			content:
				"The 'EchoBass' headphones are so immersive, I missed a surprise party in my honor. Found out about it the next day",
			author: {
				name: 'Caroline Smith',
				username: 'carolinesmith',
				avatar: 'https://avatar.iran.liara.run/public/1',
			},
		},
		{
			content:
				"After using the 'GreenThumb' gardening kit, my plants are so healthy, they've started giving me life advice.",
			author: {
				name: 'Joshua Kim',
				username: 'joshuakim',
				avatar: 'https://avatar.iran.liara.run/public/2',
			},
		},
		{
			content:
				"I tried 'BrightSmile' toothpaste, and now my smile is so dazzling, it's been mistaken for a new light source.",
			author: {
				name: 'Laura Wilson',
				username: 'laurawilson',
				avatar: 'https://avatar.iran.liara.run/public/3',
			},
		},
		{
			content:
				"After getting the EasyNav GPS, I was so well-guided, I found myself at a long-lost sense of purpose. Turns out it was just the new cafe downtown, but I'm not complaining!",
			author: {
				name: 'Emily Robinson',
				username: 'emilyrobinson',
				avatar: 'https://avatar.iran.liara.run/public/4',
			},
		},
		{
			content:
				"I recently purchased a 'self-help' book from this store, and it's so motivating that even my furniture has started pursuing its dreams. My couch is currently applying for a degree in interior design, and the lamp is considering a career in enlightening people literally.",
			author: {
				name: 'Michael Thompson',
				username: 'michaelthompson',
				avatar: 'https://avatar.iran.liara.run/public/5',
			},
		},
		{
			content:
				"Ever since I tried Bob's Self-Tying Shoelaces, I've been tripping less in life and striding more into spontaneous dance-offs!",
			author: {
				name: 'Lisa Jackson',
				username: 'lisajackson',
				avatar: 'https://avatar.iran.liara.run/public/6',
			},
		},
		{
			content:
				"The 'SpeedyChef' food processor is so fast, I accidentally made dinner for the next three weeks.",
			author: {
				name: 'Kevin Brown',
				username: 'kevinbrown',
				avatar: 'https://avatar.iran.liara.run/public/7',
			},
		},
		{
			content:
				"Ever since I got the UltraClean vacuum, my cat thinks it's a new pet. She's named it 'Whirry.'",
			author: {
				name: 'Sarah Jenkins',
				username: 'sarahjenkins',
				avatar: 'https://avatar.iran.liara.run/public/8',
			},
		},
		{
			content:
				"The 'EchoBass' headphones are so immersive, I missed a surprise party in my honor. Found out about it the next day",
			author: {
				name: 'Caroline Smith',
				username: 'carolinesmith',
				avatar: 'https://avatar.iran.liara.run/public/1',
			},
		},
	]

	return (
		<section className="w-full py-24 bg-[#0F0F10]">
			<div className="mx-auto max-w-[1200px]">
				<h2 className="text-5xl font-semibold text-center text-white leading-[57.6px] tracking-tight mb-20">
					Our Users Love Us
				</h2>
				<div className="relative grid grid-cols-3 gap-6">
					{/* Left Column */}
					<div className="space-y-6 md:mt-32">
						<TestimonialCard {...testimonials[0]} />
						<TestimonialCard {...testimonials[3]} />
						<TestimonialCard {...testimonials[6]} />
					</div>
					{/* Middle Column - Starts lower */}
					<div className="space-y-6 md:mt-0">
						<TestimonialCard {...testimonials[1]} />
						<TestimonialCard {...testimonials[4]} />
						<TestimonialCard {...testimonials[7]} />
					</div>
					{/* Right Column */}
					<div className="space-y-6 mt-32">
						<TestimonialCard {...testimonials[2]} />
						<TestimonialCard {...testimonials[5]} />
						<TestimonialCard {...testimonials[8]} />
					</div>
				</div>
			</div>
		</section>
	)
}

================
File: src/components/used-companies.tsx
================
'use client'

import Image from 'next/image'

export default function UsedCompanies() {
	return (
		<section className="w-full bg-[#0F0F10] py-10 mt-16">
			<div className="max-w-[1200px] mx-auto px-4">
				<h2 className="text-center text-white text-xl mb-5">
					Powering the world&apos;s best teams
				</h2>

				<div className="relative overflow-hidden">
					<div className="flex animate-scroll gap-8 items-center">
						{/* First set of logos */}
						<div className="flex min-w-full gap-8 items-center justify-around">
							<Image
								src="/images/acme.svg"
								alt="Acme Inc"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/haven.svg"
								alt="Haven"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/terra.svg"
								alt="Terra"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/vital.svg"
								alt="Vital"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/elastic.png"
								alt="Elastic.ai"
								width={140}
								height={50}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/echo.svg"
								alt="Echo"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
						</div>
						{/* Duplicate set for seamless scrolling */}
						<div className="flex min-w-full gap-8 items-center justify-around">
							<Image
								src="/images/haven.svg"
								alt="Haven"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/terra.svg"
								alt="Terra"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/vital.svg"
								alt="Vital"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/elastic.png"
								alt="Elastic.ai"
								width={160}
								height={60}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
							<Image
								src="/images/echo.svg"
								alt="Echo"
								width={102}
								height={47}
								className="opacity-50 hover:opacity-100 transition-opacity"
							/>
						</div>
					</div>
				</div>
			</div>
		</section>
	)
}

================
File: src/hooks/use-mobile.tsx
================
import * as React from "react"

const MOBILE_BREAKPOINT = 768

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    }
    mql.addEventListener("change", onChange)
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    return () => mql.removeEventListener("change", onChange)
  }, [])

  return !!isMobile
}

================
File: src/hooks/use-toast.ts
================
"use client"

// Inspired by react-hot-toast library
import * as React from "react"

import type {
  ToastActionElement,
  ToastProps,
} from "@/components/ui/toast"

const TOAST_LIMIT = 1
const TOAST_REMOVE_DELAY = 1000000

type ToasterToast = ToastProps & {
  id: string
  title?: React.ReactNode
  description?: React.ReactNode
  action?: ToastActionElement
}

const actionTypes = {
  ADD_TOAST: "ADD_TOAST",
  UPDATE_TOAST: "UPDATE_TOAST",
  DISMISS_TOAST: "DISMISS_TOAST",
  REMOVE_TOAST: "REMOVE_TOAST",
} as const

let count = 0

function genId() {
  count = (count + 1) % Number.MAX_SAFE_INTEGER
  return count.toString()
}

type ActionType = typeof actionTypes

type Action =
  | {
      type: ActionType["ADD_TOAST"]
      toast: ToasterToast
    }
  | {
      type: ActionType["UPDATE_TOAST"]
      toast: Partial<ToasterToast>
    }
  | {
      type: ActionType["DISMISS_TOAST"]
      toastId?: ToasterToast["id"]
    }
  | {
      type: ActionType["REMOVE_TOAST"]
      toastId?: ToasterToast["id"]
    }

interface State {
  toasts: ToasterToast[]
}

const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()

const addToRemoveQueue = (toastId: string) => {
  if (toastTimeouts.has(toastId)) {
    return
  }

  const timeout = setTimeout(() => {
    toastTimeouts.delete(toastId)
    dispatch({
      type: "REMOVE_TOAST",
      toastId: toastId,
    })
  }, TOAST_REMOVE_DELAY)

  toastTimeouts.set(toastId, timeout)
}

export const reducer = (state: State, action: Action): State => {
  switch (action.type) {
    case "ADD_TOAST":
      return {
        ...state,
        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
      }

    case "UPDATE_TOAST":
      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === action.toast.id ? { ...t, ...action.toast } : t
        ),
      }

    case "DISMISS_TOAST": {
      const { toastId } = action

      // ! Side effects ! - This could be extracted into a dismissToast() action,
      // but I'll keep it here for simplicity
      if (toastId) {
        addToRemoveQueue(toastId)
      } else {
        state.toasts.forEach((toast) => {
          addToRemoveQueue(toast.id)
        })
      }

      return {
        ...state,
        toasts: state.toasts.map((t) =>
          t.id === toastId || toastId === undefined
            ? {
                ...t,
                open: false,
              }
            : t
        ),
      }
    }
    case "REMOVE_TOAST":
      if (action.toastId === undefined) {
        return {
          ...state,
          toasts: [],
        }
      }
      return {
        ...state,
        toasts: state.toasts.filter((t) => t.id !== action.toastId),
      }
  }
}

const listeners: Array<(state: State) => void> = []

let memoryState: State = { toasts: [] }

function dispatch(action: Action) {
  memoryState = reducer(memoryState, action)
  listeners.forEach((listener) => {
    listener(memoryState)
  })
}

type Toast = Omit<ToasterToast, "id">

function toast({ ...props }: Toast) {
  const id = genId()

  const update = (props: ToasterToast) =>
    dispatch({
      type: "UPDATE_TOAST",
      toast: { ...props, id },
    })
  const dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id })

  dispatch({
    type: "ADD_TOAST",
    toast: {
      ...props,
      id,
      open: true,
      onOpenChange: (open) => {
        if (!open) dismiss()
      },
    },
  })

  return {
    id: id,
    dismiss,
    update,
  }
}

function useToast() {
  const [state, setState] = React.useState<State>(memoryState)

  React.useEffect(() => {
    listeners.push(setState)
    return () => {
      const index = listeners.indexOf(setState)
      if (index > -1) {
        listeners.splice(index, 1)
      }
    }
  }, [state])

  return {
    ...state,
    toast,
    dismiss: (toastId?: string) => dispatch({ type: "DISMISS_TOAST", toastId }),
  }
}

export { useToast, toast }

================
File: src/lib/utils.ts
================
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}

================
File: .gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# env files (can opt-in for committing if needed)
.env*

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts

================
File: components.json
================
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "src/app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "iconLibrary": "lucide"
}

================
File: eslint.config.mjs
================
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;

================
File: next.config.ts
================
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;

================
File: package.json
================
{
  "name": "lighting",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "@hookform/resolvers": "^3.10.0",
    "@radix-ui/react-accordion": "^1.2.2",
    "@radix-ui/react-alert-dialog": "^1.1.5",
    "@radix-ui/react-aspect-ratio": "^1.1.1",
    "@radix-ui/react-avatar": "^1.1.2",
    "@radix-ui/react-checkbox": "^1.1.3",
    "@radix-ui/react-collapsible": "^1.1.2",
    "@radix-ui/react-context-menu": "^2.2.5",
    "@radix-ui/react-dialog": "^1.1.5",
    "@radix-ui/react-dropdown-menu": "^2.1.5",
    "@radix-ui/react-hover-card": "^1.1.5",
    "@radix-ui/react-icons": "^1.3.2",
    "@radix-ui/react-label": "^2.1.1",
    "@radix-ui/react-menubar": "^1.1.5",
    "@radix-ui/react-navigation-menu": "^1.2.4",
    "@radix-ui/react-popover": "^1.1.5",
    "@radix-ui/react-progress": "^1.1.1",
    "@radix-ui/react-radio-group": "^1.2.2",
    "@radix-ui/react-scroll-area": "^1.2.2",
    "@radix-ui/react-select": "^2.1.5",
    "@radix-ui/react-separator": "^1.1.1",
    "@radix-ui/react-slider": "^1.2.2",
    "@radix-ui/react-slot": "^1.1.1",
    "@radix-ui/react-switch": "^1.1.2",
    "@radix-ui/react-tabs": "^1.1.2",
    "@radix-ui/react-toast": "^1.2.5",
    "@radix-ui/react-toggle": "^1.1.1",
    "@radix-ui/react-toggle-group": "^1.1.1",
    "@radix-ui/react-tooltip": "^1.1.7",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.0.0",
    "cobe": "^0.6.3",
    "date-fns": "^3.6.0",
    "embla-carousel-react": "^8.5.2",
    "framer-motion": "^12.0.5",
    "input-otp": "^1.4.2",
    "lucide-react": "^0.474.0",
    "motion": "^12.0.5",
    "next": "^15.2.4",
    "next-themes": "^0.4.4",
    "react": "^18.2.0",
    "react-day-picker": "^8.10.1",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.54.2",
    "react-resizable-panels": "^2.1.7",
    "recharts": "^2.15.0",
    "sonner": "^1.7.2",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "vaul": "^1.1.2",
    "zod": "^3.24.1"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@types/node": "^20",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "eslint": "^9",
    "eslint-config-next": "15.1.6",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}

================
File: postcss.config.mjs
================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;

================
File: README.md
================
# 🚀 Free Modern SaaS Landing Page Template

A beautiful, fully responsive, and customizable SaaS landing page template built with Next.js 14, Tailwind CSS, Framer Motion, Supabase, and TypeScript. Perfect for startups, SaaS products, and digital services.

================
File: tailwind.config.ts
================
import type { Config } from 'tailwindcss'

export default {
	darkMode: ['class'],
	content: [
		'./src/pages/**/*.{js,ts,jsx,tsx,mdx}',
		'./src/components/**/*.{js,ts,jsx,tsx,mdx}',
		'./src/app/**/*.{js,ts,jsx,tsx,mdx}',
	],
	theme: {
    	extend: {
    		colors: {
    			background: 'hsl(var(--background))',
    			foreground: 'hsl(var(--foreground))',
    			card: {
    				DEFAULT: 'hsl(var(--card))',
    				foreground: 'hsl(var(--card-foreground))'
    			},
    			popover: {
    				DEFAULT: 'hsl(var(--popover))',
    				foreground: 'hsl(var(--popover-foreground))'
    			},
    			primary: {
    				DEFAULT: 'hsl(var(--primary))',
    				foreground: 'hsl(var(--primary-foreground))'
    			},
    			secondary: {
    				DEFAULT: 'hsl(var(--secondary))',
    				foreground: 'hsl(var(--secondary-foreground))'
    			},
    			muted: {
    				DEFAULT: 'hsl(var(--muted))',
    				foreground: 'hsl(var(--muted-foreground))'
    			},
    			accent: {
    				DEFAULT: 'hsl(var(--accent))',
    				foreground: 'hsl(var(--accent-foreground))'
    			},
    			destructive: {
    				DEFAULT: 'hsl(var(--destructive))',
    				foreground: 'hsl(var(--destructive-foreground))'
    			},
    			border: 'hsl(var(--border))',
    			input: 'hsl(var(--input))',
    			ring: 'hsl(var(--ring))',
    			chart: {
    				'1': 'hsl(var(--chart-1))',
    				'2': 'hsl(var(--chart-2))',
    				'3': 'hsl(var(--chart-3))',
    				'4': 'hsl(var(--chart-4))',
    				'5': 'hsl(var(--chart-5))'
    			},
    			sidebar: {
    				DEFAULT: 'hsl(var(--sidebar-background))',
    				foreground: 'hsl(var(--sidebar-foreground))',
    				primary: 'hsl(var(--sidebar-primary))',
    				'primary-foreground': 'hsl(var(--sidebar-primary-foreground))',
    				accent: 'hsl(var(--sidebar-accent))',
    				'accent-foreground': 'hsl(var(--sidebar-accent-foreground))',
    				border: 'hsl(var(--sidebar-border))',
    				ring: 'hsl(var(--sidebar-ring))'
    			}
    		},
    		borderRadius: {
    			lg: 'var(--radius)',
    			md: 'calc(var(--radius) - 2px)',
    			sm: 'calc(var(--radius) - 4px)'
    		},
    		fontFamily: {
    			sans: [
    				'var(--font-sans)',
    				'sans-serif'
    			],
    			inter: [
    				'Inter',
    				'sans-serif'
    			]
    		},
    		keyframes: {
    			'accordion-down': {
    				from: {
    					height: '0'
    				},
    				to: {
    					height: 'var(--radix-accordion-content-height)'
    				}
    			},
    			'accordion-up': {
    				from: {
    					height: 'var(--radix-accordion-content-height)'
    				},
    				to: {
    					height: '0'
    				}
    			},
    			scroll: {
    				from: {
    					transform: 'translateX(0)'
    				},
    				to: {
    					transform: 'translateX(-100%)'
    				}
    			},
    			orbit: {
    				'0%': {
    					transform: 'rotate(calc(var(--angle) * 1deg)) translateY(calc(var(--radius) * 1px)) rotate(calc(var(--angle) * -1deg))'
    				},
    				'100%': {
    					transform: 'rotate(calc(var(--angle) * 1deg + 360deg)) translateY(calc(var(--radius) * 1px)) rotate(calc((var(--angle) * -1deg) - 360deg))'
    				}
    			},
    			marquee: {
    				from: {
    					transform: 'translateX(0)'
    				},
    				to: {
    					transform: 'translateX(calc(-100% - var(--gap)))'
    				}
    			},
    			'marquee-vertical': {
    				from: {
    					transform: 'translateY(0)'
    				},
    				to: {
    					transform: 'translateY(calc(-100% - var(--gap)))'
    				}
    			}
    		},
    		animation: {
    			'accordion-down': 'accordion-down 0.2s ease-out',
    			'accordion-up': 'accordion-up 0.2s ease-out',
    			scroll: 'scroll 20s linear infinite',
    			orbit: 'orbit calc(var(--duration)*1s) linear infinite',
    			marquee: 'marquee var(--duration) infinite linear',
    			'marquee-vertical': 'marquee-vertical var(--duration) linear infinite'
    		}
    	}
    },
	plugins: [require('tailwindcss-animate')],
} satisfies Config

================
File: tsconfig.json
================
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}



================================================================
End of Codebase
================================================================
